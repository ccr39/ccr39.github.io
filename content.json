{"meta":{"title":"CCR39のLazyNest","subtitle":"QAQ","description":"交流学习用","author":"ccr39","url":"http://ccr39.github.io"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2023-01-07T02:17:57.992Z","comments":false,"path":"about/index.html","permalink":"http://ccr39.github.io/about/","excerpt":"","keywords":null,"text":"[CCR39のLazyNest] 与&nbsp; CCR39&nbsp; （ ccr ミク ） 对话中... bot_ui_ini()","raw":null,"content":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"client/index.html","permalink":"http://ccr39.github.io/client/","excerpt":"","keywords":null,"text":"直接下载 or 扫码下载：","raw":null,"content":null},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2024-12-13T05:58:37.503Z","comments":true,"path":"comment/index.html","permalink":"http://ccr39.github.io/comment/","excerpt":"","keywords":null,"text":"念两句诗 前方还有很长的路要走，我们都加油吧，一言为定。 ——《CLANNAD》 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2023-01-20T12:20:52.575Z","comments":false,"path":"bangumi/index.html","permalink":"http://ccr39.github.io/bangumi/","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2023-01-07T02:19:11.355Z","comments":false,"path":"donate/index.html","permalink":"http://ccr39.github.io/donate/","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2023-01-07T03:52:52.178Z","comments":true,"path":"links/index.html","permalink":"http://ccr39.github.io/links/","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"lab/index.html","permalink":"http://ccr39.github.io/lab/","excerpt":"","keywords":null,"text":"sakura主题balabala","raw":null,"content":null},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2023-04-01T14:19:57.703Z","comments":false,"path":"music/index.html","permalink":"http://ccr39.github.io/music/","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2023-01-07T02:19:57.757Z","comments":true,"path":"tags/index.html","permalink":"http://ccr39.github.io/tags/","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2023-01-07T02:20:26.877Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://ccr39.github.io/theme-sakura/","excerpt":"","keywords":null,"text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","raw":null,"content":null},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2022-12-09T13:40:31.610Z","comments":true,"path":"rss/index.html","permalink":"http://ccr39.github.io/rss/","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"video","date":"2022-12-09T16:00:00.000Z","updated":"2022-12-10T14:05:37.014Z","comments":false,"path":"video/index.html","permalink":"http://ccr39.github.io/video/","excerpt":"","keywords":null,"text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","raw":null,"content":null},{"title":"","date":"2022-12-10T12:48:36.726Z","updated":"2022-12-10T12:48:36.726Z","comments":true,"path":"live2dw/assets/index.json","permalink":"http://ccr39.github.io/live2dw/assets/index.json","excerpt":"","keywords":null,"text":"{\"version\":\"1.0.0\",\"model\":\"model.moc\",\"textures\":[\"textures/animal-costume-racoon.png\"],\"layout\":{\"center_x\":0,\"center_y\":-0.05,\"width\":2},\"hit_areas_custom\":{\"head_x\":[-0.35,0.6],\"head_y\":[0.19,-0.2],\"body_x\":[-0.3,-0.25],\"body_y\":[0.3,-0.9]},\"motions\":{\"idle\":[{\"file\":\"motions/Breath1.mtn\"},{\"file\":\"motions/Breath2.mtn\"},{\"file\":\"motions/Breath3.mtn\"},{\"file\":\"motions/Breath5.mtn\"},{\"file\":\"motions/Breath7.mtn\"},{\"file\":\"motions/Breath8.mtn\"}],\"sleepy\":[{\"file\":\"motions/Sleeping.mtn\"}],\"flick_head\":[{\"file\":\"motions/Touch Dere1.mtn\"},{\"file\":\"motions/Touch Dere2.mtn\"},{\"file\":\"motions/Touch Dere3.mtn\"},{\"file\":\"motions/Touch Dere4.mtn\"},{\"file\":\"motions/Touch Dere5.mtn\"},{\"file\":\"motions/Touch Dere6.mtn\"}],\"tap_body\":[{\"file\":\"motions/Sukebei1.mtn\"},{\"file\":\"motions/Sukebei2.mtn\"},{\"file\":\"motions/Sukebei3.mtn\"},{\"file\":\"motions/Touch1.mtn\"},{\"file\":\"motions/Touch2.mtn\"},{\"file\":\"motions/Touch3.mtn\"},{\"file\":\"motions/Touch4.mtn\"},{\"file\":\"motions/Touch5.mtn\"},{\"file\":\"motions/Touch6.mtn\"}]}}","raw":null,"content":null}],"posts":[{"title":"只身陷入心理治疗骗局！！深扒“SCIO全科生物反馈测疗仪”与“心理AI智能检测”底裤。","slug":"SCIO","date":"2024-12-13T07:14:00.000Z","updated":"2024-12-13T07:15:20.658Z","comments":true,"path":"生活/SCIO/","link":"","permalink":"http://ccr39.github.io/%E7%94%9F%E6%B4%BB/SCIO/","excerpt":"","keywords":null,"text":"转载于本人知乎：只身陷入心理治疗骗局！！深扒“SCIO全科生物反馈测疗仪”与“心理AI智能检测”底裤。 - 知乎 故事的开始： 本人去往医院作心理治疗，主治医生拿出一个小条，在”AI 心理治疗-情绪“上画上一个勾勾。我心想：AI 治疗？现在都这么高级了吗？随后便被告知要治疗780元的诊断费用。。。。算了，尝试高科技治病，能治好不嫌贵。开始治疗时，医生在我四肢和头部处绑上检测用的软环，在一旁躺下，接下来就开始不断点击电脑。由于没有任何感觉，我甚至不知道治疗在什么时候开始的，本人早上起的很早，于是直接睡下了。大概四十分钟后，大夫告诉说可以起来了，我还心想，这到底是发生了什么，完全没有感觉就完成治疗了。 大概就长这个样子，旁边有个供躺着的沙发，另外软环用线连接着仪器 等到打印报告时直接让我傻眼了：报告上赫然写着“SCIO 数字治疗”结果单底下不光列出了“情绪心理指数”、“第一次治疗记录”最逆天的是包括72项“情绪与心理反应性细项”，它明确的列出了72项有关心理的指标，并对每一项指标进行了定量化与说明。由于是在专业医院做的专业检测，我也没有多想什么，把报告给大夫看了看，大夫根据报告中的内容对我进行了诊断。 诸如此类项目，每一个都有明确的指标 揭穿” AI智能检测 “的真像等回到家我才意识到问题的不对： 首先，无论是检测还是治疗，都需要一定介质来采集生物信息，之前经颅磁利用的是磁场，而这个“AI治疗”只使用几个环，它是通过什么采集信息，还能保证信息如此精确。（既分类、又定量） 其次，在网络上搜索“AI治疗”出现的信息均为使用大预言模型进行治疗，这个“AI治疗”到底哪里用到AI了。 然后，大夫根据报告给出的治疗咨询疑似利用了巴纳姆效应（Barnum effect），说白了就是得出的结论很笼统，类似算命师傅解卦。 于是，我在网络上查询 SCIO 相关字样，但是几乎没有得到任何相关的信息。换用“SCIO生物反馈仪”作为关键词在中文互联网上搜索，终于查询到了知乎上的一篇文章，请先阅读该文章： 号称不采一滴血就能检测上万种指标的“SCIO生物反馈仪”，到底是啥货？ 除此之外，只有寥寥无几的几篇关于这个仪器的信息。 有趣的是，当我在知乎、抖音上输入SCIO生物反馈仪时，搜索框中的相关搜索选项中出现了： “SCIO生物反馈仪 智商税 ”“ SCIO生物反馈仪 有用吗”相关字样。（看来被坑的不止我一个） 总结上述文章与已知消息我们得到以下真相： 首先，在官网上对 SCIO 全科生物反馈测疗仪的描述是： 依据量子物理学和拓扑学的原理，通过非侵入性的无痛、无副作用的电化学极谱分析和测量，通过计时电势分析法等运算方法，检测身体11000多项指标，从而获得早期风险提示，是一种集健康监测与干预调理为一体的具有国际先进水平的医疗器械，仪器具有极高的灵敏度，能检测到0.2µV极其微弱的人体生物能变化，从而精确的捕捉到任何早期疾病风险，提早预防。20多年来获得欧盟，美国，澳大利亚，加拿大，韩国等众多国家食药局的认证，为很多国际知名人士指定专项健康管理系统，2008年奥运会指定合作项目，为奥运冠军保驾护航。 事实上，这个 SCIO 全科生物反馈测疗仪，是由一个名为Willian C. Nelson的美国人发明的机器，最初发明该机器时涉及虚假宣传 ，使其本人遭受逮捕，被迫逃往匈牙利（记住这个，后面要考）。之后由于FDA通过医疗器械调整法案，大大降低注册难度，SCIO 成功注册，但之后，有微软软件工程师在查看其后台数据库后，指出其检查结果是随机给出的。（关于详情信息及来源，在上述文章中有提到） 国外的版本 而国内的 SCIO 全科生物反馈测疗仪，是在外国版本中发展而来，但是国内的炒作鬼才将其包装成了现在更加高大上的样子，并且卖出高价。 我们找到了这个机器的[注册号：国械注进20162093114](https://zhuanlan.zhihu.com/p/12090143389/。发现该器械最初应该在2016年注册，而在2022年进行了批准。我们可以看到，注册人为**匈牙利某公司人员，印证了国内外SCIO为同源。** 产品的注册信息，注册号：国械注进20162093114 但事实上，这个在这之前这个产品还有另一个注册号：国食药监械(进)字2012第2213148号（产品最早在2012年引入，08年奥运会一事显然不合理）再变更信息中，代理人名称变更为北京瑞蜜达国际生物科技有限公司。这样，两者就基本可以对上来了。 国食药监械(进)字2012第2213148号 反思与总结在查询资料过程中我们可以发现一个有意思的事情：那就是”国械注进20162093114“应该是16年九月份就发布了注册申请，而直到22年才再次被批准，这是为什么？ 直到我看到，一个名为犀贝众齿联的公司（SCIO国内的新代理商）发布的文章： SCiO这款产品真的有他们自己说的这么强大么？ 里面提到： 犀贝，作为一直以助力大健康行业的发展为理念，这次与山西省合作的「SCIO无创生物反馈人体检测」项目，就是人工智能与医疗深度融合的一项。 再结合我自己的经历才终于明白：合着是把好几年前的冷饭顺着AI的东风再炒起来，所以归根到底这个系统根本与AI毫无关系。而为了获批，这之中的利益关系我们又不得而知。 但是，仅仅是运用在心理治疗上也就没什么了，最令人害怕的事情是：本人再抖音上看到了癌症将患者使用该仪器的视频，深感痛心。 总的来说，本人算是交了次智商税。而和我去同一门诊的人不在少数。很难想象这种在网上都很难查到资料的器械被我碰到了。。。写这篇文章只希望能为中文互联网增加一点资料，至少不是什么都查不到了。。。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"生活","slug":"生活","permalink":"http://ccr39.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://ccr39.github.io/tags/%E6%9D%82%E8%B0%88/"}]},{"title":"Restart:My Blog","slug":"2024-12-13","date":"2024-12-13T06:19:00.000Z","updated":"2024-12-13T07:11:02.286Z","comments":true,"path":"生活/2024-12-13/","link":"","permalink":"http://ccr39.github.io/%E7%94%9F%E6%B4%BB/2024-12-13/","excerpt":"","keywords":null,"text":"有关为什么很久没有维护博客： 学业需要，没有时间来进行维护。 域名过期，续费域名需要一定费用。 原来的本地环境丢失，需要重新搭建环境。 懒。 有关博客有那些功能失修： 域名无法使用，因此沿用 Github 静态代理的网址：https://ccr39.github.io/ 部分图片失效。 部分内容或资源失效。 静态代理网络原因可能导致卡顿或部分时间上不去。 听歌系统有时抽风显示不出来。 有关博客的维修： 使用科学上网可以得到最佳的体验。 评论系统由于部署在 vercel 上，而 vercel 被墙，因此重新部署至 netlify 目前已经可以正常使用。 重新替代了部分图片。 目前大部分功能已经恢复。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"生活","slug":"生活","permalink":"http://ccr39.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://ccr39.github.io/tags/%E6%9D%82%E8%B0%88/"}]},{"title":"图床的使用与推荐","slug":"picbed","date":"2023-01-20T12:21:32.000Z","updated":"2024-12-13T05:57:34.291Z","comments":true,"path":"技术/picbed/","link":"","permalink":"http://ccr39.github.io/%E6%8A%80%E6%9C%AF/picbed/","excerpt":"","keywords":null,"text":"一、了解图床引用百度的话： 图床就是专门用来存放图片，同时允许你把图片对外连接的网上空间。 简单来说，我们在网上看到的所有的信息都是要储存在服务器里面的，那么允许我们上传图片，并且生成网上链接供给他人观看此图片的空间，就叫做图床。 图床分为很多种，你可以把图片放在自己的服务器&#x2F;云服务器中，并生成链接。也可以使用他人提供的服务器生成的链接，服务器的不同也会造成图片的访问速度不同，同时可能还存在一些大小限制。 二、使用图床图床有什么用？要知道，有的时候部分网页时不支持上传图片的，如某些论坛，他们不支持图片上传，因此你需要预先将图片上传到其他服务器，并生成图床链接。 还有的时候，如你在写 web 脚本，博客，此时的图片信息一般也使用图床。 下面我将演示图片的上传，以及生成相应链接。 1、首先，我们打开提供图片上传的网站（图床网站，这里以 sm.ms 为例） 2、按照提示注册账号3、上传图片直接将图片拖动到页面中，或预览文件，并选择图片。 接下来点击上传。 4、获取图片链接上传成功后在下方点击复制链接即可。 这里大家如果不明白复制哪一个，就先点击上面的 Image URL 再复制出现的链接即可。 这只是 sm.ms 的用法，其他的图床网站均类似，最后均选择复制图片URL。 三、图床网站的推荐注意，这里只涉及提供图床网站的推荐，并不包含自建图床，对于图床的一些进阶使用，我会再写一篇文章进行叙述。 在上面提到过图片的加载速度与图床有关，因此使用一个好的图床实分重要，同时，你上传的的图片有可能被删除，图床网站也有可能跑路，因此图床的稳定性也很重要。 这里提醒大家：不要上传违法照片 下面我推荐两个网站： 1、 sm.ms这是上面提到的网站，服务器在国外，之前被国内墙过，被墙的图床生成的图片在国内也无法显示。 其使用了新网站Image Upload - SM.MS - Simple Free Image Hosting (smms.app)，新网站解决了被墙的问题。 新用户注册免费使用 5GB 的空间，每张图片最大 5MB ，每次最多上传十张图片。 由于在国外，其图片加载速度一般，因此如果加载大量图片不建议使用，但是十分稳定，在少量使用时成为首选。 如果想要追求更高速度可以继续阅读下文第四章。 2、路过图床这是国内的网站，最大单张支持10 MB，在国内加载速度良好。 但是路过图床不允许上传二次元图片，并且会对上传的违法图片进行删除。 3、图床 imgloc.com最大 6 MB 图片大小，在国内的速度同样良好。 相比于路过图床，支持上传二次元图片，但是也会对违法图片进行删除。 四、使用 wsrv.nl 对图片访问加速1、介绍werv.nl 是一个十分强大的提供图像缓存和调整大小服务的工具。 他会先把图片进行缓存，同时你可以使用它对图片进行编辑与操作。 因为他的CDN由Cloudflare提供，而Cloudflare会对全球访问进行加速，因此我们可以用 werv.nl 对图片进行缓存，从而进行加速的效果。 利用这一方法，我们可以解决图床被墙，访问慢，甚至防盗链等问题。 2、使用详细使用已经编辑图像请阅读官方文档，我们只介绍缓存图片的方法。 在原来的图片链接前加上： https://images.weserv.nl/?url= 即可完成缓存，接下来只要使用组合成的新链接即可。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"技术","slug":"技术","permalink":"http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"工具","slug":"工具","permalink":"http://ccr39.github.io/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"Git 的入门（二）：Git 的常用命令","slug":"git-2","date":"2023-01-20T08:23:34.000Z","updated":"2024-12-13T06:07:22.145Z","comments":true,"path":"技术/git-2/","link":"","permalink":"http://ccr39.github.io/%E6%8A%80%E6%9C%AF/git-2/","excerpt":"","keywords":null,"text":"一、设置用户签名当我们使用 Git 前，首先要设置自己的用户签名。 1、基本语法在任意控制台下输入： git config --global user.name 用户名 git config --global user.email 邮箱 注意，在此处设置的邮箱并不一定为真实邮箱， Git 也并不会验证其真实性。 同时，此邮箱与将来使用的 GitHub 没有关系。 但是最好用自己创建 GitHub 的邮箱，不然提交代码没有小绿点！ 2、用户签名所在位置在 Git 设置的用户签名会保存在C:\\Users\\你当前使用的用户\\.gitconfig 当我们尝试打开此文件可以看到 [user] name = 用户名 email = 邮箱 二、初始化本地库1、基本语法git init 2、具体用法在我们的工作区文件夹下打开 Git，并执行代码进行初始化本地库。 如果文件夹没有进行初始化，那么 Git 将没有权限修改文件。 执行完毕后，Git 将在文件夹下生成名为.git的文件夹（如果没有，是因为此文件夹被系统自动隐藏，请开启查看隐藏的文件） 三、将文件添加&#x2F;删除到暂存区1、基本语法添加命令： git add . git add 文件名 删除命令： git rm --cached 文件名 rm .git/index 2、具体用法添加命令：将工作区的文件添加到暂存区，其中第一行指令为将工作区所有文件添加到暂存区，第二行指令为将指定文件添加到暂存区。 删除命令：第一行为将某文件从暂存区移除，暂存区实质是.git目录下的index文件，只要将此文件删除，那么就可以认为暂存区被清空（即第二行代码）。 四、提交到本地库1、基本语法提交暂存区到本地仓库中: git commit -m [message] [message] 可以是一些备注信息。 提交暂存区的指定文件到仓库区： $ git commit [file1] [file2] ... -m [message] -a 参数设置修改文件后不需要执行 git add 命令，直接来提交 $ git commit -a 2、具体用法使用提交命令提交到本地库中的文件不能再次删除。 五、查看本地库状态1、基本语法git status 2、具体用法当工作区文件没有在暂存区找到时，会提示： $ git status On branch master Untracked files: (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed) new3.txt 当我们使用命令将文件添加到暂存区，提示： $ git status On branch master Changes to be committed: (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage) new file: new3.txt 代表我们还未将文件提交本地库，再次执行提交本地库的命令，会提示： $ git status On branch master nothing to commit, working tree clean 表明文件已经全部提交到本地库。 六、查看历史版本1、基本语法git reflog 查看精简版本信息 git log 查看版本信息 2、具体用法使用git reflog可以查看本地库中的各个版本号前七位，以及该版本的备注信息，以及当前版本指向的本地库中的版本。 使用git log咳哟看到本地库中各版本完整的版本号，提交者及邮箱，提交日期以及备注信息。 如: $ git log commit c1c925dffc5b57bdb82b22d0d9ae18c8d5cf141f (HEAD -&gt; master) Author: ccr39 &lt;1632145835@qq.com&gt; Date: Fri Jan 20 15:44:41 2023 +0800 测试版本 commit 后的就是版本号。 七、进行版本穿梭1、基本语法git reset --hard 版本号/版本号前七位 2、具体用法使用版本穿梭命令进行版本穿梭。我们可以再次使用git reflog查看版本信息。 观察到新生成了一个日志信息，以及当前指针已经指向穿梭到的版本号。 $ git reflog c845da5 (HEAD -&gt; master) HEAD@&#123;0&#125;: reset: moving to c845da5 新生成的版本信息 c1c925d HEAD@&#123;1&#125;: commit: 测试版本 4738829 HEAD@&#123;2&#125;: commit: second c845da5 (HEAD -&gt; master) HEAD@&#123;3&#125;: commit (initial): first 当前指针指向的版本 我们可以再次验证本地库的文件状态，发现本地库中的文件已经回到原来版本的状态。 实际上，指针先指向了 master 分支，再指向了我们的相应版本。 我们可以在.\\.git\\HEAD看到： ref: refs/heads/master 表明指针在指向 master。 再次打开.\\.git\\refs\\heads\\master，可以看到，在 master 文件中正保存了当前的版本号。表明 master 版本指向了我们当前的版本。 实际上，Git 切换版本的实质是移动 HEAD 指针。 在刚刚的案例中：HEAD -&gt; master（分支）-&gt; 版本。通过移动指针指向不同的分支与版本，即可完成版本控制。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"技术","slug":"技术","permalink":"http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"工具","slug":"工具","permalink":"http://ccr39.github.io/tags/%E5%B7%A5%E5%85%B7/"},{"name":"编程","slug":"编程","permalink":"http://ccr39.github.io/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"Git 的入门（一）：Git 的基本概念以及 Git 命令行的使用","slug":"git-1","date":"2023-01-09T02:35:27.000Z","updated":"2024-12-13T06:07:12.809Z","comments":true,"path":"技术/git-1/","link":"","permalink":"http://ccr39.github.io/%E6%8A%80%E6%9C%AF/git-1/","excerpt":"","keywords":null,"text":"Git 是 Linux 之父 Linus 为维护 Linux 社区所开发的一款分布式版本控制工具。 学会使用 Git 能够为我们带来很大的帮助，接下来我就来简单带大家了解 Git 这个工具。 一、版本控制工具刚才我们说过：“Git 是一款分布式代码版本控制工具” 因此，让我们先来了解代码版本控制工具是什么。 我们想象以下场景： 如果你在写一篇文章，在写完后你又经过了多次的修改，此时我们就习惯于把每个版本都复制下来，保存副本，这样当我们文章出现问题时，就可以对比以前的版本查找问题所在。 在上面的的情景中，我们对文章不同版本的拷贝就可以看作是对这篇文章进行了版本控制，但是大家也能轻而易举的发现这样的问题所在，也就是这种版本控制的方法过于繁琐，完全不优雅，而且在实际中，协同工作十分常见，这时就需要大家同时对一个项目进行版本控制。 因此，版本控制工具就孕育而生。 集中式版本控制工具在对我们的主人公 Git 所属于的分布式版本控制工具介绍之前，请先让我们了解集中式版本控制工具（例如 CVS 及 SVN）。 我们来看看集中式的版本控制工具是如何进行协同工作的版本控制的： 集中式的版本控制系统，所有的版本库是放在中央服务器中的，也就是说我们每一次的修改上传都是保存在中央服务器中的。中央服务器就是个大仓库，大家把产品都堆里面，每一次需要改进和完善的时候，需要去仓库里面把文件给提出来，然后再操作。 这种做法也存在弊端，如：当中央服务器，或网络出现故障时，大家就无法再对我们的代码进行版本控制，因此导致他们在故障的这段时间，谁都无法继续进行工作。 分布式版本控制工具为了解决集中式版本控制工具的种种弊端，分布式版本控制工具孕育而生。所谓分布，就是把版本库整个克隆到本地，让每台计算机上都还有一个完整的版本库。这样，即使在断网的环境下，我们也可以进行工作。 这时，如果我们想进行协同工作时，仅需要把最新的版本库共享给对方就能保证每个人的版本保持最新。 但是这里面有个问题，就是一个团队很大的情况下，大家都去修改，到底找谁同步版本库，不乱套了嘛。而且，大的开发项目也不是简单的两台计算机之间的版本互推就可以得到完整的版本库的。所以，分布式版本控制系统中通常也会有一台充当“中央服务器”的计算机，被称为远程库（如：GitHub、码云）。 读到这，您可能觉得，又绕回到集中式版本管理系统了。但其实，两者间存在着本质区别，即集中式版本工具必须在中央服务器内才能进行版本控制，而分布式版本控制工具不然。而且，分布式版本控制依靠的远程库，一般来说几乎不可能出现故障。 二、Git 的基本原理 Git 的使用流程是：工作区&gt;&gt;暂存区&gt;&gt;本地仓库&gt;&gt;远程仓库 工作区：即我们在电脑里储存项目的目录。 暂存区：准备进行版本保存的文件列表。 本地仓库：在本地保存的版本控制后的文件列表。 远程仓库：基于网络服务器的远程代码仓库（代码托管平台）。 局域网中的远程仓库 GitLab：在局域网（如：校园网）中搭建的远程库。 互联网中的远程仓库 GitHub：Git 官方的搭建远程仓库。 Gitee：国内版的 GitHub。 三、Git 的安装进入 Git 官网，根据不同操作系统进行下载。（建议下载最新版） 安装选项在这里进行跳过，我的建议是：如果你不知道选项对应的是什么意思请直接选择使用默认设置。 详细的安装选项解释视频参考：尚硅谷 Git 安装和客户端的使用_哔哩哔哩 四、Git 命令行的基本使用在完成安装 Git 后，在任意文件夹内右键，点击 Git Bash Here 以打开命令行。 进入到 Git 的命令行，由于 Git 与 Linux 是创作者是以为，所以，Git 支持几乎所有的 Linux 的指令，下面我简单列举常用的 Linux 指令。 指令 功能 cd 路径 进入对应路径，支持输入相对路径 ls 输出当前目录下的所有文件 touch 文件名 在当前目录创建文件 cat 文件名 显示当前目录中的文件的内容 vim 文件名 使用 vim 对当前目录下的文件进行编辑 cp 文件1 文件2 创建名为文件2的文件1副本 rm 文件名 删除文件 mkdir 文件夹名 创建文件夹 接下来介绍在 Git 命令行中的复制粘贴快捷按键 快捷键 功能 Ctrl + Insert 复制 ShIft + Insert 粘贴 如果你不习惯使用此指令，可以使用以下方法把复制&#x2F;粘贴的快捷键改为Ctrl+Shift+C/V 首先打开Git Bash界面，右键单击标题栏，可以看到option...这个选项，点进去（如下图）。在keys标签下面的ShortCuts中，第一个复选框前面的对勾去掉并点击Apply+Save，即可不使用Ctrl/Shift+Insert复制粘贴了，之后勾选 Ctrl+Shift+letter shortCuts ，就可以使用Bash终端常用的复制粘贴快捷键Ctrl+Shift+C/V。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"技术","slug":"技术","permalink":"http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"工具","slug":"工具","permalink":"http://ccr39.github.io/tags/%E5%B7%A5%E5%85%B7/"},{"name":"编程","slug":"编程","permalink":"http://ccr39.github.io/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"【Galgame】【PC/安卓直装】亚托莉—我挚爱的时光／ATRI -MY DEAR MOMENTS","slug":"Gal-Atri","date":"2023-01-08T07:59:33.000Z","updated":"2024-12-13T05:56:24.521Z","comments":true,"path":"资源/Gal-Atri/","link":"","permalink":"http://ccr39.github.io/%E8%B5%84%E6%BA%90/Gal-Atri/","excerpt":"","keywords":null,"text":"一、游戏介绍《ATRI -My Dear Moments-》是由 ANIPLEX.EXE 和 Frontwing、枕社(The pillow) 共同制作，并由 ANIPLEX.EXE 发行的一部视觉小说游戏。 二、剧情介绍在不远的未来，海平面原因不明地急速上升，导致了地表多数都沉入海中。 小时候因为事故而失去一条腿的少年・斑鸠夏生，厌倦了都市的生活，移居到了海边的乡村小镇。曾经身为海洋地质学家的祖母留给他的、就只有船、潜水艇还有债务。夏生为了取回“失去的未来”，与迷之讨债人凯瑟琳一起，潜海前往据说保存着祖母遗产的海底仓库。在那里，他遇到了一位沉睡在如同棺材一般装置中不可思议的少女“亚托莉”。她是一位构造精密到与人类别无二致，而又丰富感情的机器人。从海底被打捞起来的亚托莉如是说到。“我想完成主人留给我的最后的命令。在此之前，我会成为夏生先生的腿！”在一个逐渐沉入海中的平和小镇，少年和机器人少女的难忘夏日就这么开始了。 三、游戏CG 四、游戏攻略（谨慎观看）游戏共有三个选择支，分别为： 「成为你的右腿！」一章，第一次带阿托莉去市场时，凯瑟琳要求让阿托莉跟着她(把亚托莉交出去 \\ 亚托莉先放我这)。 「日志」一章，晚上从学校返回船上时选择 是否对亚托莉动手动脚 (静静地看着她 \\ 吻她)。 「被占据的学校」一章，从船上赶去学校时，选择(捡起鞋子 \\ 放着不管)。 三个选择支分别选 「 亚托莉先放我这」「 吻她」「 捡起鞋子」 可达成HE。 任一选择支选错即为BE (BE结局很短)。 HE与BE均达成后解锁TE。 五、资源分享请先观看：【索引】下载 Galgame 资源须知 请直接点击代码框右上角的图标进行复制，复制后的文本如果带有： 著作权归作者所有。 商业转载请联系作者获得授权，非商业转载请注明出处。 作者: ccr39 链接：ccr39.love 来源：CCR39のLazyNest 请先将这段文字删去，仅保留剩下的文字。 解压密码已经在文件名中标出，但解压密码不包含文件后缀，如.rar .zip，等。 PC 秒传链接： dd0869c481c2f5bf64f948911bf31ab0#3795797161#ATRI-PC密码 穹妹的黑兔布偶.rar 安卓直装 秒传链接： 5706f609b6b91861f2ac2c1333379836#996952426#亚托莉—我挚爱的时光.apk import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"资源","slug":"资源","permalink":"http://ccr39.github.io/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"Galgame","slug":"Galgame","permalink":"http://ccr39.github.io/tags/Galgame/"},{"name":"PC","slug":"PC","permalink":"http://ccr39.github.io/tags/PC/"},{"name":"安卓直装","slug":"安卓直装","permalink":"http://ccr39.github.io/tags/%E5%AE%89%E5%8D%93%E7%9B%B4%E8%A3%85/"}]},{"title":"【Galgame】【PC/KRKR】纸上魔法使","slug":"Gal-zsmfs","date":"2023-01-08T07:45:22.000Z","updated":"2024-12-13T05:56:40.933Z","comments":true,"path":"资源/Gal-zsmfs/","link":"","permalink":"http://ccr39.github.io/%E8%B5%84%E6%BA%90/Gal-zsmfs/","excerpt":"","keywords":null,"text":"一、游戏介绍《纸上的魔法使》（日语：紙の上の魔法使い）是由ウグイスカグラ开发，并于2014年12月19日发售的一部GalGame，也是该社的处女作。该作由ルクル负责剧本，桐葉负责原画，讲述了一个略带奇幻色彩的恋爱故事。 二、剧情介绍在某个岛上有一座规模略小的图书馆。这座图书馆是专门为了某个少女而建造的，游行寺家的私人图书馆。这座图书馆里有很多的罕见的书物，如果是书虫的话，那就绝对不会存在比这里还要爱不释手的地方。而，在这般首屈一指的私人图书馆里，住着几位出众且愉快的住人。 热爱图书的尼特少女·游行寺夜子。毒舌，冷淡的妹妹·月社妃。借住于图书馆的天然少女·伏见理央。还有一位被这背后的秘密而吸引过来的侦探少女·日向彼方。 他们就宛如被什么而引导着一样，互相邂逅——随后又以“喜爱书”这一点为契机，开始了属于他们的青春。一开始的图书馆虽然寂寞单调，可自主人公一行人住进来之后这座图书馆就变得渐渐热闹了起来。在不知不觉中——他们之间的关系变的亲密起来，达到了所谓青梅竹马的程度。 时光飞逝，2年后。因家庭原因，主人公离开了这座岛屿。而这次，主人公久违的回到了那座图书馆。 与6年前相同这里还和以前一样，无论是图书馆还是亲爱的青梅竹马们都没有发生太大的变化。可是，那在6年前未曾得知的“图书馆的秘密”这次却等待着主人公去揭晓它。 「——出现在书中之事，会在现世中再现。无论那是何等荒谬之事」「——出现在书中之事，会在现世中再现。无论那是何等荒谬之事」 如果是酸酸甜甜的恋爱系小说的话，那就会发生宛如飘渺的爱情罗曼史。又假如那是惊讶重重的幻想系小说的话，到了明天就会有吸血鬼出现在你的面前。而碰到了略惊悚的恐怖系物语的话，你的身后就会有幽灵在向你招手。 「这就是所谓的「这就是所谓的“魔法之书”“魔法之书”」」 这是一个被小清新的青春与苦闷焦躁的感情所动摇的，某个小小图书馆的物语…… 游行寺夜子的逞强，月社妃的可爱，伏见理央的坚强，日向彼方的耀眼感……准备好——来一场你与“书”的恋爱吧。 三、游戏CG 四、游戏攻略注：全部角色（克丽索贝莉露？）攻略完毕后才能激活预约特典补丁。 游行寺夜子◆SAVE01对钟爱朋友的，极致的友谊◆SAVE02可最讨厌你◆SAVE03为了夜子，返还撕掉的书页夜子 END 伏见理央◆SAVE01开始对钟爱少女的，极致的爱意理央 END 月社妃◆SAVE02开始可最喜欢你妃 END 克丽索贝莉露◆SAVE03开始为了自己，阅读撕掉的书页◆SAVE04不撕毁魔法之书克丽索贝莉露 END ◆SAVE04开始撕毁魔法之书普通 END（彼方） 五、资源分享请先观看：【索引】下载 Galgame 资源须知 请直接点击代码框右上角的图标进行复制，复制后的文本如果带有： 著作权归作者所有。 商业转载请联系作者获得授权，非商业转载请注明出处。 作者: ccr39 链接：ccr39.love 来源：CCR39のLazyNest 请先将这段文字删去，仅保留剩下的文字。 解压密码已经在文件名中标出，但解压密码不包含文件后缀，如.rar .zip，等。 PC 秒传链接： 4ed25fa122220cd0189dfe35f991841e#2777077378#PC 密码 acgngame.7z KRKR 秒传链接： 76ea3b5f9e0f6b9bbd59ad464212106d#945523634#KRKR 密码 acgngame.7z import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"资源","slug":"资源","permalink":"http://ccr39.github.io/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"Galgame","slug":"Galgame","permalink":"http://ccr39.github.io/tags/Galgame/"},{"name":"PC","slug":"PC","permalink":"http://ccr39.github.io/tags/PC/"},{"name":"KRKR","slug":"KRKR","permalink":"http://ccr39.github.io/tags/KRKR/"}]},{"title":"【Galgame】【PC/ONS】悠之空","slug":"Gal-you","date":"2023-01-08T07:39:53.000Z","updated":"2024-12-13T05:56:36.150Z","comments":true,"path":"资源/Gal-you/","link":"","permalink":"http://ccr39.github.io/%E8%B5%84%E6%BA%90/Gal-you/","excerpt":"","keywords":null,"text":"一、游戏介绍《悠之空》（ハルカナソラ）是日本游戏社Sphere研发的一款单机游戏，于2009年发行，应用于PC平台。是前作游戏《缘之空》的后续作品。 二、剧情介绍游戏主要讲述了主人公春日野悠与双胞胎妹妹春日野穹（主要路线）的故事。以及天女目瑛、渚一叶、乃木坂初佳、依媛奈绪和中里亮平的故事，同时扩充了前作中没有的仓永梢与伊福部八寻路线（次要线路）。还增加了壁纸，剧场版（人物）的插件，并带有特典。主要还是以穹妹线为主，继续讲述悠与穹的爱情故事，以及穹与悠从山上下来到去北欧（赫尔辛基）旅游之间的故事，并有到北欧后的生活片段。 三、游戏CG 四、资源分享请先观看：【索引】下载 Galgame 资源须知 请直接点击代码框右上角的图标进行复制，复制后的文本如果带有： 著作权归作者所有。 商业转载请联系作者获得授权，非商业转载请注明出处。 作者: ccr39 链接：ccr39.love 来源：CCR39のLazyNest 请先将这段文字删去，仅保留剩下的文字。 解压密码已经在文件名中标出，但解压密码不包含文件后缀，如.rar .zip，等。 PC 秒传链接： f5a42414bf9b59c80234ed26cfb64016#1304749401#悠之空PC 解压密码acgmg.rar ONS 秒传链接： 54305a79febfeb8c983b98aace8bb9b9#598145499#001 【ONS】悠之空 密码：qingju.7z import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"资源","slug":"资源","permalink":"http://ccr39.github.io/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"Galgame","slug":"Galgame","permalink":"http://ccr39.github.io/tags/Galgame/"},{"name":"PC","slug":"PC","permalink":"http://ccr39.github.io/tags/PC/"},{"name":"ONS","slug":"ONS","permalink":"http://ccr39.github.io/tags/ONS/"}]},{"title":"【Galgame】【PC/ONS】缘之空","slug":"Gal-sora","date":"2023-01-08T07:28:41.000Z","updated":"2024-12-13T05:56:29.775Z","comments":true,"path":"资源/Gal-sora/","link":"","permalink":"http://ccr39.github.io/%E8%B5%84%E6%BA%90/Gal-sora/","excerpt":"","keywords":null,"text":"一、游戏介绍《缘之空》（日语：ヨスガノソラ，英语：Yosuga no Sora）是 Sphere 于2008年12月5日发售的恋爱文字冒险游戏，也是 Sphere 的第一部作品，以“双胞胎兄妹恋”为主题，并因此引发大量争议。亦有漫画、动画、Fandisk、广播剧等衍生作品，其主线讲述了一对双胞胎兄妹摆脱世俗观念的束缚、坚持找寻心中的真爱的故事。 二、剧情介绍春日野悠和他的双胞胎妹妹春日野穹在父母死于车祸之后，来到了远离都市的田园小镇奥木染的祖父家中，在那里开始新的生活。一边和不习惯的家务苦战，一边还要照顾平时足不出户、什么事情都不会做的妹妹穹，悠的生活变得异常艰辛。与此同时悠也受到了曾经一同玩耍的邻家大姐姐依媛奈绪、刚转校便结识了的中里亮平、神社的巫女兼管理人天女目瑛、以及她的朋友渚一叶和乃木坂初佳等人的热情欢迎。同儿时的印象几乎没有变化的村镇和人们，那让人怀念的回忆和温馨的环境，治愈着悠心中的伤痕。就在这样的过程中，慢慢地发生了一些变化。儿时所定下的只属于两个人的秘密的约定，以及所失去的重要东西的下落。还有定下了这个地方的真正理由。作为回忆铭刻在心之时，也已经悄悄开始。就这样悠的新生活展开了。在安稳的日子里，很快悠注意到了对自己来说谁是最重要的存在……面对伤痕累累，一路蹒跚走过的“她”，悠又会如何面对呢？阳光愈发灿烂的初夏的天空下，故事就这样开始了…… 三、游戏CG 四、游戏攻略（谨慎观看）注：穹线二周目才会开启（通完任意一人的结局后从最初开始）标有◆号的选项为二周目出现的选项，初次游戏时不出现，无视即可。 穹线敲门（2周目）别看我这样，我也是成长了不少了哦？从今往后也能和和乐乐的当朋友吗捉弄过头的话，是不是不大好啊穹妹 END 奈绪线今天这先这样吧◆今后也要麻烦你了。从今往后也能和和乐乐的当朋友吗捉弄过头的话，是不是不大好啊奈绪 END 瑛线◆今天这先这样吧别看我这样，我也是成长了不少了哦？我想了解一下天女目的事情……捉弄过头的话，是不是不大好啊瑛 END 一叶线◆今天这先这样吧别看我这样，我也是成长了不少了哦？从今往后也能和和乐乐的当朋友吗不过，我觉得这就是有意思的地方一叶 END 初佳线◆今天这先这样吧别看我这样，我也是成长了不少了哦？从今往后也能和和乐乐的当朋友吗捉弄过头的话，是不是不大好啊初佳 END 五、资源分享请先观看：【索引】下载 Galgame 资源须知 请直接点击代码框右上角的图标进行复制，复制后的文本如果带有： 著作权归作者所有。 商业转载请联系作者获得授权，非商业转载请注明出处。 作者: ccr39 链接：ccr39.love 来源：CCR39のLazyNest 请先将这段文字删去，仅保留剩下的文字。 解压密码已经在文件名中标出，但解压密码不包含文件后缀，如.rar .zip，等。 PC 秒传链接： f9e8bb23a25233fc4e9b699f6ddf8a71#1873592191#缘之空PC 解压密码acgmg.rar ONS 秒传链接： d34915fa632ffae0064419242a2729f4#1432325083#004 ［ONS］缘X之X空 密码：qingju.7z import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"资源","slug":"资源","permalink":"http://ccr39.github.io/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"Galgame","slug":"Galgame","permalink":"http://ccr39.github.io/tags/Galgame/"},{"name":"PC","slug":"PC","permalink":"http://ccr39.github.io/tags/PC/"},{"name":"ONS","slug":"ONS","permalink":"http://ccr39.github.io/tags/ONS/"}]},{"title":"2023新年的第一份二次元美图","slug":"pic-2023-1","date":"2023-01-08T06:34:00.000Z","updated":"2024-12-13T05:57:27.863Z","comments":true,"path":"转载/pic-2023-1/","link":"","permalink":"http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/pic-2023-1/","excerpt":"","keywords":null,"text":"END import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"转载","slug":"转载","permalink":"http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"图集","slug":"图集","permalink":"http://ccr39.github.io/tags/%E5%9B%BE%E9%9B%86/"}]},{"title":"【索引】下载 Galgame 资源须知 + 超详细的 Galgame 各种模拟器及工具使用教程","slug":"galgame","date":"2023-01-07T08:06:45.000Z","updated":"2024-12-13T05:56:45.507Z","comments":true,"path":"资源/galgame/","link":"","permalink":"http://ccr39.github.io/%E8%B5%84%E6%BA%90/galgame/","excerpt":"","keywords":null,"text":"一、关于资源的下载本人会不定期把一些 Galgame 的资源分享到博客上，资源一律采用百度网盘的秒传链接，不使用其他的链接。 关于秒传链接的提取，可以阅读 这篇文章 的第五节。你也可以阅读整篇文章，了解百度网盘不限速下载的方法。 二、资源的使用下载完毕后请解压压缩包，所有的压缩包密码，全部在压缩包名上，请大家留意。 分享的所有资源仅提供 Windows 与安卓，至于 IOS 的游戏资源以及使用，暂不提供。 如果你使用的是安卓手机端，建议下载以下工具。 工具名称 作用描述 MT管理器 强大的文件管理器，方便你找到文件。 ZArchiver 简称ZA，强大的解压工具。支持中文密码，也可以在 Google Play 下载正版。 WINRAR 同样强大的解压工具，支持中文密码,同时可以修复.RAR格式的压缩包。 可能会遇到压缩包为分卷压缩的情况，即同一文件使用多部份压缩，请确保全部的压缩包在同一目录下，并仅对某一压缩包进行解压即可。 下面我们分别讲解不同资源的用法: 1、PC 资源①在 PC 上的使用在电脑上使用 PC 资源的使用一般较为方便，在我们将资源成功解压后，一般直接打开游戏目录中的 .exe 文件，打开即可运行。 ②在安卓端的使用我们可以用一些模拟器，在安卓上运行部分 PC 游戏的资源，并不是所有游戏都能被模拟器运行，所以可以多次尝试。 JoiPlay 模拟器 安装：参考视频手把手教你安装joiplay模拟器 使用：参考视频Joiplay安卓模拟器使用教程 ExaGear模拟器 教程：参考视频ExaGear模拟器的使用方法 2、KRKR 资源KRKR 资源是为 KRKR2 模拟器使用的资源，KRKR2 是专门面向于安卓的手机 Galgame 模拟器，也是最常用的手机模拟器之一。 由于最新版的 Tyranor 模拟器增加了对 KRKR 的支持，因此，我们还可以用 Tyranor 模拟器运行 KRKR 资源。 使用 KRKR2 模拟器①安装下载链接: KRKR2 模拟器 ②使用打开 KRKR2 模拟器，找到资源解压后的目录，找到目录中的 .xp3 文件，点击即可运行。 使用 Tyranor 模拟器①安装下载链接：Tyranor模拟器 ②使用打开 Tyranor 模拟器，在 “添加” 页面点击最右上角的图标选择路径。 点击右侧图标进行预览。 在进入游戏的根目录时点击右下角对勾，即可添加游戏。 添加完成后，直接点击运行即可运行游戏。 3、ONS 资源ONS 资源可以在 ONS 模拟器使用，ONS 的一大优势是，它可以在大部分平台中运行，你可以在官方网站中了解。 这里我们讲的是 Windows 和安卓的使用。 ①在 PC 上运行 ONS 游戏下载 PC ONS 启动器，并解压。 打开游戏目录，并直接将刚才的解压的所有文件放入游戏目录。 在游戏目录中点击 ONScripter-Jh.exe 即可运行。 ②在手机运行 ONS 游戏使用 ONS-JH 模拟器在此下载 ONS-JH 模拟器，如果有能力，建议去 Google Play 下载正版。 打开 ONS-JH 模拟器，并在模拟器中直接打开游戏所在目录，即可使用。 使用 Mine 模拟器Mine 基于 ONS 模拟器制作的，功能跟 ONS 模拟器大致相同。 同时，Mine 还可能支持其他游戏，具体可自行探索。 下载 Mine 模拟器 使用教程参考视频：【MINE模拟器】使用教程 4、安卓直装资源即以安卓 app 安卓包形式存在的资源，文件后缀为.apk，此类资源在安卓手机直接下载后直接安装就可以使用。 5、Tyranor 资源Tyranor 可以运行 Artemis 引擎制作的游戏，比如富婆妹。 使用方法和下载在上面的 KRKR 资源中已经说过，这里就不说了。 6、Pymo 资源pymo 是一个手机上的 Galgame 引擎，其运行依赖于 pymo 模拟器。 下载： Pymo 模拟器 在手机上打开 pymo，选择游戏所在的文件夹就会开始游戏。 7、maldives 资源Maldives 模拟器可以在手机上运行近几年RPG的游戏（特点是有www文件夹） 下载：MaldiVes模拟器 使用方法与之前几个大体相似。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"资源","slug":"资源","permalink":"http://ccr39.github.io/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"Galgame","slug":"Galgame","permalink":"http://ccr39.github.io/tags/Galgame/"},{"name":"索引","slug":"索引","permalink":"http://ccr39.github.io/tags/%E7%B4%A2%E5%BC%95/"}]},{"title":"Clash 的安装与详细的使用","slug":"clash","date":"2023-01-06T08:47:35.000Z","updated":"2024-12-13T05:56:08.360Z","comments":true,"path":"技术/clash/","link":"","permalink":"http://ccr39.github.io/%E6%8A%80%E6%9C%AF/clash/","excerpt":"","keywords":null,"text":"由于时效性，本文章可能随时进行更新，文章内容可能会有误，我会在评论区修正，请谅解。 科学上网可以说是网上冲浪的必备技能了，相信大家也接触过不少科学上网的工具。 这里我们介绍一个最常用的科学上网工具之一: Clash 与 Clash 同样常用且强大的工具是V2ray，两者均可在各大系统操作系统中有相应客户端，以下我们主要介绍 Clash 在Windows上和在 Android上的使用，如果想为 IOS 配置 Clash 代理可以参考下文第四节的内容，其他系统的使用方法可以自行搜索。如果你想要了解更高级的使用方法，可以阅读官方文档以了解更多。 一、购买节点并获取订阅链接首先我们要去机场购买节点，所谓机场就是提供代理服务的网站。我们可以在机场购买订阅并获取订阅链接来使用网络代理服务。 机场提供的服务并不一定是稳定，高速，安全的。所以需要进行一定斟酌后再选用机场。而且由于再大陆内，提供代理网络服务并不合法，所以机场也有可能随时跑路，所以在购买节点时不建议长期订阅。 机场的价格往往与速度，稳定性挂钩，但是机场的价格普遍并不高。 博主使用的机场在这里，最便宜的价格的话是一个月一元100G，最高速度可以顶满带宽，完全足够个人使用。注册时记得输入邀请码:AtpsDqhe。 同时，机场一般也会提供使用方法和客户端资源，你可以参考机场上的方法来配置Clash。 二、Clash的基本使用1、Clash for Windows①下载客户端国内镜像下载、官方Github发布页（若国内无法访问官方发布页，请使用国内镜像） 云盘中的不一定为最新版，最新版可在官方发布页下载。 使用汉化包前往：官方发布页无法访问时请在此进行下载 如下图，将app.asar直接放入 resources 文件夹中，并进行替换。 再次启动汉化成功。 ②导入配置文件首次启动 Clash for Windows 后会出现下图所示界面代表启动成功： 导入配置文件有如下两个途径： URL 导入 本地文件拖拽导入 你可以在机场中复制订阅地址来获得URL。 URL 导入点击界面左侧菜单 Profiles（即：配置），在顶部输入框填入 URL 并点击 Download 下载即可，下载完成后点击对应的配置文件即可载入 本地文件拖拽导入如果无法通过 URL 下载配置文件，则可以尝试在浏览器中下载配置文件后通过拖拽方式导入 ③打开系统代理返回 General 常规中，打开System Proxy系统代理即可，如果你希望开机自启，也可以勾选 Start with Windows开机自启。 System Proxy：设置系统代理 Start with Windows: 设置开机自启 2、Clash for Android①下载客户端云盘 提取码：1og4，Github 官方（若国内无法访问官方发布页，请使用国内镜像），Google Play（没有代理无法访问） 云盘中的不一定为最新版，最新版可在官方发布页下载。 ②添加订阅面板是有一键订阅的,直接点击就好,手动如下步骤 打开 Clash for Android ，依次进入 配置 &gt; 新配置 &gt; URL 。 在 URL 一栏中粘贴 Clash 配置订阅链接；自动更新 (分钟) 推荐填写 1440 ，即每 24 小时自动从链接中更新配置文件。 完成后点击右上角的保存按钮，Clash for Android 将下载配置文件，请点击选中添加的配置文件。 ③开启代理返回软件首页。点击开关，即可进行代理。会提示是否同意创建VPN，请点击允许。 点开 “代理”，可以策略组进行选择。 三、其他基本功能1、代理模式①代理模式的区别Clash 提供了 全局、规则、直连、脚本 四种代理模式。 全局：设备上所有支持代理协议的浏览器、程序的 IP 均使用代理，换句通俗的话说，就是整个设备都通过代理来访问外部网络。 规则：使用 Clash 的规则文件进行上网流量分流，比如让国内IP、域名的流量直连，让国外的IP、域名通过代理连接。 直连：意思是直接连接，不使用代理上网。 脚本：利用用户自己写的脚本文件进行流量分流，需要配置脚本文件使用 ②设置代理模式在 Windows 端的 代理 的上方，从左到右依次为 全局 、规则 、直连 、脚本 在安卓端的 代理 中，点击右上角三个点，在弹出的框中的 模式 里可以设置代理模式，但仅在此次有效，下次启动会重新使用默认设置 你也可以在设置中更改默认模式：点击 设置 &gt;&gt; 覆写 &gt;&gt; 模式 2、设置终端代理在 Windows 端，可以直接为控制终端设置代理，来解决在终端中安装超时的问题。 3、打开 Clash 的 Web 控制台点击 Clash 核心后面的那行字。 此时我们就可以进入控制台 四、使用 Clash 为局域网中的其他设备配置代理使用 Clash 的 “允许局域网连接” 功能可以为 Clash 为局域网内的其他设备进行代理。 利用这个方法，我们可以解决在 IOS 端，配置 Clash 困难，复杂的问题。 1、配置 Windows 端①打开 ”允许局域网连接” ②点击 “允许局域网连接” 后方的图标，查看网络接口 ③点击 “端口” 后方的数字，设置端口，端口号的范围应在 0 到 1023 ，你也可以使用默认的端口号不去设置。 2、配置其他客户端这里拿 IOS 举例，安卓或其他客户端大体相似，具体可自行查询 。 首先保证 PC 与手机在同一局域网下。 ①打开手机设置： ②打开 WiFi 设置； ③向下滑动，找到HTTP设置——配置代理； ④将配置代理的关闭勾选为手动； ⑤将刚才查看的网络接口地址，和端口号分别填入服务器和端口中。 保存之后即可生效，其代理模式和 PC 端保持一致。 如果你不在想用代理，重新把配置代理关闭即可。 五、完毕到此，一些关于 Clash 的基本使用技巧已经简单概述，如果您还需要更多进阶技巧，可从此文档中获取。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"技术","slug":"技术","permalink":"http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"工具","slug":"工具","permalink":"http://ccr39.github.io/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"vim的安装以及基础使用","slug":"vim","date":"2023-01-05T13:24:00.000Z","updated":"2024-12-13T05:57:50.932Z","comments":true,"path":"技术/vim/","link":"","permalink":"http://ccr39.github.io/%E6%8A%80%E6%9C%AF/vim/","excerpt":"","keywords":null,"text":"Vim 是从 Vi 发展出来的一个文本编辑器，也是所有的 Unix Like 内置的文本编辑器。其拥有强大的对代码的处理功能，因此成为了许多大佬写代码的首选。 这里要说明, Vim 不是 IDE 他可以在任何的平台中使用，也没有对语言的限制。 可以说，学好对 Vim ，可以让你的手几乎不会离开键盘的主操作区，对我们有着极大的帮助。 一、Vim 在 Windows 上的安装1、直接安装 Vim 本体在官网中直接下载 Gvim 的安装包，根据提示进行安装。 安装完成之后，即可以从目录中启动 Vim ，或者，你可以在控制台中输入 Vim 进行使用。（当然要保证已经为 Vim 配置了环境变量） 2、在 VS Code 中使用 Vim直接在 VS Code 的拓展中搜索 Vim 即可让 VS Code 的文本编译方式转为和 Vim 相同。 二、Vim 的学习和使用如果你是安装的 Gvim 本体的话，你可以直接在控制台输入 vimtutor使用 Vim 自带的学习文档进行学习。 下面将在这里介绍 Vim 的基本使用。 如下图，Vim 为我们编辑文本提供了三种方式：命令模式、输入模式、底线命令模式。 当我们打开 Vim 默认的模式即为命令模式，在命令模式下，我们不能完成文本的输入等操作，但是我们可以通过键盘上的按键来操作并编辑文本。 当我们在命令模式下输入 : 时，会进入底线命令模式，这个时候，光标会在左下角出现，我们可以输入相应的指令并按回车执行指令。 在命令模式下，当我们输入 i a o 三个键时，即可进入输入模式，在输入模式下，我们可以正常的输入文字，如果想要切换回命令模式，需要按 esc 键。 下面是 vi&#x2F;vim 的键盘图 Vim 的指令十分强大，需要一段时间的学习和适应，在熟悉按键之后，即可达到非常强大的效果。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"技术","slug":"技术","permalink":"http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"工具","slug":"工具","permalink":"http://ccr39.github.io/tags/%E5%B7%A5%E5%85%B7/"},{"name":"编程","slug":"编程","permalink":"http://ccr39.github.io/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"BOCCHI THE ROCK!","slug":"bochinorock","date":"2022-12-20T14:23:43.000Z","updated":"2024-12-13T05:56:01.848Z","comments":true,"path":"转载/bochinorock/","link":"","permalink":"http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/bochinorock/","excerpt":"","keywords":null,"text":"图片均来自于pixiv BOCHI 虹夏 喜多 凉 END import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"转载","slug":"转载","permalink":"http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"图集","slug":"图集","permalink":"http://ccr39.github.io/tags/%E5%9B%BE%E9%9B%86/"}]},{"title":"从零开始速通百度云网盘","slug":"panbaidu","date":"2022-12-18T06:20:37.000Z","updated":"2024-12-13T05:57:16.216Z","comments":true,"path":"资源/panbaidu/","link":"","permalink":"http://ccr39.github.io/%E8%B5%84%E6%BA%90/panbaidu/","excerpt":"","keywords":null,"text":"由于时效性，本文章可能随时进行更新，文章内容可能会有误，我会在评论区修正，请谅解。 相信大家在网上冲浪时时常会下载一些资源、软件，如果你需要下载别人分享的资源时，就需要用到网盘。 百度云网盘由于早期在国内占据了一定规模的市场，拥有大量的资源与链接，直至目前，百度云网盘仍是被使用最多的网盘。但是百度的不当人做法，让百度云网盘的限速到达了堪称恐怖的境界，但另一方面，坐拥大量资源的百度云网盘让我们不得不通过它进行资源的传输。所以不少人选择了向百度屈服，充了百度的SVIP，但就算是SVIP仍然逃不过限速的命运。 还有这样一种情况，就是我们经常会看到一些资源分享链接，结果还没有来得及下载，链接就失效了。 直链下载和秒传链接就能帮助我们解决上述两个问题。 今天，由我为大家带来，从零开始速通百度云网盘，把带宽顶满，生成永久有效的秒链，从此告别限速与分享无效。 全文提供安卓和 Windows 两种方案，前面先讲的直链，秒链在最后面。 如果大家之前接触过安卓端使用ES文件管理器加ADM的方法，本人实测该方法已失效，所以请使用本文提供的方法。 一、准备工作:科学上网（可自行跳过）科学上网可以说是网上冲浪的必备技能了，相信大家也接触过不少科学上网的工具。 这里我们介绍一个最常用的科学上网工具之一: Clash 与 Clash 同样常用且强大的工具是V2ray，两者均可在各大系统操作系统中有相应客户端，以下我们主要介绍 Clash 在Windows上和在 Android上的使用，其他系统的使用方法可以自行搜索。如果你想要了解更高级的使用方法，可以阅读官方文档以了解更多。 1、购买节点并获取订阅链接首先我们要去机场购买节点，所谓机场就是提供代理服务的网站。我们可以在机场购买订阅并获取订阅链接来使用网络代理服务。 机场提供的服务并不一定是稳定，高速，安全的。所以需要进行一定斟酌后再选用机场。而且由于再大陆内，提供代理网络服务并不合法，所以机场也有可能随时跑路，所以在购买节点时不建议长期订阅。 机场的价格往往与速度，稳定性挂钩，但是机场的价格普遍并不高。 博主使用的机场在这里，最便宜的价格的话是一个月一元100G，最高速度可以顶满带宽，完全足够个人使用。注册时记得输入邀请码:AtpsDqhe。 同时，机场一般也会提供使用方法和客户端资源，你可以参考机场上的方法来配置Clash。 2、Clash for Windows①下载客户端国内镜像下载、官方Github发布页（若国内无法访问官方发布页，请使用国内镜像） 云盘中的不一定为最新版，最新版可在官方发布页下载。 首次启动 Clash for Windows 后会出现下图所示界面代表启动成功： ②导入配置文件导入配置文件有如下两个途径： URL 导入 本地文件拖拽导入 你可以在机场中复制订阅地址来获得URL。 URL 导入点击界面左侧菜单 Profiles，在顶部输入框填入 URL 并点击 Download 即可，下载完成后点击对应的配置文件即可载入 本地文件拖拽导入如果无法通过 URL 下载配置文件，则可以尝试在浏览器中下载配置文件后通过拖拽方式导入 ③打开系统代理返回 General 中，打开System Proxy即可，如果你希望开机自启，也可以勾选 Start with Windows。 System Proxy：设置系统代理 Start with Windows: 设置开机自启 3、Clash for Android①下载客户端云盘 提取码：1og4，Github 官方（若国内无法访问官方发布页，请使用国内镜像），Google Play（没有代理无法访问） 云盘中的不一定为最新版，最新版可在官方发布页下载。 ②添加订阅面板是有一键订阅的,直接点击就好,手动如下步骤 打开 Clash for Android ，依次进入 配置 &gt; 新配置 &gt; URL 。 在 URL 一栏中粘贴 Clash 配置订阅链接；自动更新 (分钟) 推荐填写 1440 ，即每 24 小时自动从链接中更新配置文件。 完成后点击右上角的保存按钮，Clash for Android 将下载配置文件，请点击选中添加的配置文件。 ③开启代理返回软件首页。点击开关，即可进行代理。会提示是否同意创建VPN，请点击允许。 点开 “代理”，可以策略组进行选择。 二、tampermonkeytampermonkey（油猴）是一个强大的浏览器插件，他为脚本在浏览器内运行提供了一个环境。 通过油猴我们可以使用脚本来做到许多神奇的操作，接下来我来带大家使用tampermonkey。 1、浏览器的使用Windows说到浏览器插件，首先就要说浏览器了，首推浏览器现在是Edge，适配绝大部分插件。 如果你有谷歌账号还熟练科学上网，推荐Chrome。 实际上，常见的几乎所有国产浏览器，甚至手机的APP，以及Edge使用的是都是开源的chromemiu内核。 但其实Edge最初是自己制作内核，但是微软的工程师最后屈服于谷歌了。 所以Edge可以适配谷歌的所有插件，甚至可以一建导入，而且Edge在国内没被墙以及还有许多其他功能（Win10以上自带），所以在国内掀起了一波推崇热潮。 本人因为不想再下chrome用了自带的Edge，但实际体验极差，经常会卡顿，无响应。 所以我的推荐是，如果你会用Chrome还是不要用Edge了。 其次的推荐Firefox、Opera。 Android在安卓平台，首推kiwi浏览器，可以适用谷歌的所有插件，你可以再Google play上直接搜索下载，如果你不会使用Google play可以在此（百度网盘）或在此(推荐)本地安装包。 你还可以在Kiwi浏览器中文网，获取更多的下载方式和详细的使用方法。 2、安装tampermonkeyWindows①插件商店安装以Edge为例，找到右上角三个点，点击&gt;拓展&gt;获取 Microsoft Edge 扩展&gt;搜索tampermonkey点击获取 这里注意，不建议安装tampermonkey Beta因为Beta版本的某些功能并不稳定。 如果你使用的是Chrome浏览器，那么想要用谷歌的扩展商店需要科学上网，如果无法科学上网可以使用本地安装的方法。 ②本地安装你还可以选择在这里（百度云）或这里（蓝奏云）下载本地文件，完毕后打开浏览器，这里还是以Edge为例。 右上角三个点，点击&gt;扩展&gt;打开“开发者模式”&gt;打开之后把下载好的本地文件直接拖入即可安装。 如果显示出错无法安装右击文件，把文件后缀 .crx 改为 .zip 把文件解压，然后再次来到扩展页面，保证开发者模式打开，点击”加载解压缩的扩展”，进入到刚才解压好的文件夹的根目录，点击选择文件夹即可。 这时可能会发生显示出错的情况，如: 这种情况不用在意，可以正常使用。 Android①插件商店安装Kiwi浏览器的商店依赖的时谷歌插件商店，因此需要科学上网。 打开Kiwi浏览器，先新建标签页，点击右上角三个点 &gt; 扩展程序 &gt; +(from store) &gt; 搜索 tampermonkey &gt; 添加到Chrome 同样，不建议安装tampermonkey Beta，因为Beta版本的某些功能并不稳定。 ②本地安装在这里（百度云）或这里（蓝奏云）下载本地文件，完毕后要注意文件被下载到的位置，不同手机浏览器的文件位置可能不一样，所以可以自行搜索并查找。 打开Kiwi浏览器，先新建标签页，点击右上角三个点 &gt; 扩展程序 &gt; +(from .zip&#x2F;.crx&#x2F;.user.js) 这时候在出现的文件管理器中找到刚才下载的文件，点击添加即可。 3、安装脚本确保安装完成tampermonkey后再次确保tampermonkey打开。 在浏览器内点击这里，点击安装此脚本以安装脚本。 安装成功后进入插件的管理面板，在电脑端浏览器，点击右上角拼图样式的图标&gt;点击tampermonkey&gt;管理面板。 在手机端中点击三个点，下滑到最后，找到tampermonkey，点击后再点击管理面板。 进入管理面板可以看到: 确保脚本打开，至此插件脚本安装成功。 三、下载器的安装及配置Windows端:IDM下载器安装在这里下载IDM破解版,然后解压。 配置UA我提供的IDM是绿色版本，解压后，执行“!)绿化.bat”，就可以正常使用了。IDM配置：修改UA为 netdisk;PC Android端:ADM下载器安装:蓝奏云,密码:2z6b 百度云 [Google Play](Advanced Download Manager - Google Play 上的应用) 配置UA进入ADM，点击设置&gt;下载中，滑倒最下方找到浏览器标识。选择最下方的自定义，然后再最下方的自定义设置中输入netdisk;PC。保存 四、获取直链并下载将百度网盘中你想下载的文件转存如自己的网盘中。 如果是安卓端，需要在Kiwi浏览器右上角三个点勾选桌面版网站来访问电脑版网站。 同时，因为在手机端打开网页会自动跳转，请保证在勾选桌面版网站之后访问百度网盘网页端。 打开浏览器，进入百度网盘网页端，找到刚才转存的文件。 勾选，并点击简易下载助手。 点击获取直链地址，如果需要验证码可以根据提示，关注公众号，获取验证码，填写完毕后再次点击获取直链地址。 完成后点击复制直链地址，这里也要注意，关注下方的公告，我们已经把UA改为目前可用的UA，但不排除更换的可能性，如果需要更换UA，请根据下方公告填写。 Windows接下来打开IDM，点击新建任务。 将刚才的直链地址复制进去点击确定，开始下载。 可以看到，我们的带宽已经跑满。 Android进入ADM,点击下方加号把刚才的直链复制进去。 展开高级选项，在下方的浏览器标识中选择”自定义”，接下来点击开始进行下载。 网速也是跑满了带宽: 常见问题无权限下载这是因为UA设置错误导致的，请查看是否有新的UA，然后再按上面的方法重新配置UA。 在ADM中，一定要保证在下载时的浏览器表示中使用自定义。 下载过慢&#x2F;网速不正常这可能与你的线程设置有关系，ADM和IDM的默认线程数为8线程，而脚本要求的线程数是4线程。 常规来说，在带宽顶满之前，线程数越多下载速度越快，但是过多的线程数可能会引起系统异常，从而停止对你的文件传输。 实际使用来说，使用8线程一般不会造成问题，但也存在例外。 因此，如果下载速度异常，请先尝试将最大线程数调到4线程，如果无效，可以尝试配置更多的线程观察是否对下载速度有一定帮助。 下面介绍修改最大线程数的方法。 IDM： ADM:在添加下载任务&gt;高级选项中 五、秒传链接的使用秒传链接实现了分享网盘资源永久分享。 接下来介绍秒传链接的使用方法。 Windows在安装完Tampermonkey的浏览器中点击这个链接。 点击安装后点击安装此脚本，进行安装。 完成后进入到网页版百度网盘，选择需要传输的文件，点击生成秒传。 接下来点击复制秒传代码即可生成。 想要导入秒传文件，则点击秒传，并将秒传链接复制在其中。 Android在安卓端，你可以参考上面的方法在Kiwi浏览器中打开这个，下载脚本。 并打开桌面版网站，进入百度云网盘，和上面Windows端使用同样的方法进行秒传。 这里我们介绍另一种方法，依靠的是手机的客户端导入秒传文件（仅支持导入，想要生成还是用上面的办法）。 首先下载狐悠（百度网盘、蓝奏云 提取码：2mu9) 进入APP，然后登陆百度网盘，直接将秒传链接复制进去即可导入秒传文件。 完成至此，你已经学会了如何以正确姿势使用百度网盘了，请记住，白嫖是有代价的，不爱折腾不可能得到良好的体验。 只有能折腾，才能获得更好的体验，所以不要犯懒，经过上述方法，你一定能完美使用百度网盘 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"资源","slug":"资源","permalink":"http://ccr39.github.io/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"软件","slug":"软件","permalink":"http://ccr39.github.io/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"编程环境的搭建与scoop的使用","slug":"scoop","date":"2022-12-16T14:46:00.000Z","updated":"2024-12-13T05:57:42.398Z","comments":true,"path":"技术/scoop/","link":"","permalink":"http://ccr39.github.io/%E6%8A%80%E6%9C%AF/scoop/","excerpt":"","keywords":null,"text":"学习计算机编程语言，想必第一件事情就是搭建所需的环境，但往往环境的搭建是非常折磨人的。 你是否曾自己一人，抱着满腔热血，试图学习某门语言，但却因为 IDE 或编译器无法运行而在各个网页间来回穿梭？ 你是否在想要使用别人的项目时，却面对这琳琅满目的报错中独自发愁。 鲁迅曾经说过“我刚开始学编程，最痛苦的一件事就是搭建环境。”那么今天我就为大家来避避踩过的坑。 一、何为环境？ 编程环境的方面包括很多，简单来说，编程环境指的是能供让代码或程序正常运行的环境。 那么需要哪些条件呢? 拿C++举例，首先你要有一个IDE，用来编写代码。其次你要有一个编译器，来编译代码。 那么这一套用来编译，并运行的条件就是C++的运行环境。(最简单的i 二、系统环境变量环境变量的使用是避坑的第一个环节。 记得学OI那会，第一次使用VS Code，闹腾半天愣是不知道如何添加环境变量，现在回想下来，其实原因就在于没有理解环境变量究竟是什么。 当你在控制台输入一些程序( 比如Windows自带的cmd时 )，你可能会看到这句话: Microsoft Windows [版本 10.0.22621.819](c) Microsoft Corporation。保留所有权利。 这句话中包含了cmd的版本信息。 但是你是否想过，我们分明没有输入cmd的路径，但是系统是如何找到cmd的所在位置呢? 如果在最初搭建环境踩过坑的人，可能会联想到另外一种情况，就比如说，你在控制台输入$ python index.py时可能会报出出的错误: ‘python’ 不是内部或外部命令，也不是可运行的程序或批处理文件。 想必聪明的读者一定能想得到，在这里系统并没有找到python的位置。 可能是两种情况: 电脑中不存在python。 电脑中存在python但是不能被系统像找到cmd那样找到。 那么现在就可以回答上面那个问题:系统是如何找到cmd的所在位置呢? 答案就是环境变量。 在你的系统中，环境变量是用来储存一些程序的位置的东西，有了它系统就能知道程序的路径在哪里，所以想要解决上面的问题，我们就要知道如何去通过修改环境变量来使系统能够找到程序。 在Windows操作系统下，右击桌面上的此电脑，点击属性&gt;&gt;高级系统设置&gt;&gt;高级&gt;&gt;环境变量。即可修改环境变量。 而我们一般把值储存在Path变量中，值的格式就是你的程序的目录的路径，多个路径之间用逗号相隔。(在Win10以及以上版本中，你只点击编辑环境变量&gt;&gt;新建，就能够添加新的地址，而在其他版本中，则需要在整个变量最后添加逗号,再输入新的路径) 在这里，Windows还提供了两类环境变量，一个是用户变量，储存的变量是储存在用户中的，另外一个是系统变量，储存在系统中。如果不太了解什么意思，其实无论存在系统还是用户中都可以正常使用。 当我们用安装包安装的时候，环境变量一般会自动添加到系统中，但也不乏一些个例，从而可能会引起上述报错。还有人因为挪动了根目录的位置从而报错，原因也不难猜了，只需要把原来的环境变量修改为根目录就行了。 现在我们就可以理解上面的报错了，我们只需要把python的目录复制，添加到环境变量的Path变量中，就可以解决问题。还有、其他问题，比如报错说存在多个程序，那么就可能是由于电脑中的多个同名程序都被识别找到，但是系统不知道打开哪一个，这时候你可以用$ where 程序名来获取程序地址，再去环境变量中找到多余的某个路径，删去就可以。 简单来说，了解环境变量的本质之后，就能很大程度上手动解决许多问题。 再举一个解决实际问题的例子: 假如说我们再使用指令$ pip install XXX时报错pip 不是内部或外部命令，也不是可运行的程序或批处理文件。我们就可以进行推测，首先我们知道pip时python自带的安装依赖包的程序，那么有可能是这个程序的目录没有在环境变量中，这时，我们可以查询pip在python目录的哪个地方，再把pip的路径复制，放到环境变量中即可。如果你发现自己的python没有自带pip，我们就可以用python的命令（或其他方法）安装pip，再把路径加入环境变量，即可解决 三、Scoop的使用在 Windows 下，搭建开发环境一直是一个复杂且困难的问题。由于没有一个统一的标准，导致各种开发环境的安装方式差异巨大，需要付出很多不必要的时间成本。而 Scoop 可以帮助你统一安装并管理常见的开发软件，省去了手动下载安装，配置环境变量等繁琐步骤。 例如安装 python 和 nodejs 只需要执行： scoop install python scoop install nodejs 1、安装scoop的安装依靠PoweShell，如果你使用的是 Windows 7 系统，那么PowerShell的版本可能过于陈旧。你可以手动安装新版的PowerShell。 安装命令:在PowerShell中输入 Set-ExecutionPolicy RemoteSigned -scope CurrentUser irm get.scoop.sh -outfile &#39;install.ps1&#39; .\\install.ps1 -ScoopDir &#39;C:\\Scoop&#39; 2、使用如： scoop install python 即可直接下载，并搭建python的环境。 详情可见官方文档。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"技术","slug":"技术","permalink":"http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://ccr39.github.io/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"基础动态规划","slug":"baseDP","date":"2022-12-16T08:59:00.000Z","updated":"2024-12-13T05:55:53.849Z","comments":true,"path":"转载/baseDP/","link":"","permalink":"http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/baseDP/","excerpt":"","keywords":null,"text":"原文链接 一、基本概念与定义1、动态规划的概念对于某些问题，我们可以将其分成若干个互相联系的阶段，并在每个阶段做出决策，从而达到最优解。 这种通过状态来影响决策，在经由决策引起状态转移的动态过程被称作动态规划（简称DP） 动态规划（DP）不是某种具体算法，而是一种思想。 核心在于：把大问题转化为小问题，利用小问题的解，推断出大问题的解。 2、状态当我们把大问题化成小问题时，只有大问题和小问题拥有相同的形式，才能考虑拆分子问题。 如果满足这个要求，那么我们遇到的每个子问题，都可以通过某种简洁的形式来 表达。 我们把可能遇到的每种“局面”称为状态。 设计完状态之后，只要能利用小状态的解求出大状态的解，就可以动手把题目做 出来！ 3、转移当我们设计好状态，我们需要用小状态推出大状态。 从一个状态的解，得知另一个状态的解，我们称之为“状态转移”。这个转移式子 称为“状态转移方程”。 4、Dp的基本原则（1）最优子结构：大问题的最优解，一定是从小问题的最优解推出来的。 （2）无后效性：无后效性 现在的决策，只与过去的结果有关，而与过去的决策无关。 5、DP与记忆化搜索(1)记忆化搜索在经$dfs$搜索过程中，会产生许许多多的子序列，对于每个序列，可能会产生重复的元素。 例如： 求99！，100！，101！ 一般思路，分别从1开始乘 但显然，对于这道题我们只需要算出99！，就不需要再从头计算了，因为100！即是99！ * 100，而101 ! 即是 100 ！ * 101 ！ 所以说，我们只需要在阶乘的过程中将 99 ! 的得数存到数组a[99]中，等到下次再调到用时，就可以直接访问a[99]，从而省去不必要的时间。 一般情况下，可以将O($2^n$)的时间复杂度优化为O($n^2$)的复杂度。 (2)DP对于同样的问题，我们并不考虑如何直接去求 99 ! ,而去考虑如何可以将 99 ！ 分成若干个子问题。 显然 99 ！ &#x3D; 98 ！ * 99； 而 98 ! &#x3D; 97! * 98; 以此类推，我们可以等到： 1 ！ &#x3D; 1 可以看出，对于所有的阶乘问题，我们都可以从 2的阶乘开始计算，最后一步步到达想要的结果，这就是DP。 同时，对于这道题，状态转移方程为：a[N] &#x3D; a[N - 1] * N;且a[0]&#x3D;1 6、DP与递推从上面我们的探究可以看出，对于同一个问题，DP的做法是，从最初结点开始遍历，在过程中，我们不考虑之前的值是否存在，也不考虑当决策是否对之后产生影响，只是根据状态转移方程，一步步选择，从而得到结果。 我们可发现，DP其实运用了递推的思想。 我们可以把状态转移方程看成递推公式，把初始值看做递推边界。 对于上题，我们同样可以写成递推公式 $F_n&#x3D;F_{n-1}*n$；$F_0&#x3D;1$ 同时，我们可以把记忆化搜索看成递归的思想 在搜索过程中沿着某一个答案前进，在过程中调用之前所储存的答案。 所以，记忆化搜索和递推也常被当做DP的一种实现方式。 二、DP程序的设计1、转移方式（1）backward 型转移：我从哪里来?这是一种常见的思路：对于一个没有求出解的状态，利用能走到它的状态，来得出它的解。 同时它也是记忆化搜索的方式 （2）forward 型转移:考虑我到哪里去对于一个已经求好了解的状态，拿去更新它能走 到的状态。 2、DP三连 我是谁? (设计状态) 我从哪里来 (backward 型转移) 我到那里去 (forward 型转移) (两种转移方式中，只需要选择一个来设计转移即可。) import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"转载","slug":"转载","permalink":"http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://ccr39.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"线性DP","slug":"线性DP","date":"2022-12-16T08:59:00.000Z","updated":"2024-12-13T05:54:05.964Z","comments":true,"path":"转载/线性DP/","link":"","permalink":"http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/%E7%BA%BF%E6%80%A7DP/","excerpt":"","keywords":null,"text":"文章原链接: 【笔记】线性DP - OIer:ccr39の博客 - 洛谷博客 (luogu.com.cn) 一、定义线性$DP$,指利用线性结构对问题进行求解的一种常见的动态规划类型。 对于线性$DP$ ，一般没有固定的模板，需要根据题意与状态进行逐步求解。 线性动态规划的目标函数为特定变量的线性函数，约束是这些变量的线性不等式或等式，目的是求目标函数的最大值或最小值。 因此，除了少量问题（如：LIS、LCS、LCIS等）有固定的模板外，大部分都要根据实际问题来推导得出答案。 二、常见问题对于线性$DP$一般有以下常见模板题型： 1、最长单调上升子序列（洛谷AT2827 LIS）（1）题目 给定一个长为$n$ 的序列 $a_i$，求这个序列的单调上升子序列长度。 $1 \\le a_i \\le n \\le10^5$。 （2）做法$solution~1:O(n^2)$线性$DP$，根据我们之前介绍过得$DP$三连可以得到以下思路。 我是谁？（设计状态） 我们考虑使用$DP[i]$来表示第以i位结尾的最长的单调上升子序列长度。 即：我是第i位之前的最长单调上升子序列的长度。 我从何而来 (backward 型转移) 我将到何方 (forward 型转移) 对于本题来说，我们采用第一种转移方式，考虑我是如何求得。 我们可以发现，对于任何一个点$dp_i$来说，以它为结尾的最长单调上升子序列的长度就是在它之前的，元素值小于它的所有点的最大值+1。 即对于一个点$a_j(0\\le j&lt; i)$若$a_j&lt;a_i$且在所有满足条件的j中,$dp_j$的值最大，那么，$dp_i&#x3D;dp_j+1$。 把写出它的状态转移方程： $dp_i&#x3D;max(dp_j)+1(0\\le j&lt; i,a_j&lt;a_i );dp_0&#x3D;0$这样，我们就能求出每个阶段下最长的单调上升序列，再存储其最大值即可。 时间复杂度$O(n^2)$ $code~1:$#include&lt;bits/stdc++.h&gt; #define re register #define rint re int const int MAXN=1e5+5; int n,ans,a[MAXN],dp[MAXN]; signed main() &#123; scanf(&quot;%d&quot;,&amp;n); for(rint i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;a[i]); for(rint i=1;i&lt;=n;i++) &#123; for(rint j=1;j&lt;i;j++) if(a[j]&lt;a[i]) dp[i]=max(dp[i],dp[j]); ans=max(ans,++dp[i]); &#125; printf(&quot;%d&quot;,ans); return 0; &#125; $solution~2:O(nlogn)$利用二分的思想，去维护一个单调递增的序列。 对于每一次的元素的插入，都利用二分查找其位置。 时间复杂度$O(nlogn)$ $code$ $2:$#include&lt;bits/stdc++.h&gt; #define re register #define rint re int const int MAXN=1e5+5; int n,a[MAXN],f[MAXN],p=1; signed main() &#123; scanf(&quot;%d&quot;,&amp;n); for(rint i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;a[i]); f[p]=a[1];//把a[1]先放入数组中 for(rint i=2;i&lt;=n;i++) if(a[i]&gt;f[p]) f[++p]=a[i];//如果a[i]&gt;s[p]也就是比现有元素都大，就直接将其插入到数组最后 else f[lower_bound(f+1,f+p+1,a[i])-f]=a[i];//在f中查找正好大于或等于a[i]的位置，并将其替换。lower_bound查找大于等于，upper_bound查找大于，两者初始仅可以在单调递增的序列中查询。 printf(&quot;%d&quot;,p); return 0; &#125; $solution$ $3:$树形数组，对$DP$的一种优化方式，时间复杂度$O(nlogn)$,但常数比第二种方法大。 详解可见此。(@星爵$dalao$) （3）同类题型:P1020导弹拦截、P1091合唱队形。 2、最长公共子序列$LCS$(P1439)（1）题目 给定两个长为$n$ 的序列$P_1$ 和 $P_2$ ，求它们的最长公共子序列。 $1 \\le n \\le10^5$。 （2）做法$solution1：O(n^2)$线性$DP$，我们继续按照之前做题的思路，使用$DP$三连分析问题。 我是谁？（设计状态） 我们考虑使用$DP[i][j]$来表示$a_{1∼i},b_{1∼j}$的LCS长度。 即：我是第$a$的第i位之前,和b的第$j$位前，$a,b$的最长公共子序列。 我从何而来 (backward 型转移) 我将到何方 (forward 型转移) 这里我们依旧选择第二种转移方式解决此题。 我们来思考，当$a[i]&#x3D;b[j]$时,那么就表示有新的公共元素，那么 $dp[i][j]&#x3D;dp[i-1][j-1]+1$ 如果没有新的公共元素，那么就要继承之前的值 $dp[i][j]&#x3D;max(dp[i−1][j],dp[i][j−1])$ 那么我们就可以写出来它的状态转移方程。 $code~1:$#include&lt;iostream&gt; using namespace std; int dp[1001][1001],a[2001],b[2001],n,m; int main() &#123; cin&gt;&gt;n; for(int i=1;i&lt;=n;i++)scanf(&quot;%d&quot;,&amp;a[i]); for(int i=1;i&lt;=n;i++)scanf(&quot;%d&quot;,&amp;b[i]); for(int i=1;i&lt;=n;i++) for(int j=1;j&lt;=n;j++) if(a[i]==b[j]) dp[i][j]=dp[i-1][j-1]+1; else dp[i][j]=max(dp[i-1][j],dp[i][j-1]); cout&lt;&lt;dp[n][n]; &#125; $solution~2:O(nlogn)$将问题转化成$LIS$,将$a$序列映射进一个数组里，数组下标代表a序列的数，而数组的值表示其下标在$a$数组的位置。 即若 $a_1&#x3D;3,a_2&#x3D;2,a_3&#x3D;1,a_4&#x3D;4,a_5&#x3D;5$ 那么$map_1&#x3D;3,map_2&#x3D;2,map_3&#x3D;1,map_4&#x3D;4,map_5&#x3D;5$ 那么在根据$b$数组在$map$数组中的相对位置做$LIS$。 得到的就是他们的$LCS$。 换句话说，只要$b$中某个子序列在$a$中的相对位置单调递增，那么它就是$a$的子序列。 当$b_1&#x3D;1,b_2&#x3D;2,b_3&#x3D;3,b_4&#x3D;4,b_5&#x3D;5$时 $b_1$的位置在$a$中排第3位，$b_2$的的位置在$a$中排第2位,$b_3$的位置在$a$中排第1位，$b_4$的位置在$a$中排第4位,$b_5$的位置在$a$中排第5位。 (也可以写成$map_{b_1}&#x3D;3,map_{b_2}&#x3D;2,map_{b_3}&#x3D;1,map_{b_4}&#x3D;4,map_{b_5}&#x3D;5$) 在此之中，最长单调上升子序列为$1,4,5$,那么相对应的,$b$与$a$的$LCS$就是$b_3,b_4,b_5$。 时间复杂度$O(nlogn)$,但仅限于全排列数组。 $code~2:$#include&lt;bits/stdc++.h&gt; #define re register #define rint re int using namespace std; const int MAXN=1e6+5; int a,b[MAXN],Map[MAXN],dp[MAXN]; int main() &#123; rint n,len=0; scanf(&quot;%d&quot;,&amp;n); for(rint i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;a),Map[a]=i; for(rint i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;b[i]),dp[i]=0x7fffffff;//因为要查找位置，所以dp要赋极大值 for(rint i=1;i&lt;=n;i++) if(Map[b[i]]&gt;dp[len]) dp[++len]=Map[b[i]];//如果可以直接满足递增，则直接插入尾部 else &#123; rint k=lower_bound(dp+1,dp+len+1,Map[b[i]])-dp; dp[k]=Map[b[i]];//如果不行，则插入到第一个大于等于本身的地方 &#125; printf(&quot;%d&quot;,len); return 0; &#125; （3）同类题目：AT4527 LCS 3、最长公共子上升序列(CF10D LCIS)（1）题目 给定两个长分别为$n、m$ 的序列$P_1$ 和 $P_2$ ，求它们的最长公共上升子序列。 $1 \\le n,m \\le500$。 （2）做法待补充（鸽了） import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"转载","slug":"转载","permalink":"http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://ccr39.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"进制与位运算","slug":"进制与位运算","date":"2022-12-16T00:53:00.000Z","updated":"2024-12-13T05:53:57.614Z","comments":true,"path":"转载/进制与位运算/","link":"","permalink":"http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/%E8%BF%9B%E5%88%B6%E4%B8%8E%E4%BD%8D%E8%BF%90%E7%AE%97/","excerpt":"","keywords":null,"text":"原文链接 一、进制（1）概念几进制指的是几进一，日常生活中常常使用十进制，在计算机语言中，2进制最常见。 同时，还有8进制，16进制等进制。 （2）进制的表示：①二进制：用前缀 $0b$ 表示；或用后缀 $B$ 表示，如：$01101001B$。 ②八进制：用前缀 $0o$ 表示，如 $0o76$ ；或用后缀 $O$ 表示，如：$257O$。 ③十进制：用前缀 $0d$ 表示,或用后缀 $D$ 表示。 ④十六进制：用前缀 $0x$ 表示,或用后缀 $H$ 表示。 在表示9以上的数时使用用$A、B、C、D、E、F$。 （3）进制的转换①n进制转10进制思路：将第a位数字乘以$n^{a-1}$,再作和。 代码： #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;cmath&gt; #include &lt;iomanip&gt; using namespace std; int n,b; string a; int main() &#123; cin&gt;&gt;n&gt;&gt;a; int l=a.size(); for(int i=1;i&lt;=l;i++) &#123; if (a[l-i]&gt;=&#39;0&#39;&amp;&amp;a[l-i-1]&lt;=&#39;9&#39;) a[l-i]-=&#39;0&#39;; if ( a[l-i]&gt;=&#39;A&#39; &amp;&amp; a[l-i]&lt;=&#39;F&#39; ) &#123; a[l-i]-=&#39;A&#39;; a[l-i]+=10; &#125; b+=a[l-i]*pow(n,i-1); &#125; cout&lt;&lt;b; return 0; &#125; 也可以用C++库函数实现，用到函数strtol()。 用法strtol( 字符串(char*型) , NULL，n ） 代码 #include&lt;bits/stdc++.h&gt; using namespace std; int n; char a[1000]; int main() &#123; cin&gt;&gt;n&gt;&gt;a; cout&lt;&lt;strtol(a,NULL,n); return 0; &#125; ②10进制转n进制思路：模n取余法，将十进制数向n取余，记录余数，知道十进制数为零，反向书写余数，即为n进制数。 代码： #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;cmath&gt; #include &lt;iomanip&gt; using namespace std; int n,b,i,ans[10000]; int main() &#123; cin&gt;&gt;n&gt;&gt;b; while(b&gt;0) &#123; ans[i++]=b%n; b/=n; &#125; for ( int q=i-1 ; q&gt;=0 ; q-- ) if(ans[q]&gt;=10&amp;&amp;ans[q]&lt;16 ) cout&lt;&lt;char(ans[q]+55); else cout&lt;&lt;ans[q]; return 0; &#125; ③二进制转十六进制。思路：一个有趣的性质 1位十六进制数码对应 4 位数的二进制数码。 所以将十六进制和二进制之间相互转换时并不需要以 10 进制为中间跳板，直接进行翻译即可。 例如二进制数 1010110111 经过分组可以变为 0010 1011 0111，直接查表（或者口算）可以翻译为 2B7。 反过来也是一样的。 ④n进制转m进制思路:先将n进制转10进制，再将10进制转m进制。 代码: #include&lt;bits/stdc++.h&gt; using namespace std; string a; int c[10000000],d,e,f,g,sum,ans; int main() &#123; scanf(&quot;%d&quot;,&amp;d); cin&gt;&gt;a; scanf(&quot;%d&quot;,&amp;f); for(int x=0;x&lt;a.size();x++)&#123; if(a[x]&lt;&#39;A&#39;)&#123; e=pow(d,a.size()-x-1); e*=(a[x]-&#39;0&#39;); sum+=e; &#125; else&#123; e=pow(d,a.size()-1-x); e*=(a[x]-&#39;A&#39;+10); sum+=e; &#125; &#125; while(sum&gt;0)&#123; c[g++]=sum%f; sum/=f; &#125; for(int x=g-1;x&gt;=0;x--)&#123; if(c[x]&gt;=10)printf(&quot;%c&quot;,c[x]+&#39;A&#39;-10); else printf(&quot;%d&quot;,c[x]); &#125; return 0; &#125; ⑤浮点数的进制转换思路：先转换整形,再将浮点数部分乘n取整。 (4) 二进制的深入探究在二进制中一个 0 或 1 的数码被称为一位。一个内存地址对应的 8 位，被称为一字节( Byte )。 一个 int 类型或 float 类型的变量占用 32 位空间。 而一个 char 的变量占用 8 位。 有些变量类型也有无符号数，例如 unsigned int 类型。 这个类型占用和 int 类型一样，为 32 位，但是以放弃存储正负符号为代价，可以储存比 int 多一倍的整数值（0 到$2^{32}$−1，接近4.3×$10^9$ ）。 计算机中还有其他的表示数据大小的单位，比如 1 KB 是 $2^{10}$ &#x3D;1024 字节（大约一千），1 MB 是 $2^{20}$ 字节（大约一百万）， 1 GB 是 $2^{30}$ 字节。 在带符号整数的情况下，$-57$ 如何被表示成负数呢？在计算机中又是如何计算 $66-57$ 呢? 我们用 8 位的 $signed$ $char$ 类型来举例 $57$ 用二进制表示为 $0011$ $1001$（补足 8 位）。 如何表示一个负数？ 可以占用最高位的一位来表示正负，0 表示非负，1 表示负数。 然后再经过以下方法处理 用除了第一位的数字表示这个负数的绝对值，第一位变成 1。这样的话 $-57$ 表示为 $1011$ $1001$。 这种表示方式称为原码。不过计算机不使用这种方式来表示负数。 将这个负数的绝对值的数全部取反，由 1 变为 0，0 变为 1。这样的话 $-57$ 表示为 $1100$ $0110$。这种表示方式成为反码。 使用反码有一个问题，对于$0$，既可以表示为$0000$ $0000$也可以表示为$1111$ $1111$，所以也不常用。 先计算这个负数的反码，然后加 1。这样的话 $-57$ 表示为 $1100$ $0111$。 这是计算机使用的表示数的方法，被称为补码。这种表达方式下，零只有 1 个，而$1111$ $1111$则代表 -1。 二、位运算（1）定义直接对整数在内存中的二进制位进行按位操作。 （2）运算符位运算包括与、或、非、异或等操作。 ①与运算:$A∧B$（在$C$语言写作”A&amp;B”）A与B全为真时，得数为真。（即: 1&amp;1 &#x3D; 1 ; 1&amp;0 &#x3D; 0 ; 0&amp;0 &#x3D; 0） ②或运算:$A∨B$(在$C$语言写作” A|B”）A或B中有一个为真是，得数为真。（即：$1|1&#x3D;1$ ; $1|0&#x3D;1$ ; $0|0&#x3D;0$） ③非运算：$￢A$(在$C$语言写作” ~A “）进行取反操作。（即：~1&#x3D;0 ; ~0&#x3D;1） ④异或运算：$A⊕B$（在$C$语言写作” $A$^$B$ “ ）只有当两个值一假一真时，得数为真，等效于 “ ( A &amp; ~B ) | (~A &amp; B) “ （即：除$1$^$0$得数位1外，得数均为零） 性质1：任何数与 0 异或即为本身。 性质2：任何偶数个相同的数异或后结果为 0。 性质3：任何数异或偶数次另一个数结果不变。 ⑤左移：$A&lt;&lt;B$ 将A的二进制向左移B位，空位用 0 补齐。 ⑥右移：$A&gt;&gt;B$ 将A的二进制向右移B位，非正数位删去。 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"转载","slug":"转载","permalink":"http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://ccr39.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"解决电脑钉钉视频会议无法旋转屏幕的问题","slug":"DingScreen","date":"2022-12-13T09:28:23.000Z","updated":"2024-12-13T05:56:19.083Z","comments":true,"path":"技术/DingScreen/","link":"","permalink":"http://ccr39.github.io/%E6%8A%80%E6%9C%AF/DingScreen/","excerpt":"","keywords":null,"text":"观前注意:如果第一次打开，请耐心加载，这个过程大约需要一分钟甚至更长，若长时间未反应，请尝试刷新。 最近一直在上网课，有一些同学反应，老师的手机因位置无法正向摆放导致画面反转，而且使用电脑的时候钉钉视频会议的屏幕无法旋转，导致极其别扭。本来我感觉并没有必要专门写一篇文章来说明这件事情，但介于博客建立不久，可以趁机宣传装逼一波，所以写一篇博客，来讨论一下关于此问题的方法。其中关于电脑屏幕旋转的问题可以适用于所有电脑窗口。 注意：本文章全片讨论钉钉视频会议，不是视频直播!!! 一、关于视频发起者(老师)钉钉的视频会议发起有两种模式：屏幕共享和摄像头。 1、PC(电脑)端老师上课用电脑，一般是使用ppt，所以是直接屏幕共享，如果对写字有特别要求的老师，也可能选择使用数位板，或者使用触屏设备。 使用屏幕共享的好处是，屏幕一般不可能发生显示翻转的问题。但是如果用摄像头就可能有例外的发生。我们可以在视频会议的页面来解决这个问题。 具体操作: 每点击一下这个按钮，自己的画面就会旋转90°。 2、手机端比起电脑，更多的老师也会选择手机端进行上课。 ①屏幕共享相关问题一般老师会在以下情景使用屏幕共享:第一，在需要使用ppt，或其他文件时。第二，老师通过屏幕共享加手机系统自带的摄像头进行直播。 手机进行屏幕共享，方向是不会出问题的，但是使用系统摄像头时摄像头现实的画面却和手机方向有关系。 你可能会问，为什么老师不用钉钉的摄像头反而要用手机自带的摄像头呢？ 实际上，使用手机自带摄像头的好处是:由于手机自带摄像头的算法优化比钉钉更好，已经使用钉钉摄像头，画面清晰度会被压缩导致降低(受网络影响十分明显)，所以使用手机系统摄像头加屏幕共享往往会获得更清晰的画面，但是也存在一定弊端。 使用钉钉摄像头可以在钉钉页面实时观察学生状态，而屏幕共享后因为需要切屏所以并不能这样做(当然你可以使用小窗) 就是上述所说的，系统摄像头的显示时根据手机摆放位置决定的，而屏幕共享的显示方向时和手机系统的方向一致的，所以会造成显示画面翻转的问题。 解决方法使用屏幕共享加系统摄像头导致屏幕翻转的问题解决方法很少，如果你爱捣鼓，你当然可以找一个摄像机app然后翻转画面，当然这很麻烦，也很粗暴。其他的方法(不如说建议): 老师可以先把题的解析写下，然后拍成照片，然后开启屏幕共享利用图片讲(当然这效果很不好，相当于一种妥协) 用一个手机支架或者找一些刁钻的物品做一个支撑平台，正着放置手机。 除了上述方法这个时候老师就没有其他办法了，但是参会者(学生)可以用其他方法自行解决这个问题。 ②使用钉钉视频会议自带摄像机的问题使用钉钉会议自带摄像机，屏幕的方向和手机的显示方向一致。所以，手机因摆放和显示方向不一致导致屏幕显示方向的问题是存在的。这个问题可以通过修改钉钉手机设置来解决，步骤如下: 手机钉钉主页面，点击头像 这个方法可以把竖向画面变成横向，但具体效果本人没有测试过，所以并不保证有效。 二、参会者(同学)可以采取的措施 (强烈建议老师观看此篇直接跳转第四条)因为手机屏幕可以随意翻转，所以当然不存在屏幕会倒着的问题，所以这里只讨论电脑端的操作方法。 注:以下方法适用于所有电脑软件的屏幕旋转问题。 1、利用系统旋转首先我们介绍一个最简单的也是最普遍的方法，使用Windows自带的屏幕旋转功能(什么，你告诉我你电脑不是windows系统?大佬另请高门吧) ①快捷键:Ctrl + Alt + 任意箭头键(四个快箭头分别代表四个方向)因电脑系统版本问题，可能存在快捷键无法使用的问题，我们可以用另外一种方法达到相似的效果。 ②右键点击桌面 因为系统版本问题，页面显示可能有所不同，请找到”显示方向”选择相应方向即可更改。 2、利用显卡或显示器旋转这个根据显卡不同，和显示器不同，是否支持和具体方法也不尽相同，由于上一个方法已经足够适用，故在此不赘述这个方法，有兴趣可自行百度。 3、利用屏幕录制工具进行旋转呢(不爱折腾的可以不用)听了上述方法，可能有人觉得这种方法并不优雅，因为其并不能实现单独窗口的旋转。那么是否可以达到这种效果？ 在查阅的部分博客后，我发现Windows是自带屏幕旋转的API的，包括python也有Screen Rotate的库，如果有大佬可以做一个软件那就太感谢了，但是对于向我这样的小白来说，采取了一种更为傻瓜式的做法，那就是利用窗口录制软件进行实时录制，然后再将录制的画面进行旋转即可，这里我们用到软件OBS Studio来演示。(当然这意味着你的电脑不能太卡) 当然你也可以用其他相似功能的软件，但是我强烈推荐OBS，免费还好用,关于OBS的使用教程点击这里对于本次使用的功能，你并不需要完全了解所有功能仅需了解基本安装以及初次使用的配置即可，当然你也可以在百度上搜索其他教程。 我们打开OBS,初次使用建议选择”仅使用虚拟摄像机” 点击”来源”中的加号，选择窗口采集。 点击确定 点击采集方式，如果此时你已经进入了视频会议，就会显示出钉钉会议。 点击之后点击确定，发现在”来源”里多出一个东西。 右击他，点击变换，就可以看到旋转多少度了。 之后可以在上面调整大小即可。 但是这个方法存在一个弊端，那就是钉钉的视频会议窗口如果被切屏，就会自动变成小窗，这时候屏幕采集就会卡住，也就是说你要保证没有页面处于全屏状态以保证钉钉没有启动小窗。 (如下图，第一张图显示的是正常状态，窗口并没有全屏，钉钉视频会议的窗口在右侧。第二张是窗口全屏后，发现小窗被启用，窗口采集无法正常适用) 4、利用工具人完成上述操作如果你是老师，您并不想麻烦自己，但是又想给同学一个良好的学习环境，你可以让某个同学利用OBS的虚拟摄像机功能达到一人配置，造福全班的效果。 首先你要找一个同学(电脑好用一点的同学)，让他完成”3”中的操作。 当某人完成”3”中的所有操作后，点击右下角”控件”中的启动虚拟摄像机。 打开钉钉视频会议页面，点击设置，然后点击视频，继续点击摄像头，选择”OBS”开头的。 之后我们让其他同学都看这位同学的屏幕，我们就可以看到翻转过来的老师的画面了。(当然你要让这位同学仔细阅读上文，不要切全屏，以保证所有同学的观看体验) 如果有老师需要技术支持，也欢迎到博客首页获取我的联系方式，以联系我。(博客初次访问速度可能较慢，请大家耐心等待，长时间无反应可以刷新重试) 至此，我已经讲完了，欢迎大家阅读我的其他文章，也欢迎大家转发这篇博客给老师。如果有什么其他的好方法或者出现的问题，也可以在下方留言。(评论区的加载需要一段时间，如果你没有看到评论区，请稍等或刷新) import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"技术","slug":"技术","permalink":"http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://ccr39.github.io/tags/%E6%9D%82%E8%B0%88/"}]},{"title":"浅谈我的学校","slug":"about_school","date":"2022-12-11T08:23:32.000Z","updated":"2024-12-13T06:08:33.368Z","comments":true,"path":"生活/about_school/","link":"","permalink":"http://ccr39.github.io/%E7%94%9F%E6%B4%BB/about_school/","excerpt":"","keywords":null,"text":"我？本人就读衡水志臻清河校区(衡水二中的分校)。 其他内容省略 如何评价衡水志臻RT请在评论留言 相关链接清河志臻吧清河志臻二次元同学群小游戏：吃掉衡水志臻 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"生活","slug":"生活","permalink":"http://ccr39.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"http://ccr39.github.io/tags/%E6%9D%82%E8%B0%88/"}]},{"title":"ACGN插画(一)","slug":"ACGN插画(一)","date":"2022-12-11T04:56:00.000Z","updated":"2024-12-13T05:55:47.322Z","comments":true,"path":"资源/ACGN插画(一)/","link":"","permalink":"http://ccr39.github.io/%E8%B5%84%E6%BA%90/ACGN%E6%8F%92%E7%94%BB(%E4%B8%80)/","excerpt":"","keywords":null,"text":"import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"资源","slug":"资源","permalink":"http://ccr39.github.io/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"图集","slug":"图集","permalink":"http://ccr39.github.io/tags/%E5%9B%BE%E9%9B%86/"}]},{"title":"基础计数原理与排列组合","slug":"基础计数原理与排列组合","date":"2022-12-10T16:00:00.000Z","updated":"2024-12-13T05:53:50.840Z","comments":true,"path":"转载/基础计数原理与排列组合/","link":"","permalink":"http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/%E5%9F%BA%E7%A1%80%E8%AE%A1%E6%95%B0%E5%8E%9F%E7%90%86%E4%B8%8E%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/","excerpt":"","keywords":null,"text":"一、加法原理和乘法原理1、定义：①加法原理：加法原理是分类计数原理，常用于排列组合中，具体是指：做一件事情，完成它有N类方式，第一类方式有$M_1$种方法，第二类方式有$M_2$种方法，……，第n类方式有Mn种方法，那么完成这件事情共有$M_1+M_2+……+M_n$种方法。 口诀：类类独立 ②乘法原理：做一件事，完成它需要分成N个步骤，做第一步有$M_1$种不同的方法，做第二步有$M_2$种不同的方法，……，做第n步有$M_n$种不同的方法。那么完成这件事共有 $N&#x3D;M_1×M_2×M_3×…×M_n$ 种不同的方法。 口诀：步步相关 2、例：（1）某中学八年级一班有12名男生，16名女生；二班有9名男生，17名女生。 问： 从这两个班的同学中，选择 1 名男生、1 名女生作为主持人。有几种选法? 利用乘法原理，总方案数等于 总男生数 * 总女生数 $ (12+9)* (16+17)&#x3D; 693 $ 3、模运算在得数较大时，要每进行一步计算就取余。 模运算符合以下规律 （1）$$ (a-b)\\%p&#x3D;(a\\%p-b\\%p)\\%p$$ （2）$$ (a + b)\\%p&#x3D;(a\\%p+b\\% p)\\%p$$ （3）$$(a*b)\\%p&#x3D;(a\\%p*b\\%p)\\%p$$ （4）$$(a^b)\\%p&#x3D;((a\\%p)^b)\\%p$$ 二、排列与组合1、排列数定义：从 n 个人里面选出 m 个人站成一排，方案数是： n ⋅ (n − 1) ⋯ (n − m + 1) &#x3D; $ \\frac{ n ! }{ (n-m)! } $。我们将它称为排列数。 排列数用 $A^m_n$ 表示“从 n 个元素里面取 m 个元素，排成一排的方案数”，也就是$ A^m_n $ &#x3D; $ \\frac{ n ! }{ (n-m)! } $。 2、组合数(1) 定义：用 $C^m_n$ 表示“从 n 个元素里面选出 m 个元素”的方案数,我们将它称为组合数。 (2) 公式:组合数的递推公式，称为帕斯卡公式。 $C^m_n$ &#x3D; $C^{m-1}_{n-1}$ + $C^{m-1}_n$ $C^n_0$&#x3D;1 ; $C^n_n$&#x3D;1 ; $C^0_0$&#x3D;1组合数的通项公式 $C^m_n$ &#x3D; $\\frac{A_n^m}{A_m^m}$ &#x3D; $\\frac{n\\cdot(n-1)\\cdot\\cdot\\cdot(n-m+1)}{m(m-1)\\cdot\\cdot\\cdot2\\cdot1}$ &#x3D; $\\frac{n!}{m!\\cdot(n-m)!}$互补性质 $C_n^m&#x3D;C^{n-m}_n$ (3) 代码实现①通项公式 long long fac(int n) &#123; long long f=1; for(int i=n;i&gt;0;i--) f *= i; return f; &#125;//求阶乘 long long C(int n, int m) &#123; return fac(n)/(fac(n - m)*fac(m)); &#125; ②递归公式 for (int i=0;i&lt;=21;i++) &#123; C[i][0] = C[i][i] = 1; for (int j=1;j&lt;i;j++) C[i][j]=C[i-1][j]+C[i-1][j-1] ; //递推 &#125; 文章转载于本人原博客 import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"转载","slug":"转载","permalink":"http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://ccr39.github.io/tags/%E7%AE%97%E6%B3%95/"},{"name":"数学","slug":"数学","permalink":"http://ccr39.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"hellow world","slug":"hellow-world","date":"2022-12-10T09:13:34.374Z","updated":"2024-12-13T05:57:04.408Z","comments":true,"path":"技术/hellow-world/","link":"","permalink":"http://ccr39.github.io/%E6%8A%80%E6%9C%AF/hellow-world/","excerpt":"","keywords":null,"text":"一、博客介绍经历了大概一个星期的搭建，本博客正式建立于2022&#x2F;12&#x2F;11。 博客采用的时hexo的框架以及Sakura的主题，感谢主题原作者以及修改者。 博客采用的是静态搭建，代码托管于github上。(这也直接导致了不进行代理时打开速度极慢) 至于为什么不用服务器并购买域名，你看我有这个钱吗。 未来预计会在gitee上进行镜像同步部署，以此来解决国内访问的问题。 二、捣鼓博客的经历关于博客的搭建，走的过的坑可太多了。 最开始环境的配置一番风顺。 第一个踩坑的环节就是git的push超时的问题，经历一晚上的斗争，发现无论是是否使用代理，push总是超时，结果等到第二天，居然直接成功push。(所以说这既是玄学吗) 第二个环节就是主题的配置，Sakura主题原本是一个WordPress主题，最初创建的时间大概是2017年(甚至更早)，hojun大佬把主题移植到hexo上，也是2018年的事情了，而且主题最后的维护在2019年，换句话说，我手上的主题，就是一个烂摊子，需要各种调试。于是我就开始来回穿梭于目录下的js文件，试图修改各种东西。 第三个环节就是自己新添加的功能上，添加评论区的过程比较顺利，就不提了，但是添加看板娘可太不容易了。首先第一个问题，就是垃圾的npm，使用npm下载资源包，疯狂报错，用修复指令修复，居然给我来了诋毁连环报错(是的，就是修完了他又让你修，循环下去)。最后我发现了利器yarn，先用npm install -g yarn安装，然后再用yarn add来下载资源包，彻底解决了报错的问题。 可这还没完，很快我就又发现了一个问题，就是在静态页面上不能直接链接到已有的文件。什么意思，打个比方，假如我有一个图片存在.\\img目录中，当我在index.html中配置src=&quot;.\\img\\图片.png&quot;时无法加载。调用f12控制台，打开源码，可以发现目录下方并不存在图片，打开github的仓库，又发现文件存在于目录中，这个问题，至今未得到解决。最后我想到了用外链的方法，既然文件确实存在于github中，那么可以用https://raw.githubusercontent.com/UeserID/仓库ID/master/img/图片.png的方式调用(ps.如果你想问为什么不用图床，我想书评图片指的是一个例子，实际上是一个json文件)。但是这样调用的速度，只能说dddd了。 有别的方法吗，我尝试在gitee上用同样的方法，调用gitee的文件，但是令我没想到的是，居然毫无卵用。最后我发现能用cdn的方法加速，但是用jsdeliver有一个弊端，那就是有500mb的限制，不能直接在原仓库使用，最后我选择新建了一个仓库，至此终于结束。 最后就是图床的问题，我使用了sm.ms的api和picgo+typora的配置(至于为什么不用gitee图床，因为稳定性问题) 三、总结总之虽然经历了很多东西，但是博客也算是建好了，也学到了不少东西，总的来说：值! import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs'; init({ el: '#waline', serverURL: 'https://waline-ccr39.netlify.app/.netlify/functions/comment', reaction: [ 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_heart_eyes.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_joy.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_dog_consider.png', 'https://unpkg.com/@waline/emojis@1.1.0/weibo/weibo_sob.png', ], emoji: [ '//unpkg.com/@waline/emojis@1.1.0/bilibili', '//unpkg.com/@waline/emojis@1.1.0/weibo', '//unpkg.com/@waline/emojis@1.1.0/qq', ] });","raw":null,"content":null,"categories":[{"name":"技术","slug":"技术","permalink":"http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://ccr39.github.io/tags/%E6%82%A6%E8%AF%BB/"}]}]}