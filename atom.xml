<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CCR39のLazyNest</title>
  
  <subtitle>QAQ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ccr39.github.io/"/>
  <updated>2023-01-07T03:46:53.166Z</updated>
  <id>http://ccr39.github.io/</id>
  
  <author>
    <name>ccr39</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Clash 的安装与详细的使用</title>
    <link href="http://ccr39.github.io/%E6%8A%80%E6%9C%AF/clash/"/>
    <id>http://ccr39.github.io/技术/clash/</id>
    <published>2023-01-06T08:47:35.000Z</published>
    <updated>2023-01-07T03:46:53.166Z</updated>
    
    <content type="html"><![CDATA[<p>科学上网可以说是网上冲浪的必备技能了，相信大家也接触过不少科学上网的工具。</p><p>这里我们介绍一个最常用的科学上网工具之一: <strong>Clash</strong></p><p>与 Clash 同样常用且强大的工具是V2ray，两者均可在各大系统操作系统中有相应客户端，以下我们主要介绍 Clash 在Windows上和在 Android上的使用，如果想为 IOS 配置 Clash 代理可以参考下文第四节的内容，其他系统的使用方法可以自行搜索。如果你想要了解更高级的使用方法，可以阅读<a href="https://docs.cfw.lbyczf.com/">官方文档</a>以了解更多。</p><h2 id="一、购买节点并获取订阅链接"><a href="#一、购买节点并获取订阅链接" class="headerlink" title="一、购买节点并获取订阅链接"></a>一、购买节点并获取订阅链接</h2><p>首先我们要去机场购买节点，所谓机场就是提供代理服务的网站。我们可以在机场购买订阅并获取订阅链接来使用网络代理服务。</p><p>机场提供的服务并不一定是稳定，高速，安全的。所以需要进行一定斟酌后再选用机场。而且由于再大陆内，提供代理网络服务并不合法，所以机场也有可能随时跑路，所以在购买节点时不建议长期订阅。</p><p>机场的价格往往与速度，稳定性挂钩，但是机场的价格普遍并不高。</p><p>博主使用的机场在<a href="https://www.efcloud.cc/#/register?code=AtpsDqhe">这里</a>，最便宜的价格的话是一个月一元100G，最高速度可以顶满带宽，完全足够个人使用。注册时记得输入邀请码:AtpsDqhe。</p><p>同时，机场一般也会提供使用方法和客户端资源，你可以参考机场上的方法来配置Clash。</p><h2 id="二、Clash的基本使用"><a href="#二、Clash的基本使用" class="headerlink" title="二、Clash的基本使用"></a>二、Clash的基本使用</h2><h3 id="1、Clash-for-Windows"><a href="#1、Clash-for-Windows" class="headerlink" title="1、Clash for Windows"></a>1、Clash for Windows</h3><h4 id="①下载客户端"><a href="#①下载客户端" class="headerlink" title="①下载客户端"></a>①下载客户端</h4><p><a href="https://ghproxy.com/https://github.com/Fndroid/clash_for_windows_pkg/releases/download/0.20.11/Clash.for.Windows.Setup.0.20.11.arm64.exe">国内镜像下载</a>、<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases/latest">官方 Github 发布页</a>（Github如果无法打开，请过一段时间刷新，下载速度可能比较缓慢，如果下载失败可尝试其他资源，下载时请找到找到适合你使用操作系统的安装包）</p><p>云盘中的不一定为最新版，最新版可在官方发布页下载。</p><h5 id="使用汉化包"><a href="#使用汉化包" class="headerlink" title="使用汉化包"></a>使用汉化包</h5><p>前往：<a href="https://github.com/BoyceLig/Clash_Chinese_Patch/releases/">官方发布页</a>或在此进行下载</p><p>如下图，将<code>app.asar</code>直接放入 resources 文件夹中，并进行替换。</p><p><img src="https://i0.hdslb.com/bfs/album/03f09b6aa5a83cfbcc0b0240c077672b2d66035b.png" alt="image-20230106213603592"></p><p>再次启动汉化成功。</p><h4 id="②导入配置文件"><a href="#②导入配置文件" class="headerlink" title="②导入配置文件"></a>②导入配置文件</h4><p>首次启动 Clash for Windows 后会出现下图所示界面代表启动成功：</p><p><img src="https://i0.hdslb.com/bfs/album/a479c8ff1869e2ece3f01267283cffcf05cc7a5b.png" alt="img"></p><p>导入配置文件有如下两个途径：</p><ul><li>URL 导入</li><li>本地文件拖拽导入</li></ul><p>你可以在机场中复制订阅地址来获得URL。</p><h5 id="URL-导入"><a href="#URL-导入" class="headerlink" title="URL 导入"></a>URL 导入</h5><p>点击界面左侧菜单 Profiles（即：配置），在顶部输入框填入 URL 并点击 Download 下载即可，下载完成后点击对应的配置文件即可载入</p><p><img src="https://i0.hdslb.com/bfs/album/e1c20872284b3c15273fd725b70f5233daba9064.png" alt="img"></p><h5 id="本地文件拖拽导入"><a href="#本地文件拖拽导入" class="headerlink" title="本地文件拖拽导入"></a>本地文件拖拽导入</h5><p>如果无法通过 URL 下载配置文件，则可以尝试在浏览器中下载配置文件后通过拖拽方式导入</p><p><img src="https://i0.hdslb.com/bfs/album/1a1e8198015b06ad69ea1cfe8f7d23f4088efdd9.gif" alt="img"></p><h4 id="③打开系统代理"><a href="#③打开系统代理" class="headerlink" title="③打开系统代理"></a>③打开系统代理</h4><p>返回 General 常规中，打开<code>System Proxy</code>系统代理即可，如果你希望开机自启，也可以勾选 <code>Start with Windows</code>开机自启。</p><ul><li><p>System Proxy：设置系统代理</p></li><li><p>Start with Windows: 设置开机自启</p></li></ul><p><img src="https://i0.hdslb.com/bfs/album/b295422b3f1535cc21f8542b7e8143b28ba03ad2.png" alt="img"></p><h3 id="2、Clash-for-Android"><a href="#2、Clash-for-Android" class="headerlink" title="2、Clash  for  Android"></a>2、Clash  for  Android</h3><h4 id="①下载客户端-1"><a href="#①下载客户端-1" class="headerlink" title="①下载客户端"></a>①下载客户端</h4><p><a href="https://tsutsu.cloud/s/WZgF7">云盘</a>)，<a href="https://github.com/Kr328/ClashForAndroid/releases">Github官方</a>(注意事项和上方相同)，[Google Play](<a href="https://play.google.com/store/apps/details?id=com.github.kr328.clash&hl=zh-cn">Clash for Android - Google Play 上的应用</a>)（大陆无法使用，所以如果没有已有的代理，无法使用Google Play下载</p><p>云盘中的不一定为最新版，最新版可在官方发布页下载。</p><h4 id="②添加订阅"><a href="#②添加订阅" class="headerlink" title="②添加订阅"></a>②添加订阅</h4><p>面板是有一键订阅的,直接点击就好,手动如下步骤</p><p>打开 Clash for Android ，依次进入 配置 &gt; 新配置 &gt; URL 。 在 URL 一栏中粘贴 Clash 配置订阅链接；自动更新 (分钟) 推荐填写 1440 ，即每 24 小时自动从链接中更新配置文件。</p><p><img src="https://i0.hdslb.com/bfs/album/f32ece7af42a79da60c80e35472912ede242879a.png" alt="img"></p><p>完成后点击右上角的保存按钮，Clash for Android 将下载配置文件，请点击选中添加的配置文件。</p><p><img src="https://i0.hdslb.com/bfs/album/54e14d9f71a273a1a610a430c912c79fbf6cdc5f.png" alt="img"></p><h4 id="③开启代理"><a href="#③开启代理" class="headerlink" title="③开启代理"></a>③开启代理</h4><p>返回软件首页。点击开关，即可进行代理。会提示是否同意创建VPN，请点击<code>允许</code>。</p><p><img src="https://i0.hdslb.com/bfs/album/b4f8e259084248fdcf0aedfc194b8ffc35a8ffa8.png" alt="img"></p><p>点开 “代理”，可以策略组进行选择。</p><h2 id="三、其他基本功能"><a href="#三、其他基本功能" class="headerlink" title="三、其他基本功能"></a>三、其他基本功能</h2><h3 id="1、代理模式"><a href="#1、代理模式" class="headerlink" title="1、代理模式"></a>1、代理模式</h3><h4 id="①代理模式的区别"><a href="#①代理模式的区别" class="headerlink" title="①代理模式的区别"></a>①代理模式的区别</h4><p>Clash 提供了 全局、规则、直连、脚本 四种代理模式。</p><ul><li>全局：设备上所有支持代理协议的浏览器、程序的 IP 均使用代理，换句通俗的话说，就是整个设备都通过代理来访问外部网络。</li><li>规则：使用 Clash 的规则文件进行上网流量分流，比如让国内IP、域名的流量直连，让国外的IP、域名通过代理连接。</li><li>直连：意思是直接连接，不使用代理上网。</li><li>脚本：利用用户自己写的脚本文件进行流量分流，需要配置脚本文件使用</li></ul><h4 id="②设置代理模式"><a href="#②设置代理模式" class="headerlink" title="②设置代理模式"></a>②设置代理模式</h4><p>在 Windows 端的 代理 的上方，从左到右依次为 全局 、规则 、直连 、脚本</p><p><img src="https://i0.hdslb.com/bfs/album/ba38e1be85c71fec0a99081f3e7df64dd409b77b.png" alt="image-20230107102620940"></p><p>在安卓端的 代理 中，点击右上角三个点，在弹出的框中的 模式 里可以设置代理模式，但仅在此次有效，下次启动会重新使用默认设置</p><p><img src="https://i0.hdslb.com/bfs/album/0176c49ba46cfe468b3a281ac09403a43f32e9fd.jpg" alt="img"></p><p>你也可以在设置中更改默认模式：点击 设置 &gt;&gt; 覆写 &gt;&gt; 模式</p><p><img src="https://i0.hdslb.com/bfs/album/c40cb3299cf2639ed90dfe4b8455f1997be41dcb.jpg" alt="img"></p><p><img src="https://i0.hdslb.com/bfs/album/7a45fc9f98440a03eebcd826200a6a88660e2ced.jpg" alt="img"></p><h3 id="2、设置终端代理"><a href="#2、设置终端代理" class="headerlink" title="2、设置终端代理"></a>2、设置终端代理</h3><p>在 Windows 端，可以直接为控制终端设置代理，来解决在终端中安装超时的问题。</p><p><img src="https://i0.hdslb.com/bfs/album/eca6383f81b25866bc40979b19419f37e50403c9.png" alt="image-20230107104212697"></p><h3 id="3、打开-Clash-的-Web-控制台"><a href="#3、打开-Clash-的-Web-控制台" class="headerlink" title="3、打开  Clash 的 Web 控制台"></a>3、打开  Clash 的 Web 控制台</h3><p>点击 Clash 核心后面的那行字。</p><p><img src="https://i0.hdslb.com/bfs/album/36a69d76f8452f98c0039faa4825aad2b1b9dadd.png" alt="image-20230107104457419"></p><p>此时我们就可以进入控制台</p><p><img src="https://i0.hdslb.com/bfs/album/353412355718e3bad1378e85005ca212d77d1248.png" alt="image-20230107104512368"></p><h2 id="四、使用-Clash-为局域网中的其他设备配置代理"><a href="#四、使用-Clash-为局域网中的其他设备配置代理" class="headerlink" title="四、使用 Clash 为局域网中的其他设备配置代理"></a>四、使用 Clash 为局域网中的其他设备配置代理</h2><p>使用 Clash 的 “允许局域网连接” 功能可以为 Clash 为局域网内的其他设备进行代理。</p><p>利用这个方法，我们可以解决在 IOS 端，配置 Clash 困难，复杂的问题。</p><h3 id="1、配置-Windows-端"><a href="#1、配置-Windows-端" class="headerlink" title="1、配置 Windows 端"></a>1、配置 Windows 端</h3><p>①打开 ”允许局域网连接” <img src="https://i0.hdslb.com/bfs/album/745c90ec132c89241b2c2ec9dda411442dc44bf8.png" alt="image-20230107105041262"></p><p>②点击 “允许局域网连接” 后方的图标，查看网络接口</p><p><img src="https://i0.hdslb.com/bfs/album/81ebc01c1ee1cb6ee8c6a63bc0a61e234c53008d.png" alt="image-20230107105331837"></p><p>③点击 “端口” 后方的数字，设置端口，端口号的范围应在 0 到 1023 ，你也可以使用默认的端口号不去设置。</p><h3 id="2、配置其他客户端"><a href="#2、配置其他客户端" class="headerlink" title="2、配置其他客户端"></a>2、配置其他客户端</h3><p>这里拿 IOS 举例，安卓或其他客户端大体相似，具体可自行查询 。</p><p>首先保证 PC 与手机在同一局域网下。</p><p>①打开手机设置：</p><p><img src="https://i0.hdslb.com/bfs/album/249eeca817f7838b1a18b51e270c22fbdebf5bd7.webp" alt="1000"></p><p>②打开 WiFi 设置；</p><p><img src="https://i0.hdslb.com/bfs/album/ebe1e53567643db11c1ccbbd43527b46110ac440.webp" alt="1000"></p><p>③向下滑动，找到HTTP设置——配置代理；</p><p><img src="https://i0.hdslb.com/bfs/album/0d2f48dfb13984a6ffa285d3c36ea860ba421404.webp" alt="1000"></p><p>④将配置代理的关闭勾选为手动；</p><p><img src="https://inews.gtimg.com/newsapp_bt/0/15227546881/1000" alt="img"></p><p>⑤将刚才查看的网络接口地址，和端口号分别填入服务器和端口中。</p><p>保存之后即可生效，其代理模式和 PC 端保持一致。</p><p>如果你不在想用代理，重新把配置代理关闭即可。</p><h2 id="五、完毕"><a href="#五、完毕" class="headerlink" title="五、完毕"></a>五、完毕</h2><p>到此，一些关于 Clash 的基本使用技巧已经简单概述，如果您还需要更多进阶技巧，可从此<a href="https://docs.cfw.lbyczf.com/">文档</a>中获取。</p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      Clash 的安装，以及机场的订阅。Clash 配置局域网代理，Clash 汉化包。
    
    </summary>
    
      <category term="技术" scheme="http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="工具" scheme="http://ccr39.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>vim的安装以及基础使用</title>
    <link href="http://ccr39.github.io/%E6%8A%80%E6%9C%AF/vim/"/>
    <id>http://ccr39.github.io/技术/vim/</id>
    <published>2023-01-05T13:24:00.000Z</published>
    <updated>2023-01-07T02:14:58.577Z</updated>
    
    <content type="html"><![CDATA[<p>Vim 是从 Vi 发展出来的一个文本编辑器，也是所有的 Unix Like 内置的文本编辑器。其拥有强大的对代码的处理功能，因此成为了许多大佬写代码的首选。</p><p>这里要说明, Vim 不是 IDE 他可以在任何的平台中使用，也没有对语言的限制。</p><p>可以说，学好对 Vim ，可以让你的手几乎不会离开键盘的主操作区，对我们有着极大的帮助。</p><h3 id="一、Vim-在-Windows-上的安装"><a href="#一、Vim-在-Windows-上的安装" class="headerlink" title="一、Vim 在 Windows 上的安装"></a>一、Vim 在 Windows 上的安装</h3><h4 id="1、直接安装-Vim-本体"><a href="#1、直接安装-Vim-本体" class="headerlink" title="1、直接安装 Vim 本体"></a>1、直接安装 Vim 本体</h4><p>在<a href="https://www.vim.org/download.php#pc">官网</a>中直接下载 Gvim 的安装包，根据提示进行安装。</p><p>安装完成之后，即可以从目录中启动 Vim ，或者，你可以在控制台中输入 Vim 进行使用。（当然要保证已经为 Vim 配置了环境变量）</p><p><img src="https://i0.hdslb.com/bfs/album/91c814cb3b478fe5bc5aad4d1afbbf0e18445085.png"></p><h4 id="2、在-VS-Code-中使用-Vim"><a href="#2、在-VS-Code-中使用-Vim" class="headerlink" title="2、在 VS Code  中使用 Vim"></a>2、在 VS Code  中使用 Vim</h4><p>直接在 VS Code 的拓展中搜索 Vim 即可让 VS Code 的文本编译方式转为和 Vim 相同。</p><p><img src="https://i0.hdslb.com/bfs/album/b54142a63ab086bbf799a9a545be5fe8c5158e65.png"></p><h3 id="二、Vim-的学习和使用"><a href="#二、Vim-的学习和使用" class="headerlink" title="二、Vim 的学习和使用"></a>二、Vim 的学习和使用</h3><p>如果你是安装的 Gvim 本体的话，你可以直接在控制台输入 <code>vimtutor</code>使用 Vim 自带的学习文档进行学习。</p><p>下面将在这里介绍 Vim 的基本使用。</p><p>如下图，Vim 为我们编辑文本提供了三种方式：命令模式、输入模式、底线命令模式。</p><p><img src="https://i0.hdslb.com/bfs/album/bfe47f2595be5e1031a5b43b673916ad90f27678.png"></p><p>当我们打开 Vim 默认的模式即为命令模式，在命令模式下，我们不能完成文本的输入等操作，但是我们可以通过键盘上的按键来操作并编辑文本。</p><p>当我们在命令模式下输入 : 时，会进入底线命令模式，这个时候，光标会在左下角出现，我们可以输入相应的指令并按回车执行指令。</p><p>在命令模式下，当我们输入 i a o 三个键时，即可进入输入模式，在输入模式下，我们可以正常的输入文字，如果想要切换回命令模式，需要按 esc 键。</p><p>下面是 vi&#x2F;vim 的键盘图</p><p><img src="https://i0.hdslb.com/bfs/album/0cfcae47854e492ed03c1ff8bc727efb85a690cc.gif"></p><p>Vim 的指令十分强大，需要一段时间的学习和适应，在熟悉按键之后，即可达到非常强大的效果。</p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      Vim 是从 Vi 发展出来的一个文本编辑器，也是所有的 Unix Like 内置的文本编辑器。其拥有强大的对代码的处理功能，因此成为了许多大佬写代码的首选。
    
    </summary>
    
      <category term="技术" scheme="http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="工具" scheme="http://ccr39.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="编程" scheme="http://ccr39.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>BOCCHI THE ROCK!</title>
    <link href="http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/bochinorock/"/>
    <id>http://ccr39.github.io/转载/bochinorock/</id>
    <published>2022-12-20T14:23:43.000Z</published>
    <updated>2023-01-07T03:16:35.308Z</updated>
    
    <content type="html"><![CDATA[<p>图片均来自于pixiv</p><h4 id="BOCHI"><a href="#BOCHI" class="headerlink" title="BOCHI"></a>BOCHI</h4><p><img src="https://i0.hdslb.com/bfs/album/0364f555e25e82ee8149d26094c91c2b7b6329e7.jpg" alt="103623763_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/46cae7409bbecfd0faa7ce477101f18f1d1a3154.jpg" alt="71286435_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/e7f51a64243142100e46728cd7f7ed51a3cf566b.png" alt="87245758_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/586427e8dee5903f2e04d197826304a5c61041e6.jpg" alt="102525167_p1"></p><p><img src="https://i0.hdslb.com/bfs/album/e116837c3e504d8bb520f241ff820a3b68f3152d.jpg" alt="102545983_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/91aed94cbc692229a6a2117f051e319a50e32475.jpg" alt="102545983_p1"></p><p><img src="https://i0.hdslb.com/bfs/album/93e18f650db95e42b915b0f9be05f45b77ab2816.jpg" alt="102633947_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/41752dbf82ac132e052fb44f86f05d1838abbb73.png" alt="102747940_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/674861b5a17e9df38c841fcd91db5696745fc735.jpg" alt="102992503_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/c6419f433e3c583a2edc0586a376a96ac83ae9cf.jpg" alt="103207286_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/3cb4472d03bbbae9c82e0da77dd5bb14ebf87f04.jpg" alt="4QsM2a8qEAG7k3I"></p><p><img src="https://i0.hdslb.com/bfs/album/e5d2651a760604cedd2d01118efd260c556775f3.jpg" alt="103584845_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/b467bd88e1a9f5b04144d9232efb24f7283bff5f.jpg" alt="103699340_p0"></p><h4 id="虹夏"><a href="#虹夏" class="headerlink" title="虹夏"></a>虹夏</h4><p><img src="https://i0.hdslb.com/bfs/album/432fe7a64a45b32fc52bdd85da26f92977ffb6e2.png" alt="102428118_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/2f00116c46cfb8877112a148bbf27a29613184d9.png" alt="102611735_p0"></p><p><img src="https://s2.loli.net/2022/12/20/dKh3CFEpjWce4i8.jpg" alt="102631448_p0"></p><p><img src="https://s2.loli.net/2022/12/20/rqTVe6wmoN23DAn.jpg" alt="102743429_p0"></p><p><img src="https://s2.loli.net/2022/12/20/FHVPq3LeoX9nzrm.jpg" alt="103110459_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/36cafccf695b04175dfa9bd510052fc1dfb75a1a.png" alt="103478209_p0"></p><p><img src="https://s2.loli.net/2022/12/20/JGw1ARMOpg4QifY.jpg" alt="103622290_p0"></p><p><img src="https://s2.loli.net/2022/12/20/EQ2Jz5UFiBDw9mj.jpg" alt="103707133_p0"></p><h4 id="喜多"><a href="#喜多" class="headerlink" title="喜多"></a>喜多</h4><p><img src="https://i0.hdslb.com/bfs/album/4b95679209240768218ade345c333dbbbc13b0a0.png" alt="102659264_p0"></p><p><img src="https://s2.loli.net/2022/12/20/KTGEDXCVdbsaAoe.png" alt="102799828_p0"></p><p><img src="https://s2.loli.net/2022/12/20/BgUbWIfFJYLCrxS.jpg" alt="102937742_p0"></p><p><img src="https://s2.loli.net/2022/12/20/jFxWqEbZJveO657.jpg" alt="103607509_p0"></p><p><img src="https://s2.loli.net/2022/12/20/uIaJ3OVXjWdgfCs.jpg" alt="103701381_p0"></p><h4 id="凉"><a href="#凉" class="headerlink" title="凉"></a>凉</h4><p><img src="https://s2.loli.net/2022/12/20/IG3BjzAwJqRgLUy.jpg" alt="102650565_p0"></p><p><img src="https://s2.loli.net/2022/12/20/sXWEm7taI1MdyvQ.jpg" alt="103125154_p0"></p><p><img src="https://s2.loli.net/2022/12/20/ZU6iwA7BaGztrJD.png" alt="103560795_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/bc6403397a07d63d11166b1bdb4c1dd425605ce6.png" alt="image-20221220224805644"></p><p><img src="https://s2.loli.net/2022/12/20/JokQACHdvVF1yTR.jpg" alt="103585595_p0"></p><p><img src="https://i0.hdslb.com/bfs/album/c34eca4e4be203340e11e5b4b19e64f8bf9a4aa9.png" alt="103629349_p0"></p><h4 id="END"><a href="#END" class="headerlink" title="END"></a>END</h4><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      pixiv孤独摇滚美图精选
    
    </summary>
    
      <category term="转载" scheme="http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="图集" scheme="http://ccr39.github.io/tags/%E5%9B%BE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>从零开始速通百度云网盘</title>
    <link href="http://ccr39.github.io/%E8%B5%84%E6%BA%90/panbaidu/"/>
    <id>http://ccr39.github.io/资源/panbaidu/</id>
    <published>2022-12-18T06:20:37.000Z</published>
    <updated>2023-01-07T03:47:24.771Z</updated>
    
    <content type="html"><![CDATA[<p>相信大家在网上冲浪时时常会下载一些资源、软件，如果你需要下载别人分享的资源时，就需要用到网盘。</p><p>百度云网盘由于早期在国内占据了一定规模的市场，拥有大量的资源与链接，直至目前，百度云网盘仍是被使用最多的网盘。但是百度的不当人做法，让百度云网盘的限速到达了堪称恐怖的境界，但另一方面，坐拥大量资源的百度云网盘让我们不得不通过它进行资源的传输。所以不少人选择了向百度屈服，充了百度的SVIP，但就算是SVIP仍然逃不过限速的命运。</p><p>还有这样一种情况，就是我们经常会看到一些资源分享链接，结果还没有来得及下载，链接就失效了。</p><p>直链下载和秒传链接就能帮助我们解决上述两个问题。</p><p>今天，由我为大家带来，从零开始速通百度云网盘，把带宽顶满，生成永久有效的秒链，从此告别限速与分享无效。</p><p>全文提供安卓和 Windows 两种方案，<strong>前面先讲的直链，秒链在最后面</strong>。</p><p>如果大家之前接触过安卓端使用ES文件管理器加ADM的方法，本人实测该方法已失效，所以请使用本文提供的方法。</p><h2 id="一、准备工作-科学上网（可自行跳过）"><a href="#一、准备工作-科学上网（可自行跳过）" class="headerlink" title="一、准备工作:科学上网（可自行跳过）"></a>一、准备工作:科学上网（可自行跳过）</h2><p>科学上网可以说是网上冲浪的必备技能了，相信大家也接触过不少科学上网的工具。</p><p>这里我们介绍一个最常用的科学上网工具之一: <strong>Clash</strong></p><p>与 Clash 同样常用且强大的工具是V2ray，两者均可在各大系统操作系统中有相应客户端，以下我们主要介绍 Clash 在Windows上和在 Android上的使用，其他系统的使用方法可以自行搜索。如果你想要了解更高级的使用方法，可以阅读<a href="https://docs.cfw.lbyczf.com/">官方文档</a>以了解更多。</p><h3 id="1、购买节点并获取订阅链接"><a href="#1、购买节点并获取订阅链接" class="headerlink" title="1、购买节点并获取订阅链接"></a>1、购买节点并获取订阅链接</h3><p>首先我们要去机场购买节点，所谓机场就是提供代理服务的网站。我们可以在机场购买订阅并获取订阅链接来使用网络代理服务。</p><p>机场提供的服务并不一定是稳定，高速，安全的。所以需要进行一定斟酌后再选用机场。而且由于再大陆内，提供代理网络服务并不合法，所以机场也有可能随时跑路，所以在购买节点时不建议长期订阅。</p><p>机场的价格往往与速度，稳定性挂钩，但是机场的价格普遍并不高。</p><p>博主使用的机场在<a href="https://www.efcloud.cc/#/register?code=AtpsDqhe">这里</a>，最便宜的价格的话是一个月一元100G，最高速度可以顶满带宽，完全足够个人使用。注册时记得输入邀请码:AtpsDqhe。</p><p>同时，机场一般也会提供使用方法和客户端资源，你可以参考机场上的方法来配置Clash。</p><h3 id="2、Clash-for-Windows"><a href="#2、Clash-for-Windows" class="headerlink" title="2、Clash for Windows"></a>2、Clash for Windows</h3><h4 id="①下载客户端"><a href="#①下载客户端" class="headerlink" title="①下载客户端"></a>①下载客户端</h4><p><a href="https://ghproxy.com/https://github.com/Fndroid/clash_for_windows_pkg/releases/download/0.20.11/Clash.for.Windows.Setup.0.20.11.arm64.exe">国内镜像下载</a>、<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases/latest">官方Github发布页</a>（Github如果无法打开，请过一段时间刷新，下载速度可能比较缓慢，如果下载失败可尝试其他资源，下载时请找到找到适合你使用操作系统的安装包）</p><p>云盘中的不一定为最新版，最新版可在官方发布页下载。</p><p>首次启动 Clash for Windows 后会出现下图所示界面代表启动成功：</p><p><img src="https://i0.hdslb.com/bfs/album/a479c8ff1869e2ece3f01267283cffcf05cc7a5b.png" alt="img"></p><h4 id="②导入配置文件"><a href="#②导入配置文件" class="headerlink" title="②导入配置文件"></a>②导入配置文件</h4><p>导入配置文件有如下两个途径：</p><ul><li>URL 导入</li><li>本地文件拖拽导入</li></ul><p>你可以在机场中复制订阅地址来获得URL。</p><h5 id="URL-导入"><a href="#URL-导入" class="headerlink" title="URL 导入"></a>URL 导入</h5><p>点击界面左侧菜单 Profiles，在顶部输入框填入 URL 并点击 Download 即可，下载完成后点击对应的配置文件即可载入</p><p><img src="https://i0.hdslb.com/bfs/album/e1c20872284b3c15273fd725b70f5233daba9064.png" alt="img"></p><h5 id="本地文件拖拽导入"><a href="#本地文件拖拽导入" class="headerlink" title="本地文件拖拽导入"></a>本地文件拖拽导入</h5><p>如果无法通过 URL 下载配置文件，则可以尝试在浏览器中下载配置文件后通过拖拽方式导入</p><p><img src="https://i0.hdslb.com/bfs/album/1a1e8198015b06ad69ea1cfe8f7d23f4088efdd9.gif" alt="img"></p><h4 id="③打开系统代理"><a href="#③打开系统代理" class="headerlink" title="③打开系统代理"></a>③打开系统代理</h4><p>返回 General 中，打开<code>System Proxy</code>即可，如果你希望开机自启，也可以勾选 <code>Start with Windows</code>。</p><ul><li><p>System Proxy：设置系统代理</p></li><li><p>Start with Windows: 设置开机自启</p></li></ul><p><img src="https://i0.hdslb.com/bfs/album/b295422b3f1535cc21f8542b7e8143b28ba03ad2.png" alt="img"></p><h3 id="3、Clash-for-Android"><a href="#3、Clash-for-Android" class="headerlink" title="3、Clash  for  Android"></a>3、Clash  for  Android</h3><h4 id="①下载客户端-1"><a href="#①下载客户端-1" class="headerlink" title="①下载客户端"></a>①下载客户端</h4><p><a href="https://tsutsu.cloud/s/WZgF7">云盘</a>)，<a href="https://github.com/Kr328/ClashForAndroid/releases">Github官方</a>(注意事项和上方相同)，[Google Play](<a href="https://play.google.com/store/apps/details?id=com.github.kr328.clash&hl=zh-cn">Clash for Android - Google Play 上的应用</a>)（大陆无法使用，所以如果没有已有的代理，无法使用Google Play下载</p><p>云盘中的不一定为最新版，最新版可在官方发布页下载。</p><h4 id="②添加订阅"><a href="#②添加订阅" class="headerlink" title="②添加订阅"></a>②添加订阅</h4><p>面板是有一键订阅的,直接点击就好,手动如下步骤</p><p>打开 Clash for Android ，依次进入 配置 &gt; 新配置 &gt; URL 。 在 URL 一栏中粘贴 Clash 配置订阅链接；自动更新 (分钟) 推荐填写 1440 ，即每 24 小时自动从链接中更新配置文件。</p><p><img src="https://i0.hdslb.com/bfs/album/f32ece7af42a79da60c80e35472912ede242879a.png" alt="img"></p><p>完成后点击右上角的保存按钮，Clash for Android 将下载配置文件，请点击选中添加的配置文件。</p><p><img src="https://i0.hdslb.com/bfs/album/54e14d9f71a273a1a610a430c912c79fbf6cdc5f.png" alt="img"></p><h4 id="③开启代理"><a href="#③开启代理" class="headerlink" title="③开启代理"></a>③开启代理</h4><p>返回软件首页。点击开关，即可进行代理。会提示是否同意创建VPN，请点击<code>允许</code>。</p><p><img src="https://i0.hdslb.com/bfs/album/b4f8e259084248fdcf0aedfc194b8ffc35a8ffa8.png" alt="img"></p><p>点开 “代理”，可以策略组进行选择。</p><h2 id="二、tampermonkey"><a href="#二、tampermonkey" class="headerlink" title="二、tampermonkey"></a>二、tampermonkey</h2><p>tampermonkey（油猴）是一个强大的浏览器插件，他为脚本在浏览器内运行提供了一个环境。</p><p>通过油猴我们可以使用脚本来做到许多神奇的操作，接下来我来带大家使用tampermonkey。</p><h3 id="1、浏览器的使用"><a href="#1、浏览器的使用" class="headerlink" title="1、浏览器的使用"></a>1、浏览器的使用</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>说到浏览器插件，首先就要说浏览器了，首推浏览器现在是Edge，适配绝大部分插件。</p><p>如果你有谷歌账号还熟练科学上网，推荐Chrome。</p><blockquote><p>实际上，常见的几乎所有国产浏览器，甚至手机的APP，以及Edge使用的是都是开源的chromemiu内核。</p><p>但其实Edge最初是自己制作内核，但是微软的工程师最后屈服于谷歌了。</p><p>所以Edge可以适配谷歌的所有插件，甚至可以一建导入，而且Edge在国内没被墙以及还有许多其他功能（Win10以上自带），所以在国内掀起了一波推崇热潮。</p><p>本人因为不想再下chrome用了自带的Edge，但实际体验极差，经常会卡顿，无响应。</p><p>所以我的推荐是，如果你会用Chrome还是不要用Edge了。</p></blockquote><p>其次的推荐Firefox、Opera。</p><h4 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h4><p>在安卓平台，首推kiwi浏览器，可以适用谷歌的所有插件，你可以再<a href="https://play.google.com/store/apps/details?id=com.kiwibrowser.browser">Google play</a>上直接搜索下载，如果你不会使用Google play可以<a href="https://pan.baidu.com/s/18YJ_ls_SKNKicBRYkwy9BA?pwd=mqpv">在此（百度网盘）</a>或<a href="https://alist.quickso.cn/kiwi">在此(推荐)</a>本地安装包。</p><p>你还可以在<a href="https://kiwibrowsercn.github.io/">Kiwi浏览器中文网</a>，获取更多的下载方式和详细的使用方法。</p><h3 id="2、安装tampermonkey"><a href="#2、安装tampermonkey" class="headerlink" title="2、安装tampermonkey"></a>2、安装tampermonkey</h3><h4 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h4><h5 id="①插件商店安装"><a href="#①插件商店安装" class="headerlink" title="①插件商店安装"></a>①插件商店安装</h5><p>以Edge为例，找到右上角三个点，点击&gt;拓展&gt;<a href="https://microsoftedge.microsoft.com/addons?hl=zh-CN">获取 Microsoft Edge 扩展</a>&gt;搜索tampermonkey点击获取</p><p>这里注意，不建议安装tampermonkey Beta因为Beta版本的某些功能并不稳定。</p><p>如果你使用的是Chrome浏览器，那么想要用谷歌的扩展商店需要科学上网，如果无法科学上网可以使用本地安装的方法。</p><h5 id="②本地安装"><a href="#②本地安装" class="headerlink" title="②本地安装"></a>②本地安装</h5><p>你还可以选择在<a href="https://pan.baidu.com/s/1erjqmYm4JmoIGv_0ZpBgZg?pwd=2k83">这里（百度云）</a>或<a href="https://softxm.lanzoui.com/ittn00472wja">这里（蓝奏云）</a>下载本地文件，完毕后打开浏览器，这里还是以Edge为例。</p><p>右上角三个点，点击&gt;扩展&gt;打开“开发者模式”&gt;打开之后把下载好的本地文件直接拖入即可安装。</p><p>如果显示出错无法安装右击文件，把文件后缀 .crx 改为 .zip 把文件解压，然后再次来到扩展页面，保证开发者模式打开，点击”加载解压缩的扩展”，进入到刚才解压好的文件夹的根目录，点击选择文件夹即可。</p><p><img src="https://i0.hdslb.com/bfs/album/86cd8c7a72e1d3178034eddfd0ba31c25c887e09.png" alt="屏幕截图 2022-12-17 225518"></p><p>这时可能会发生显示出错的情况，如:</p><p><img src="https://i0.hdslb.com/bfs/album/f99d0af2da0435206f9a02b4146dd45544402b91.png" alt="屏幕截图 2022-12-17 225729"></p><p>这种情况不用在意，可以正常使用。</p><h4 id="Android-1"><a href="#Android-1" class="headerlink" title="Android"></a>Android</h4><h5 id="①插件商店安装-1"><a href="#①插件商店安装-1" class="headerlink" title="①插件商店安装"></a>①插件商店安装</h5><p>Kiwi浏览器的商店依赖的时谷歌插件商店，因此需要科学上网。</p><p>打开Kiwi浏览器，先新建标签页，点击右上角三个点 &gt; 扩展程序 &gt; +(from store) &gt; 搜索 tampermonkey &gt; 添加到Chrome</p><p>同样，不建议安装tampermonkey Beta，因为Beta版本的某些功能并不稳定。</p><h5 id="②本地安装-1"><a href="#②本地安装-1" class="headerlink" title="②本地安装"></a>②本地安装</h5><p>在<a href="https://pan.baidu.com/s/1erjqmYm4JmoIGv_0ZpBgZg?pwd=2k83">这里（百度云）</a>或<a href="https://softxm.lanzoui.com/ittn00472wja">这里（蓝奏云）</a>下载本地文件，完毕后要注意文件被下载到的位置，不同手机浏览器的文件位置可能不一样，所以可以自行搜索并查找。</p><p>打开Kiwi浏览器，先新建标签页，点击右上角三个点 &gt; 扩展程序 &gt; +(from .zip&#x2F;.crx&#x2F;.user.js) </p><p>这时候在出现的文件管理器中找到刚才下载的文件，点击添加即可。</p><h3 id="3、安装脚本"><a href="#3、安装脚本" class="headerlink" title="3、安装脚本"></a>3、安装脚本</h3><p>确保安装完成tampermonkey后再次确保tampermonkey打开。</p><p>在浏览器内点击<a href="https://greasyfork.org/zh-CN/scripts/418182-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%AE%80%E6%98%93%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B-%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%A4%8D%E6%B4%BB%E7%89%88">这里</a>，点击安装此脚本以安装脚本。</p><p>安装成功后进入插件的管理面板，在电脑端浏览器，点击右上角拼图样式的图标&gt;点击tampermonkey&gt;管理面板。</p><p>在手机端中点击三个点，下滑到最后，找到tampermonkey，点击后再点击管理面板。</p><p>进入管理面板可以看到:</p><p><img src="https://i0.hdslb.com/bfs/album/1fe2be9b7f4939d488364a8573122a663676e468.png" alt="image-20221217232808739"></p><p>确保脚本打开，至此插件脚本安装成功。</p><h2 id="三、下载器的安装及配置"><a href="#三、下载器的安装及配置" class="headerlink" title="三、下载器的安装及配置"></a>三、下载器的安装及配置</h2><h4 id="Windows端-IDM下载器"><a href="#Windows端-IDM下载器" class="headerlink" title="Windows端:IDM下载器"></a>Windows端:IDM下载器</h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>在<a href="https://softxm.lanzoui.com/iTfYl045962h">这里</a>下载IDM破解版,然后解压。</p><h5 id="配置UA"><a href="#配置UA" class="headerlink" title="配置UA"></a>配置UA</h5><p>我提供的IDM是绿色版本，解压后，执行“!)绿化.bat”，就可以正常使用了。<br><strong>IDM配置</strong>：修改UA为 <strong>netdisk;PC</strong></p><p><img src="https://i0.hdslb.com/bfs/album/d3619b6ff9687223fc81406260442e7a139ae19a.png" alt="img"></p><h4 id="Android端-ADM下载器"><a href="#Android端-ADM下载器" class="headerlink" title="Android端:ADM下载器"></a>Android端:ADM下载器</h4><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装:"></a>安装:</h5><p><a href="https://wwqs.lanzoub.com/ihvtf0ixw1ni">蓝奏云</a>,密码:2z6b</p><p><a href="https://pan.baidu.com/s/1ezna3ReSLd9qWGpZqIubMw?pwd=jv67">百度云</a></p><p>[Google Play](<a href="https://play.google.com/store/apps/details?id=com.dv.adm&gl=US">Advanced Download Manager - Google Play 上的应用</a>)</p><h5 id="配置UA-1"><a href="#配置UA-1" class="headerlink" title="配置UA"></a>配置UA</h5><p>进入ADM，点击设置&gt;下载中，滑倒最下方找到浏览器标识。选择最下方的自定义，然后再最下方的自定义设置中输入<code>netdisk;PC</code>。保存</p><p><img src="https://i0.hdslb.com/bfs/album/74ecb42d4387eb78e3b56e616045eb01fbfcb67b.jpg" alt="8A9641096D25DB0F40DE328FFE9FF6EC"></p><p><img src="https://i0.hdslb.com/bfs/album/3c9a60b28265211e1d9844fb07e278b9f2a5cb42.jpg" alt="E7611CD2D796277A305C6949FECA542E"></p><p><img src="https://i0.hdslb.com/bfs/album/63f555db25c5defe03e518110453137d2d9b4931.jpg" alt="B235B8DA73179154E838F2D66A9E2F23"></p><p><img src="https://i0.hdslb.com/bfs/album/796f0fadbb639fd2b843a34a79b48c4813a93454.jpg" alt="50CE2BE8F7CDB3A76C656B0560A54189"></p><p><img src="https://i0.hdslb.com/bfs/album/26ca4741b9110722ded38036d534e8fac55feaea.jpg" alt="57326DEE9C789ECB7BD34E55014E0CBC"></p><h2 id="四、获取直链并下载"><a href="#四、获取直链并下载" class="headerlink" title="四、获取直链并下载"></a>四、获取直链并下载</h2><p>将百度网盘中你想下载的文件转存如自己的网盘中。</p><p>如果是安卓端，需要在Kiwi浏览器右上角三个点勾选桌面版网站来访问电脑版网站。</p><p>同时，因为在手机端打开网页会自动跳转，请保证在勾选桌面版网站之后访问<a href="https://pan.baidu.com/disk/main#/index?category=all">百度网盘网页端</a>。</p><p>打开浏览器，进入<a href="https://pan.baidu.com/disk/main#/index?category=all">百度网盘网页端</a>，找到刚才转存的文件。</p><p>勾选，并点击简易下载助手。</p><p><img src="https://s2.loli.net/2022/12/18/mLbkXHx7ZMcdFSa.png" alt="屏幕截图 2022-12-18 111730"></p><p>点击获取直链地址，如果需要验证码可以根据提示，关注公众号，获取验证码，填写完毕后再次点击获取直链地址。</p><p>完成后点击复制直链地址，这里也要注意，关注下方的公告，我们已经把UA改为目前可用的UA，但不排除更换的可能性，如果需要更换UA，请根据下方公告填写。</p><h4 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h4><p>接下来打开IDM，点击新建任务。</p><p><img src="https://s2.loli.net/2022/12/18/HT8u6B2jSlPts4L.png" alt="image-20221218112353177"></p><p>将刚才的直链地址复制进去点击确定，开始下载。</p><p><img src="https://s2.loli.net/2022/12/18/AQO6qn9eUfEwjS4.png" alt="image-20221218112504667"></p><p>可以看到，我们的带宽已经跑满。</p><h4 id="Android-2"><a href="#Android-2" class="headerlink" title="Android"></a>Android</h4><p>进入ADM,点击下方加号把刚才的直链复制进去。</p><p><img src="https://s2.loli.net/2022/12/18/9gVrIhxwckPSQmC.jpg" alt="8D225EEB02CB9DC1F3D4DBE7599ADAE1"></p><p>展开高级选项，在下方的浏览器标识中选择”自定义”，接下来点击开始进行下载。</p><p><img src="https://s2.loli.net/2022/12/18/2tlAfjSGQ5oxag3.jpg" alt="9BABD44F94B8B7F2DED33B1C715B0D19"></p><p>网速也是跑满了带宽:</p><p><img src="https://s2.loli.net/2022/12/18/KeTWHYZ3aB6u2lU.jpg" alt="FD32E0FB3C9DD9BB4E813B2CEBB1F248"></p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><h4 id="无权限下载"><a href="#无权限下载" class="headerlink" title="无权限下载"></a>无权限下载</h4><p>这是因为UA设置错误导致的，请查看是否有新的UA，然后再按上面的方法重新配置UA。</p><p>在ADM中，一定要保证在下载时的浏览器表示中使用自定义。</p><h4 id="下载过慢-x2F-网速不正常"><a href="#下载过慢-x2F-网速不正常" class="headerlink" title="下载过慢&#x2F;网速不正常"></a>下载过慢&#x2F;网速不正常</h4><p>这可能与你的线程设置有关系，ADM和IDM的默认线程数为8线程，而脚本要求的线程数是4线程。</p><p>常规来说，在带宽顶满之前，线程数越多下载速度越快，但是过多的线程数可能会引起系统异常，从而停止对你的文件传输。</p><p>实际使用来说，使用8线程一般不会造成问题，但也存在例外。</p><p>因此，如果下载速度异常，请先尝试将最大线程数调到4线程，如果无效，可以尝试配置更多的线程观察是否对下载速度有一定帮助。</p><p>下面介绍修改最大线程数的方法。</p><p>IDM：<img src="https://s2.loli.net/2022/12/18/2q1kYVKDsjv4gpy.jpg" alt="img"></p><p> ADM:在添加下载任务&gt;高级选项中</p><p><img src="https://s2.loli.net/2022/12/18/K4t2Daxvk3GzquB.jpg" alt="387C05B4D974FD0B523CF5D7016A941B"></p><h2 id="五、秒传链接的使用"><a href="#五、秒传链接的使用" class="headerlink" title="五、秒传链接的使用"></a>五、秒传链接的使用</h2><p>秒传链接实现了分享网盘资源永久分享。</p><p>接下来介绍秒传链接的使用方法。</p><h3 id="Windows-3"><a href="#Windows-3" class="headerlink" title="Windows"></a>Windows</h3><p>在安装完Tampermonkey的浏览器中点击<a href="https://greasyfork.org/zh-CN/scripts/424574-%E7%A7%92%E4%BC%A0%E9%93%BE%E6%8E%A5%E6%8F%90%E5%8F%96">这个</a>链接。</p><p>点击安装后点击安装此脚本，进行安装。</p><p>完成后进入到网页版百度网盘，选择需要传输的文件，点击生成秒传。</p><p><img src="https://s2.loli.net/2022/12/18/xObJSnwPtieTrq8.png" alt="image-20221218130007933"></p><p>接下来点击复制秒传代码即可生成。</p><p><img src="https://s2.loli.net/2022/12/18/Cx3t6lmc78rQTJ4.png" alt="image-20221218130055870"></p><p>想要导入秒传文件，则点击秒传，并将秒传链接复制在其中。</p><h3 id="Android-3"><a href="#Android-3" class="headerlink" title="Android"></a>Android</h3><p>在安卓端，你可以参考上面的方法在Kiwi浏览器中打开<a href="https://greasyfork.org/zh-CN/scripts/424574-%E7%A7%92%E4%BC%A0%E9%93%BE%E6%8E%A5%E6%8F%90%E5%8F%96">这个</a>，下载脚本。</p><p>并打开桌面版网站，进入百度云网盘，和上面Windows端使用同样的方法进行秒传。</p><p>这里我们介绍另一种方法，依靠的是手机的客户端导入秒传文件（仅支持导入，想要生成还是用上面的办法）。</p><p>首先下载狐悠（<a href="https://pan.baidu.com/s/1v54fJZFTDp5Iem-ceiOjIA?pwd=bf7v">百度网盘</a>、<a href="https://wwqs.lanzoub.com/iNpkz0iy47fe">蓝奏云 提取码：2mu9</a>)</p><p>进入APP，然后登陆百度网盘，直接将秒传链接复制进去即可导入秒传文件。</p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>至此，你已经学会了如何以正确姿势使用百度网盘了，请记住，白嫖是有代价的，不爱折腾不可能得到良好的体验。</p><p><strong>只有能折腾，才能获得更好的体验，所以不要犯懒，经过上述方法，你一定能完美使用百度网盘</strong></p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      教给大家如何科学的使用百度云网盘，从零开始速通百度云网盘，把带宽顶满，生成永久有效的秒链，从此告别限速与分享无效。
    
    </summary>
    
      <category term="资源" scheme="http://ccr39.github.io/categories/%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="软件" scheme="http://ccr39.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>编程环境的搭建与scoop的使用</title>
    <link href="http://ccr39.github.io/%E6%8A%80%E6%9C%AF/scoop/"/>
    <id>http://ccr39.github.io/技术/scoop/</id>
    <published>2022-12-16T14:46:00.000Z</published>
    <updated>2023-01-07T02:14:28.114Z</updated>
    
    <content type="html"><![CDATA[<p>学习计算机编程语言，想必第一件事情就是搭建所需的环境，但往往环境的搭建是非常折磨人的。</p><p>你是否曾自己一人，抱着满腔热血，试图学习某门语言，但却因为 IDE 或编译器无法运行而在各个网页间来回穿梭？</p><p>你是否在想要使用别人的项目时，却面对这琳琅满目的报错中独自发愁。</p><p>鲁迅曾经说过“我刚开始学编程，最痛苦的一件事就是搭建环境。”那么今天我就为大家来避避踩过的坑。</p><h3 id="一、何为环境？"><a href="#一、何为环境？" class="headerlink" title="一、何为环境？"></a>一、何为环境？</h3><p>  编程环境的方面包括很多，简单来说，编程环境指的是能供让代码或程序正常运行的环境。</p><p>那么需要哪些条件呢?</p><p>拿C++举例，首先你要有一个IDE，用来编写代码。其次你要有一个编译器，来编译代码。</p><p>那么这一套用来编译，并运行的条件就是C++的运行环境。(最简单的i</p><h3 id="二、系统环境变量"><a href="#二、系统环境变量" class="headerlink" title="二、系统环境变量"></a>二、系统环境变量</h3><p>环境变量的使用是避坑的第一个环节。</p><p>记得学OI那会，第一次使用VS Code，闹腾半天愣是不知道如何添加环境变量，现在回想下来，其实原因就在于没有理解环境变量究竟是什么。</p><p>当你在控制台输入一些程序( 比如Windows自带的cmd时 )，你可能会看到这句话:</p><blockquote><p>Microsoft Windows [版本 10.0.22621.819]<br>(c) Microsoft Corporation。保留所有权利。</p></blockquote><p>这句话中包含了cmd的版本信息。</p><p>但是你是否想过，我们分明没有输入cmd的路径，但是系统是如何找到cmd的所在位置呢?</p><p>如果在最初搭建环境踩过坑的人，可能会联想到另外一种情况，就比如说，你在控制台输入<code>$ python index.py</code>时可能会报出出的错误:</p><blockquote><p>‘python’ 不是内部或外部命令，也不是可运行的程序<br>或批处理文件。</p></blockquote><p>想必聪明的读者一定能想得到，在这里系统并没有找到python的位置。</p><p>可能是两种情况:</p><ol><li>电脑中不存在python。</li><li>电脑中存在python但是不能被系统像找到cmd那样找到。</li></ol><p>那么现在就可以回答上面那个问题:<strong>系统是如何找到cmd的所在位置呢?</strong></p><p>答案就是<strong>环境变量</strong>。</p><p>在你的系统中，环境变量是用来储存一些程序的位置的东西，有了它系统就能知道程序的路径在哪里，所以想要解决上面的问题，我们就要知道如何去通过修改环境变量来使系统能够找到程序。</p><p>在Windows操作系统下，右击桌面上的此电脑，点击属性&gt;&gt;高级系统设置&gt;&gt;高级&gt;&gt;环境变量。即可修改环境变量。</p><p>而我们一般把值储存在<strong>Path变量</strong>中，值的格式就是你的程序的<strong>目录</strong>的路径，多个路径之间用逗号相隔。(在Win10以及以上版本中，你只点击编辑环境变量&gt;&gt;新建，就能够添加新的地址，而在其他版本中，则需要在整个变量最后添加逗号,再输入新的路径)</p><p>在这里，Windows还提供了两类环境变量，一个是用户变量，储存的变量是储存在用户中的，另外一个是系统变量，储存在系统中。如果不太了解什么意思，其实无论存在系统还是用户中都可以正常使用。</p><p>当我们用安装包安装的时候，环境变量一般会自动添加到系统中，但也不乏一些个例，从而可能会引起上述报错。还有人因为挪动了根目录的位置从而报错，原因也不难猜了，只需要把原来的环境变量修改为根目录就行了。</p><p>现在我们就可以理解上面的报错了，我们只需要把python的目录复制，添加到环境变量的Path变量中，就可以解决问题。还有、其他问题，比如报错说存在多个程序，那么就可能是由于电脑中的多个同名程序都被识别找到，但是系统不知道打开哪一个，这时候你可以用<code>$ where 程序名</code>来获取程序地址，再去环境变量中找到多余的某个路径，删去就可以。</p><p>简单来说，了解环境变量的本质之后，就能很大程度上手动解决许多问题。</p><p>再举一个解决实际问题的例子:</p><ul><li>假如说我们再使用指令<code>$ pip install XXX</code>时报错<code>pip 不是内部或外部命令，也不是可运行的程序或批处理文件。</code>我们就可以进行推测，首先我们知道pip时python自带的安装依赖包的程序，那么有可能是这个程序的目录没有在环境变量中，这时，我们可以查询pip在python目录的哪个地方，再把pip的路径复制，放到环境变量中即可。如果你发现自己的python没有自带pip，我们就可以用python的命令（或其他方法）安装pip，再把路径加入环境变量，即可解决</li></ul><h3 id="三、Scoop的使用"><a href="#三、Scoop的使用" class="headerlink" title="三、Scoop的使用"></a>三、Scoop的使用</h3><p>在 Windows 下，搭建开发环境一直是一个复杂且困难的问题。由于没有一个统一的标准，导致各种开发环境的安装方式差异巨大，需要付出很多不必要的时间成本。而 Scoop 可以帮助你统一安装并管理常见的开发软件，省去了手动下载安装，配置环境变量等繁琐步骤。</p><p>例如安装 python 和 nodejs 只需要执行：</p><pre><code class="powershell">scoop install pythonscoop install nodejs</code></pre><h4 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h4><p>scoop的安装依靠PoweShell，如果你使用的是 Windows 7 系统，那么PowerShell的版本可能过于陈旧。你可以手动安装新版的PowerShell。</p><p>安装命令:在PowerShell中输入</p><pre><code class="powershell">Set-ExecutionPolicy RemoteSigned -scope CurrentUserirm get.scoop.sh -outfile &#39;install.ps1&#39;.\install.ps1 -ScoopDir &#39;C:\Scoop&#39;</code></pre><h4 id="2、使用"><a href="#2、使用" class="headerlink" title="2、使用"></a>2、使用</h4><p>如：</p><pre><code class="powershell">scoop install python</code></pre><p>即可直接下载，并搭建python的环境。</p><p>详情可见<a href="https://github.com/ScoopInstaller/Scoop/wiki/Quick-Start">官方文档</a>。</p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      来解决环境搭建困难的避坑指南。
    
    </summary>
    
      <category term="技术" scheme="http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="编程" scheme="http://ccr39.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>基础动态规划</title>
    <link href="http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/baseDP/"/>
    <id>http://ccr39.github.io/转载/baseDP/</id>
    <published>2022-12-16T08:59:00.000Z</published>
    <updated>2023-01-07T03:18:32.530Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/blog/ccr39/post-bi-ji-dong-tai-gui-hua-di-yin-ru">原文链接</a></p><h3 id="一、基本概念与定义"><a href="#一、基本概念与定义" class="headerlink" title="一、基本概念与定义"></a>一、基本概念与定义</h3><h4 id="1、动态规划的概念"><a href="#1、动态规划的概念" class="headerlink" title="1、动态规划的概念"></a>1、动态规划的概念</h4><p>对于某些问题，我们可以将其分成若干个互相联系的阶段，并在每个阶段做出决策，从而达到最优解。</p><p>这种通过状态来影响决策，在经由决策引起状态转移的动态过程被称作动态规划（简称DP）</p><p>动态规划（DP）不是某种具体算法，而是一种思想。 </p><p>核心在于：把大问题转化为小问题，利用小问题的解，推断出大问题的解。</p><h4 id="2、状态"><a href="#2、状态" class="headerlink" title="2、状态"></a>2、状态</h4><p>当我们把大问题化成小问题时，只有大问题和小问题拥有相同的形式，才能考虑拆分子问题。</p><p>如果满足这个要求，那么我们遇到的每个子问题，都可以通过某种简洁的形式来 表达。</p><p>我们把可能遇到的每种“局面”称为状态。</p><p>设计完状态之后，只要能利用小状态的解求出大状态的解，就可以动手把题目做 出来！</p><h4 id="3、转移"><a href="#3、转移" class="headerlink" title="3、转移"></a>3、转移</h4><p>当我们设计好状态，我们需要用小状态推出大状态。</p><p>从一个状态的解，得知另一个状态的解，我们称之为“状态转移”。这个转移式子 称为“状态转移方程”。</p><h4 id="4、Dp的基本原则"><a href="#4、Dp的基本原则" class="headerlink" title="4、Dp的基本原则"></a>4、Dp的基本原则</h4><p>（1）最优子结构：大问题的最优解，一定是从小问题的最优解推出来的。</p><p>（2）无后效性：无后效性 现在的决策，只与过去的结果有关，而与过去的决策无关。</p><h4 id="5、DP与记忆化搜索"><a href="#5、DP与记忆化搜索" class="headerlink" title="5、DP与记忆化搜索"></a>5、DP与记忆化搜索</h4><h5 id="1-记忆化搜索"><a href="#1-记忆化搜索" class="headerlink" title="(1)记忆化搜索"></a>(1)记忆化搜索</h5><p>在经$dfs$搜索过程中，会产生许许多多的子序列，对于每个序列，可能会产生重复的元素。</p><p>例如：</p><pre><code>求99！，100！，101！</code></pre><p>一般思路，分别从1开始乘</p><p>但显然，对于这道题我们只需要算出99！，就不需要再从头计算了，因为100！即是99！ * 100，而101 !  即是 100 ！ * 101 ！</p><p>所以说，我们只需要在阶乘的过程中将 99 ! 的得数存到数组a[99]中，等到下次再调到用时，就可以直接访问a[99]，从而省去不必要的时间。</p><p>一般情况下，可以将O($2^n$)的时间复杂度优化为O($n^2$)的复杂度。</p><h5 id="2-DP"><a href="#2-DP" class="headerlink" title="(2)DP"></a>(2)DP</h5><p>对于同样的问题，我们并不考虑如何直接去求 99 !  ,而去考虑如何可以将 99 ！ 分成若干个子问题。</p><p>显然 99 ！ &#x3D;  98 ！ * 99；</p><p>而 98 ! &#x3D; 97! * 98;</p><p>以此类推，我们可以等到： 1 ！ &#x3D;   1</p><p>可以看出，对于所有的阶乘问题，我们都可以从 2的阶乘开始计算，最后一步步到达想要的结果，这就是DP。</p><p>同时，对于这道题，状态转移方程为：a[N] &#x3D; a[N - 1] * N;且a[0]&#x3D;1</p><h4 id="6、DP与递推"><a href="#6、DP与递推" class="headerlink" title="6、DP与递推"></a>6、DP与递推</h4><p>从上面我们的探究可以看出，对于同一个问题，DP的做法是，从最初结点开始遍历，在过程中，我们不考虑之前的值是否存在，也不考虑当决策是否对之后产生影响，只是根据状态转移方程，一步步选择，从而得到结果。</p><p>我们可发现，DP其实运用了递推的思想。</p><p>我们可以把状态转移方程看成递推公式，把初始值看做递推边界。</p><p>对于上题，我们同样可以写成递推公式</p><p>$F_n&#x3D;F_{n-1}*n$；$F_0&#x3D;1$</p><p>同时，我们可以把记忆化搜索看成递归的思想</p><p>在搜索过程中沿着某一个答案前进，在过程中调用之前所储存的答案。</p><p><strong>所以，记忆化搜索和递推也常被当做DP的一种实现方式。</strong></p><h3 id="二、DP程序的设计"><a href="#二、DP程序的设计" class="headerlink" title="二、DP程序的设计"></a>二、DP程序的设计</h3><h4 id="1、转移方式"><a href="#1、转移方式" class="headerlink" title="1、转移方式"></a>1、转移方式</h4><h5 id="（1）backward-型转移：我从哪里来"><a href="#（1）backward-型转移：我从哪里来" class="headerlink" title="（1）backward 型转移：我从哪里来?"></a>（1）backward 型转移：我从哪里来?</h5><p>这是一种常见的思路：对于一个没有求出解的状态，利用能走到它的状态，来得出它的解。</p><p>同时它也是记忆化搜索的方式</p><h5 id="（2）forward-型转移-考虑我到哪里去"><a href="#（2）forward-型转移-考虑我到哪里去" class="headerlink" title="（2）forward 型转移:考虑我到哪里去"></a>（2）forward 型转移:考虑我到哪里去</h5><p>对于一个已经求好了解的状态，拿去更新它能走 到的状态。</p><h4 id="2、DP三连"><a href="#2、DP三连" class="headerlink" title="2、DP三连"></a>2、DP三连</h4><ul><li><p>我是谁? (设计状态)</p></li><li><p>我从哪里来 (backward 型转移)</p></li><li><p>我到那里去 (forward 型转移)</p></li></ul><p>(两种转移方式中，只需要选择一个来设计转移即可。)</p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      基础的动态规划
    
    </summary>
    
      <category term="转载" scheme="http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="算法" scheme="http://ccr39.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>线性DP</title>
    <link href="http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/%E7%BA%BF%E6%80%A7DP/"/>
    <id>http://ccr39.github.io/转载/线性DP/</id>
    <published>2022-12-16T08:59:00.000Z</published>
    <updated>2023-01-07T03:17:49.521Z</updated>
    
    <content type="html"><![CDATA[<p>文章原链接: <a href="https://www.luogu.com.cn/blog/ccr39/post-bi-ji-xian-xing-dp">【笔记】线性DP - OIer:ccr39の博客 - 洛谷博客 (luogu.com.cn)</a></p><h2 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h2><p>线性$DP$,指利用线性结构对问题进行求解的一种常见的动态规划类型。 </p><p>对于线性$DP$ ，一般没有固定的模板，需要根据题意与状态进行逐步求解。</p><p>线性动态规划的目标函数为特定变量的线性函数，约束是这些变量的线性不等式或等式，目的是求目标函数的最大值或最小值。</p><p>因此，除了少量问题（如：LIS、LCS、LCIS等）有固定的模板外，大部分都要根据实际问题来推导得出答案。</p><h2 id="二、常见问题"><a href="#二、常见问题" class="headerlink" title="二、常见问题"></a>二、常见问题</h2><p>对于线性$DP$一般有以下常见模板题型：</p><h3 id="1、最长单调上升子序列（洛谷AT2827-LIS）"><a href="#1、最长单调上升子序列（洛谷AT2827-LIS）" class="headerlink" title="1、最长单调上升子序列（洛谷AT2827 LIS）"></a>1、最长单调上升子序列（洛谷<a href="https://www.luogu.com.cn/problem/AT2827">AT2827 LIS</a>）</h3><h4 id="（1）题目"><a href="#（1）题目" class="headerlink" title="（1）题目"></a>（1）题目</h4><ul><li>给定一个长为$n$ 的序列 $a_i$，求这个序列的单调上升子序列长度。</li><li>$1 \le a_i \le n \le10^5$。</li></ul><h4 id="（2）做法"><a href="#（2）做法" class="headerlink" title="（2）做法"></a>（2）做法</h4><h4 id="solution-1-O-n-2"><a href="#solution-1-O-n-2" class="headerlink" title="$solution~1:O(n^2)$"></a>$solution~1:O(n^2)$</h4><p>线性$DP$，根据我们<a href="https://www.luogu.com.cn/blog/ccr39/post-bi-ji-dong-tai-gui-hua-di-yin-ru">之前</a>介绍过得$DP$三连可以得到以下思路。</p><ol><li><p>我是谁？（设计状态）</p><p>我们考虑使用$DP[i]$来表示第以i位结尾的最长的单调上升子序列长度。</p><p>即：我是第i位之前的最长单调上升子序列的长度。</p></li><li><p>我从何而来 (backward 型转移)</p></li><li><p>我将到何方 (forward 型转移)</p><p>对于本题来说，我们采用第一种转移方式，考虑我是如何求得。</p></li></ol><p>我们可以发现，对于任何一个点$dp_i$来说，以它为结尾的最长单调上升子序列的长度就是在它之前的，元素值小于它的所有点的最大值+1。</p><p>即对于一个点$a_j(0\le j&lt; i)$若$a_j&lt;a_i$且在所有满足条件的j中,$dp_j$的值最大，那么，$dp_i&#x3D;dp_j+1$。</p><p>把写出它的状态转移方程：</p><h3 id="dp-i-x3D-max-dp-j-1-0-le-j-lt-i-a-j-lt-a-i-dp-0-x3D-0"><a href="#dp-i-x3D-max-dp-j-1-0-le-j-lt-i-a-j-lt-a-i-dp-0-x3D-0" class="headerlink" title="$dp_i&#x3D;max(dp_j)+1(0\le j&lt; i,a_j&lt;a_i );dp_0&#x3D;0$"></a>$dp_i&#x3D;max(dp_j)+1(0\le j&lt; i,a_j&lt;a_i );dp_0&#x3D;0$</h3><p>这样，我们就能求出每个阶段下最长的单调上升序列，再存储其最大值即可。</p><p>时间复杂度$O(n^2)$</p><h3 id="code-1"><a href="#code-1" class="headerlink" title="$code~1:$"></a>$code~1:$</h3><pre><code class="cpp">#include&lt;bits/stdc++.h&gt;#define re register#define rint re intconst int MAXN=1e5+5;int n,ans,a[MAXN],dp[MAXN];signed main()&#123;    scanf(&quot;%d&quot;,&amp;n);    for(rint i=1;i&lt;=n;i++)        scanf(&quot;%d&quot;,&amp;a[i]);    for(rint i=1;i&lt;=n;i++)    &#123;        for(rint j=1;j&lt;i;j++)            if(a[j]&lt;a[i])                dp[i]=max(dp[i],dp[j]);        ans=max(ans,++dp[i]);    &#125;    printf(&quot;%d&quot;,ans);    return 0;&#125;</code></pre><hr><h4 id="solution-2-O-nlogn"><a href="#solution-2-O-nlogn" class="headerlink" title="$solution~2:O(nlogn)$"></a>$solution~2:O(nlogn)$</h4><p>利用二分的思想，去维护一个单调递增的序列。</p><p>对于每一次的元素的插入，都利用二分查找其位置。</p><p>时间复杂度$O(nlogn)$</p><h4 id="code-2"><a href="#code-2" class="headerlink" title="$code$  $2:$"></a>$code$  $2:$</h4><pre><code class="cpp">#include&lt;bits/stdc++.h&gt;#define re register#define rint re intconst int MAXN=1e5+5;int n,a[MAXN],f[MAXN],p=1;signed main()&#123;    scanf(&quot;%d&quot;,&amp;n);    for(rint i=1;i&lt;=n;i++)        scanf(&quot;%d&quot;,&amp;a[i]);    f[p]=a[1];//把a[1]先放入数组中    for(rint i=2;i&lt;=n;i++)        if(a[i]&gt;f[p]) f[++p]=a[i];//如果a[i]&gt;s[p]也就是比现有元素都大，就直接将其插入到数组最后        else f[lower_bound(f+1,f+p+1,a[i])-f]=a[i];//在f中查找正好大于或等于a[i]的位置，并将其替换。lower_bound查找大于等于，upper_bound查找大于，两者初始仅可以在单调递增的序列中查询。    printf(&quot;%d&quot;,p);    return 0;&#125;</code></pre><h4 id="solution-3"><a href="#solution-3" class="headerlink" title="$solution$  $3:$"></a>$solution$  $3:$</h4><p>树形数组，对$DP$的一种优化方式，时间复杂度$O(nlogn)$,但常数比第二种方法大。</p><p>详解可<a href="https://www.luogu.com.cn/blog/820-2018/shu-zhuang-shuo-zu-qiu-lis">见此</a>。(<a href="https://www.luogu.com.cn/user/35360">@星爵</a>$dalao$)</p><h4 id="（3）同类题型-P1020导弹拦截、P1091合唱队形。"><a href="#（3）同类题型-P1020导弹拦截、P1091合唱队形。" class="headerlink" title="（3）同类题型:P1020导弹拦截、P1091合唱队形。"></a>（3）同类题型:<a href="https://www.luogu.com.cn/problem/P1020">P1020导弹拦截</a>、<a href="https://www.luogu.com.cn/problem/P1091">P1091合唱队形</a>。</h4><hr><h3 id="2、最长公共子序列-LCS-P1439"><a href="#2、最长公共子序列-LCS-P1439" class="headerlink" title="2、最长公共子序列$LCS$(P1439)"></a>2、最长公共子序列$LCS$(<a href="https://www.luogu.com.cn/problem/P1439">P1439</a>)</h3><h4 id="（1）题目-1"><a href="#（1）题目-1" class="headerlink" title="（1）题目"></a>（1）题目</h4><ul><li>给定两个长为$n$ 的序列$P_1$ 和 $P_2$ ，求它们的最长公共子序列。</li><li>$1  \le n \le10^5$。</li></ul><h4 id="（2）做法-1"><a href="#（2）做法-1" class="headerlink" title="（2）做法"></a>（2）做法</h4><h4 id="solution1：O-n-2"><a href="#solution1：O-n-2" class="headerlink" title="$solution1：O(n^2)$"></a>$solution<del>1：</del>O(n^2)$</h4><p>线性$DP$，我们继续按照<a href="https://www.luogu.com.cn/blog/ccr39/post-bi-ji-dong-tai-gui-hua-di-yin-ru">之前</a>做题的思路，使用$DP$三连分析问题。</p><ol><li><p>我是谁？（设计状态）</p><p>我们考虑使用$DP[i][j]$来表示$a_{1∼i},b_{1∼j}$的LCS长度。</p><p>即：我是第$a$的第i位之前,和b的第$j$位前，$a,b$的最长公共子序列。</p></li><li><p>我从何而来 (backward 型转移)</p></li><li><p>我将到何方 (forward 型转移)</p><p>这里我们依旧选择第二种转移方式解决此题。</p></li></ol><p>我们来思考，当$a[i]&#x3D;b[j]$时,那么就表示有新的公共元素，那么</p><p>$dp[i][j]&#x3D;dp[i-1][j-1]+1$</p><p>如果没有新的公共元素，那么就要继承之前的值</p><p>$dp[i][j]&#x3D;max(dp[i−1][j],dp[i][j−1])$</p><p>那么我们就可以写出来它的状态转移方程。</p><p><img src="https://s3.bmp.ovh/imgs/2021/08/e5c09e27db867f0b.png"></p><h4 id="code-1-1"><a href="#code-1-1" class="headerlink" title="$code~1:$"></a>$code~1:$</h4><pre><code class="cpp">#include&lt;iostream&gt;using namespace std;int dp[1001][1001],a[2001],b[2001],n,m;int main()&#123;   cin&gt;&gt;n;   for(int i=1;i&lt;=n;i++)scanf(&quot;%d&quot;,&amp;a[i]);   for(int i=1;i&lt;=n;i++)scanf(&quot;%d&quot;,&amp;b[i]);   for(int i=1;i&lt;=n;i++)    for(int j=1;j&lt;=n;j++)        if(a[i]==b[j]) dp[i][j]=dp[i-1][j-1]+1;         else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);   cout&lt;&lt;dp[n][n];&#125;</code></pre><hr><h4 id="solution-2-O-nlogn-1"><a href="#solution-2-O-nlogn-1" class="headerlink" title="$solution~2:O(nlogn)$"></a>$solution~2:O(nlogn)$</h4><p>将问题转化成$LIS$,将$a$序列映射进一个数组里，数组下标代表a序列的数，而数组的值表示其下标在$a$数组的位置。</p><p>即若 $a_1&#x3D;3,a_2&#x3D;2,a_3&#x3D;1,a_4&#x3D;4,a_5&#x3D;5$</p><p>那么$map_1&#x3D;3,map_2&#x3D;2,map_3&#x3D;1,map_4&#x3D;4,map_5&#x3D;5$</p><p>那么在根据$b$数组在$map$数组中的相对位置做$LIS$。</p><p>得到的就是他们的$LCS$。</p><p>换句话说，只要$b$中某个子序列在$a$中的相对位置单调递增，那么它就是$a$的子序列。</p><p>当$b_1&#x3D;1,b_2&#x3D;2,b_3&#x3D;3,b_4&#x3D;4,b_5&#x3D;5$时</p><p>$b_1$的位置在$a$中排第3位，$b_2$的的位置在$a$中排第2位,$b_3$的位置在$a$中排第1位，$b_4$的位置在$a$中排第4位,$b_5$的位置在$a$中排第5位。</p><p>(也可以写成$map_{b_1}&#x3D;3,map_{b_2}&#x3D;2,map_{b_3}&#x3D;1,map_{b_4}&#x3D;4,map_{b_5}&#x3D;5$)</p><p>在此之中，最长单调上升子序列为$1,4,5$,那么相对应的,$b$与$a$的$LCS$就是$b_3,b_4,b_5$。</p><p>时间复杂度$O(nlogn)$,但仅限于全排列数组。</p><h4 id="code-2-1"><a href="#code-2-1" class="headerlink" title="$code~2:$"></a>$code~2:$</h4><pre><code class="cpp">#include&lt;bits/stdc++.h&gt;#define re register#define rint re intusing namespace std;const int MAXN=1e6+5;int a,b[MAXN],Map[MAXN],dp[MAXN];int main()&#123;    rint n,len=0;    scanf(&quot;%d&quot;,&amp;n);    for(rint i=1;i&lt;=n;i++)        scanf(&quot;%d&quot;,&amp;a),Map[a]=i;    for(rint i=1;i&lt;=n;i++)        scanf(&quot;%d&quot;,&amp;b[i]),dp[i]=0x7fffffff;//因为要查找位置，所以dp要赋极大值     for(rint i=1;i&lt;=n;i++)        if(Map[b[i]]&gt;dp[len]) dp[++len]=Map[b[i]];//如果可以直接满足递增，则直接插入尾部         else         &#123;            rint k=lower_bound(dp+1,dp+len+1,Map[b[i]])-dp;            dp[k]=Map[b[i]];//如果不行，则插入到第一个大于等于本身的地方         &#125;    printf(&quot;%d&quot;,len);    return 0;&#125;</code></pre><h4 id="（3）同类题目：AT4527-LCS"><a href="#（3）同类题目：AT4527-LCS" class="headerlink" title="（3）同类题目：AT4527 LCS"></a>（3）同类题目：<a href="https://www.luogu.com.cn/problem/AT4527">AT4527 LCS</a></h4><hr><h3 id="3、最长公共子上升序列-CF10D-LCIS"><a href="#3、最长公共子上升序列-CF10D-LCIS" class="headerlink" title="3、最长公共子上升序列(CF10D LCIS)"></a>3、最长公共子上升序列(<a href="https://www.luogu.com.cn/problem/CF10D">CF10D LCIS</a>)</h3><h4 id="（1）题目-2"><a href="#（1）题目-2" class="headerlink" title="（1）题目"></a>（1）题目</h4><ul><li>给定两个长分别为$n、m$ 的序列$P_1$ 和 $P_2$ ，求它们的最长公共上升子序列。</li><li>$1  \le n,m \le500$。</li></ul><h4 id="（2）做法-2"><a href="#（2）做法-2" class="headerlink" title="（2）做法"></a>（2）做法</h4><p>待补充（鸽了）</p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      搬运转载
    
    </summary>
    
      <category term="转载" scheme="http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="算法" scheme="http://ccr39.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>进制与位运算</title>
    <link href="http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/%E8%BF%9B%E5%88%B6%E4%B8%8E%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>http://ccr39.github.io/转载/进制与位运算/</id>
    <published>2022-12-16T00:53:00.000Z</published>
    <updated>2023-01-07T02:17:00.575Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/blog/ccr39/post-bi-ji-jin-zhi-yu-wei-yun-suan">原文链接</a></p><h2 id="一、进制"><a href="#一、进制" class="headerlink" title="一、进制"></a>一、进制</h2><h3 id="（1）概念"><a href="#（1）概念" class="headerlink" title="（1）概念"></a>（1）概念</h3><p>几进制指的是几进一，日常生活中常常使用十进制，在计算机语言中，2进制最常见。</p><p>同时，还有8进制，16进制等进制。</p><h3 id="（2）进制的表示："><a href="#（2）进制的表示：" class="headerlink" title="（2）进制的表示："></a>（2）进制的表示：</h3><p>①二进制：用前缀 $0b$ 表示；或用后缀 $B$ 表示，如：$01101001B$。</p><p>②八进制：用前缀 $0o$ 表示，如 $0o76$ ；或用后缀 $O$ 表示，如：$257O$。 </p><p>③十进制：用前缀 $0d$ 表示,或用后缀 $D$ 表示。</p><p>④十六进制：用前缀 $0x$ 表示,或用后缀 $H$ 表示。</p><p>在表示9以上的数时使用用$A、B、C、D、E、F$。</p><h3 id="（3）进制的转换"><a href="#（3）进制的转换" class="headerlink" title="（3）进制的转换"></a>（3）进制的转换</h3><h4 id="①n进制转10进制"><a href="#①n进制转10进制" class="headerlink" title="①n进制转10进制"></a>①n进制转10进制</h4><p>思路：将第a位数字乘以$n^{a-1}$,再作和。</p><p>代码：</p><pre><code class="cpp">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;algorithm&gt;#include &lt;cmath&gt;#include &lt;iomanip&gt;using namespace std;int n,b;string a;int main()&#123;    cin&gt;&gt;n&gt;&gt;a;    int l=a.size();    for(int i=1;i&lt;=l;i++)    &#123;        if (a[l-i]&gt;=&#39;0&#39;&amp;&amp;a[l-i-1]&lt;=&#39;9&#39;)        a[l-i]-=&#39;0&#39;;        if ( a[l-i]&gt;=&#39;A&#39; &amp;&amp; a[l-i]&lt;=&#39;F&#39; )        &#123;            a[l-i]-=&#39;A&#39;;            a[l-i]+=10;        &#125;        b+=a[l-i]*pow(n,i-1);    &#125;    cout&lt;&lt;b;    return 0;&#125;</code></pre><p>也可以用C++库函数实现，用到函数strtol()。</p><p>用法strtol( 字符串(char*型) , NULL，n ）</p><p>代码</p><pre><code class="cpp">#include&lt;bits/stdc++.h&gt;using namespace std;int n;char a[1000];int main()&#123;    cin&gt;&gt;n&gt;&gt;a;    cout&lt;&lt;strtol(a,NULL,n);    return 0;&#125;</code></pre><h4 id="②10进制转n进制"><a href="#②10进制转n进制" class="headerlink" title="②10进制转n进制"></a>②10进制转n进制</h4><p>思路：模n取余法，将十进制数向n取余，记录余数，知道十进制数为零，反向书写余数，即为n进制数。</p><p>代码：</p><pre><code class="cpp">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;algorithm&gt;#include &lt;cmath&gt;#include &lt;iomanip&gt;using namespace std;int n,b,i,ans[10000];int main()&#123;    cin&gt;&gt;n&gt;&gt;b;    while(b&gt;0)    &#123;        ans[i++]=b%n;        b/=n;    &#125;    for ( int q=i-1 ; q&gt;=0 ; q-- )        if(ans[q]&gt;=10&amp;&amp;ans[q]&lt;16 )        cout&lt;&lt;char(ans[q]+55);        else cout&lt;&lt;ans[q];    return 0;&#125;</code></pre><h4 id="③二进制转十六进制。"><a href="#③二进制转十六进制。" class="headerlink" title="③二进制转十六进制。"></a>③二进制转十六进制。</h4><p>思路：一个有趣的性质</p><p>1位十六进制数码对应 4 位数的二进制数码。</p><p>所以将十六进制和二进制之间相互转换时并不需要以 10 进制为中间跳板，直接进行翻译即可。</p><p>例如二进制数 1010110111 经过分组可以变为 0010 1011 0111，直接查表（或者口算）可以翻译为 2B7。</p><p>反过来也是一样的。</p><h4 id="④n进制转m进制"><a href="#④n进制转m进制" class="headerlink" title="④n进制转m进制"></a>④n进制转m进制</h4><p>思路:先将n进制转10进制，再将10进制转m进制。</p><p>代码:</p><pre><code class="cpp">#include&lt;bits/stdc++.h&gt;using namespace std;string a;int c[10000000],d,e,f,g,sum,ans;int main()&#123;    scanf(&quot;%d&quot;,&amp;d);    cin&gt;&gt;a;    scanf(&quot;%d&quot;,&amp;f);    for(int x=0;x&lt;a.size();x++)&#123;        if(a[x]&lt;&#39;A&#39;)&#123;            e=pow(d,a.size()-x-1);            e*=(a[x]-&#39;0&#39;);            sum+=e;        &#125;        else&#123;            e=pow(d,a.size()-1-x);            e*=(a[x]-&#39;A&#39;+10);            sum+=e;        &#125;    &#125;        while(sum&gt;0)&#123;        c[g++]=sum%f;        sum/=f;    &#125;    for(int x=g-1;x&gt;=0;x--)&#123;        if(c[x]&gt;=10)printf(&quot;%c&quot;,c[x]+&#39;A&#39;-10);        else printf(&quot;%d&quot;,c[x]);    &#125;    return 0;&#125;</code></pre><h4 id="⑤浮点数的进制转换"><a href="#⑤浮点数的进制转换" class="headerlink" title="⑤浮点数的进制转换"></a>⑤浮点数的进制转换</h4><p>思路：先转换整形,再将浮点数部分乘n取整。</p><p><img src="https://s3.bmp.ovh/imgs/2021/08/336edeacd5e37033.png"></p><h3 id="4-二进制的深入探究"><a href="#4-二进制的深入探究" class="headerlink" title="(4) 二进制的深入探究"></a>(4) 二进制的深入探究</h3><p>在二进制中一个 0 或 1 的数码被称为一位。一个内存地址对应的 8 位，被称为一字节( Byte )。</p><p>一个 int 类型或 float 类型的变量占用 32 位空间。</p><p>而一个 char 的变量占用 8 位。</p><p>有些变量类型也有无符号数，例如 unsigned int 类型。</p><p>这个类型占用和 int 类型一样，为 32 位，但是以放弃存储正负符号为代价，可以储存比 int 多一倍的整数值（0 到$2^{32}$−1，接近4.3×$10^9$ ）。</p><p>计算机中还有其他的表示数据大小的单位，比如 1 KB 是 $2^{10}$ &#x3D;1024 字节（大约一千），1 MB 是 $2^{20}$ 字节（大约一百万）， 1 GB 是 $2^{30}$ 字节。</p><p><strong>在带符号整数的情况下，$-57$ 如何被表示成负数呢？在计算机中又是如何计算 $66-57$ 呢?</strong></p><p>我们用 8 位的 $signed$ $char$ 类型来举例</p><p>$57$ 用二进制表示为 $0011$ $1001$（补足 8 位）。</p><p><strong>如何表示一个负数？</strong></p><p>可以占用最高位的一位来表示正负，0 表示非负，1 表示负数。</p><p>然后再经过以下方法处理</p><ol><li><p>用除了第一位的数字表示这个负数的绝对值，第一位变成 1。这样的话 $-57$ 表示为 $1011$ $1001$。</p><p>这种表示方式称为原码。不过计算机不使用这种方式来表示负数。</p></li><li><p>将这个负数的绝对值的数全部取反，由 1 变为 0，0 变为 1。这样的话 $-57$ 表示为 $1100$ $0110$。这种表示方式成为<strong>反码</strong>。</p><p>使用反码有一个问题，对于$0$，既可以表示为$0000$ $0000$也可以表示为$1111$ $1111$，所以也不常用。</p></li><li><p>先计算这个负数的反码，然后加 1。这样的话 $-57$ 表示为 $1100$ $0111$。</p><p>这是计算机使用的表示数的方法，被称为<strong>补码</strong>。这种表达方式下，零只有 1 个，而$1111$ $1111$则代表 -1。</p></li></ol><hr><h2 id="二、位运算"><a href="#二、位运算" class="headerlink" title="二、位运算"></a>二、位运算</h2><h3 id="（1）定义"><a href="#（1）定义" class="headerlink" title="（1）定义"></a>（1）定义</h3><p>直接对整数在内存中的二进制位进行按位操作。</p><h3 id="（2）运算符"><a href="#（2）运算符" class="headerlink" title="（2）运算符"></a>（2）运算符</h3><p>位运算包括与、或、非、异或等操作。</p><p>①与运算:$A∧B$（在$C$语言写作”A&amp;B”）A与B全为真时，得数为真。（即: 1&amp;1 &#x3D; 1 ; 1&amp;0 &#x3D; 0 ; 0&amp;0 &#x3D; 0）</p><p>②或运算:$A∨B$(在$C$语言写作” A|B”）A或B中有一个为真是，得数为真。（即：$1|1&#x3D;1$ ; $1|0&#x3D;1$  ; $0|0&#x3D;0$）</p><p>③非运算：$￢A$(在$C$语言写作” ~A “）进行取反操作。（即：~1&#x3D;0 ; ~0&#x3D;1）</p><p>④异或运算：$A⊕B$（在$C$语言写作” $A$^$B$ “ ）只有当两个值一假一真时，得数为真，等效于 “ ( A &amp; ~B ) | (~A  &amp;  B) “</p><p>（即：除$1$^$0$得数位1外，得数均为零）</p><ul><li><p>性质1：任何数与 0 异或即为本身。</p></li><li><p>性质2：任何偶数个相同的数异或后结果为 0。</p></li><li><p>性质3：任何数异或偶数次另一个数结果不变。</p></li></ul><p>⑤左移：$A&lt;&lt;B$ 将A的二进制向左移B位，空位用 0 补齐。</p><p>⑥右移：$A&gt;&gt;B$ 将A的二进制向右移B位，非正数位删去。</p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      算法实现进制转换与位运算
    
    </summary>
    
      <category term="转载" scheme="http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="算法" scheme="http://ccr39.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>解决电脑钉钉视频会议无法旋转屏幕的问题</title>
    <link href="http://ccr39.github.io/%E6%8A%80%E6%9C%AF/DingScreen/"/>
    <id>http://ccr39.github.io/技术/DingScreen/</id>
    <published>2022-12-13T09:28:23.000Z</published>
    <updated>2023-01-07T02:13:48.185Z</updated>
    
    <content type="html"><![CDATA[<p><code>观前注意:如果第一次打开，请耐心加载，这个过程大约需要一分钟甚至更长，若长时间未反应，请尝试刷新。</code></p><p>最近一直在上网课，有一些同学反应，老师的手机因位置无法正向摆放导致画面反转，而且使用电脑的时候钉钉视频会议的屏幕无法旋转，导致极其别扭。本来我感觉并没有必要专门写一篇文章来说明这件事情，但介于博客建立不久，可以趁机宣传<del>装逼</del>一波，所以写一篇博客，来讨论一下关于此问题的方法。其中关于电脑屏幕旋转的问题可以适用于所有电脑窗口。</p><p>注意：本文章全片讨论钉钉视频会议，不是视频直播!!!</p><h3 id="一、关于视频发起者-老师"><a href="#一、关于视频发起者-老师" class="headerlink" title="一、关于视频发起者(老师)"></a>一、关于视频发起者(老师)</h3><p>钉钉的视频会议发起有两种模式：屏幕共享和摄像头。</p><h4 id="1、PC-电脑-端"><a href="#1、PC-电脑-端" class="headerlink" title="1、PC(电脑)端"></a>1、PC(电脑)端</h4><p>老师上课用电脑，一般是使用ppt，所以是直接屏幕共享，如果对写字有特别要求的老师，也可能选择使用数位板，或者使用触屏设备。</p><p>使用屏幕共享的好处是，屏幕一般不可能发生显示翻转的问题。但是如果用摄像头就可能有例外的发生。我们可以在视频会议的页面来解决这个问题。</p><p>具体操作:<img src="https://s2.loli.net/2022/12/13/lqvuXYGEapNMxWn.png" alt="屏幕截图 2022-12-13 200638"></p><p><img src="https://i0.hdslb.com/bfs/album/06442820a534b11d5f679b8546fb3226d9a94f9f.png" alt="屏幕截图 2022-12-13 200719"></p><p><img src="https://i0.hdslb.com/bfs/album/4609cbffd206580646b8b8f723957d9270dcb2c7.png" alt="屏幕截图 2022-12-13 200907"></p><p>每点击一下这个按钮，自己的画面就会旋转90°。</p><h4 id="2、手机端"><a href="#2、手机端" class="headerlink" title="2、手机端"></a>2、手机端</h4><p>比起电脑，更多的老师也会选择手机端进行上课。</p><h4 id="①屏幕共享相关问题"><a href="#①屏幕共享相关问题" class="headerlink" title="①屏幕共享相关问题"></a>①屏幕共享相关问题</h4><p>一般老师会在以下情景使用屏幕共享:第一，在需要使用ppt，或其他文件时。第二，老师通过屏幕共享加手机系统自带的摄像头进行直播。</p><p>手机进行屏幕共享，方向是不会出问题的，但是使用系统摄像头时摄像头现实的画面却和手机方向有关系。</p><p>你可能会问，为什么<strong>老师不用钉钉的摄像头反而要用手机自带的摄像头呢</strong>？</p><p>实际上，使用手机自带摄像头的好处是:由于手机自带摄像头的算法优化比钉钉更好，已经使用钉钉摄像头，画面清晰度会被压缩导致降低(<strong>受网络影响十分明显</strong>)，所以使用手机系统摄像头加屏幕共享往往会获得<strong>更清晰的画面</strong>，但是也存在一定弊端。</p><ol><li>使用钉钉摄像头可以在钉钉页面实时观察学生状态，而屏幕共享后因为需要切屏所以并不能这样做(当然你可以使用小窗)</li><li>就是上述所说的，系统摄像头的显示时根据手机摆放位置决定的，而屏幕共享的显示方向时和手机系统的方向一致的，所以会造成显示画面翻转的问题。</li></ol><h5 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h5><p>使用屏幕共享加系统摄像头导致屏幕翻转的问题解决方法很少，如果你爱捣鼓，你当然可以找一个摄像机app然后翻转画面，当然这很麻烦，也很粗暴。其他的方法(不如说建议):</p><ul><li>老师可以先把题的解析写下，然后拍成照片，然后开启屏幕共享利用图片讲(当然这效果很不好，相当于一种妥协)</li><li>用一个手机支架或者找一些刁钻的物品做一个支撑平台，正着放置手机。</li></ul><p>除了上述方法这个时候老师就没有其他办法了，但是参会者(学生)可以用其他方法自行解决这个问题。</p><h4 id="②使用钉钉视频会议自带摄像机的问题"><a href="#②使用钉钉视频会议自带摄像机的问题" class="headerlink" title="②使用钉钉视频会议自带摄像机的问题"></a>②使用钉钉视频会议自带摄像机的问题</h4><p>使用钉钉会议自带摄像机，屏幕的方向和手机的显示方向一致。所以，手机因摆放和显示方向不一致导致屏幕显示方向的问题是存在的。这个问题可以通过修改钉钉手机设置来解决，步骤如下:</p><p>手机钉钉主页面，点击头像<img src="https://s2.loli.net/2022/12/13/gx2pS4NWclhtHJb.jpg" alt="Screenshot_20221213_215144"></p><p><img src="https://s2.loli.net/2022/12/13/oPZKIqpFxtcH6Gy.jpg" alt="Screenshot_20221213_215205"></p><p><img src="https://s2.loli.net/2022/12/13/y8gYuc5PIC3lKJT.jpg" alt="Screenshot_20221213_215212"></p><p>这个方法可以把竖向画面变成横向，但具体效果本人没有测试过，所以并不保证有效。</p><h3 id="二、参会者-同学-可以采取的措施-强烈建议老师观看此篇直接跳转第四条"><a href="#二、参会者-同学-可以采取的措施-强烈建议老师观看此篇直接跳转第四条" class="headerlink" title="二、参会者(同学)可以采取的措施 (强烈建议老师观看此篇直接跳转第四条)"></a>二、参会者(同学)可以采取的措施 (强烈建议老师观看此篇直接跳转第四条)</h3><p>因为手机屏幕可以随意翻转，所以当然不存在屏幕会倒着的问题，所以这里只讨论电脑端的操作方法。</p><p>注:以下方法适用于所有电脑软件的屏幕旋转问题。</p><h4 id="1、利用系统旋转"><a href="#1、利用系统旋转" class="headerlink" title="1、利用系统旋转"></a>1、利用系统旋转</h4><p>首先我们介绍一个最简单的也是最普遍的方法，使用Windows自带的屏幕旋转功能(什么，你告诉我你电脑不是windows系统?大佬另请高门吧)</p><h5 id="①快捷键-Ctrl-Alt-任意箭头键-四个快箭头分别代表四个方向"><a href="#①快捷键-Ctrl-Alt-任意箭头键-四个快箭头分别代表四个方向" class="headerlink" title="①快捷键:Ctrl + Alt + 任意箭头键(四个快箭头分别代表四个方向)"></a>①快捷键:Ctrl + Alt + 任意箭头键(四个快箭头分别代表四个方向)</h5><p>因电脑系统版本问题，可能存在快捷键无法使用的问题，我们可以用另外一种方法达到相似的效果。</p><h5 id="②右键点击桌面"><a href="#②右键点击桌面" class="headerlink" title="②右键点击桌面"></a>②右键点击桌面</h5><p><img src="https://s2.loli.net/2022/12/14/qDiF2r6YVQG3xso.png" alt="image-20221214001527848"></p><p><img src="https://s2.loli.net/2022/12/14/ZRg7soiCpBleJHv.png" alt="image-20221214001608811"></p><p>因为系统版本问题，页面显示可能有所不同，请找到”显示方向”选择相应方向即可更改。</p><h4 id="2、利用显卡或显示器旋转"><a href="#2、利用显卡或显示器旋转" class="headerlink" title="2、利用显卡或显示器旋转"></a>2、利用显卡或显示器旋转</h4><p>这个根据显卡不同，和显示器不同，是否支持和具体方法也不尽相同，由于上一个方法已经足够适用，故在此不赘述这个方法，有兴趣可自行百度。</p><h4 id="3、利用屏幕录制工具进行旋转呢-不爱折腾的可以不用"><a href="#3、利用屏幕录制工具进行旋转呢-不爱折腾的可以不用" class="headerlink" title="3、利用屏幕录制工具进行旋转呢(不爱折腾的可以不用)"></a>3、利用屏幕录制工具进行旋转呢(不爱折腾的可以不用)</h4><p>听了上述方法，可能有人觉得这种方法并不优雅，因为其并不能实现单独窗口的旋转。那么是否可以达到这种效果？</p><p>在查阅的部分博客后，我发现Windows是自带屏幕旋转的API的，包括python也有<code>Screen Rotate</code>的库，如果有大佬可以做一个软件那就太感谢了，但是对于向我这样的小白来说，采取了一种更为傻瓜式的做法，那就是利用窗口录制软件进行实时录制，然后再将录制的画面进行旋转即可，这里我们用到软件OBS Studio来演示。(当然这意味着你的电脑不能太卡)</p><p>当然你也可以用其他相似功能的软件，但是我强烈推荐OBS，免费还好用,关于OBS的使用教程<a href="https://www.bilibili.com/video/BV16i4y147oe/?vd_source=0cf100f40d6e892f3c398dd257aaeb68">点击这里</a>对于本次使用的功能，你并不需要完全了解所有功能仅需了解基本安装以及初次使用的配置即可，当然你也可以在百度上搜索其他教程。</p><p>我们打开OBS,初次使用建议选择”仅使用虚拟摄像机”</p><p><img src="https://s2.loli.net/2022/12/14/tEgbcD5zdkQpaVL.png" alt="image-20221214004131763"></p><p>点击”来源”中的加号，选择窗口采集。</p><p><img src="https://s2.loli.net/2022/12/14/trivX3WT76swh4I.png" alt="image-20221214004331854"></p><p>点击确定</p><p><img src="https://s2.loli.net/2022/12/14/Gyj1oxCWrObVFeR.png" alt="image-20221214004445132"></p><p>点击采集方式，如果此时你已经进入了视频会议，就会显示出钉钉会议。</p><p><img src="https://s2.loli.net/2022/12/14/libDN4362fj8TLd.png" alt="image-20221214005041425"></p><p>点击之后点击确定，发现在”来源”里多出一个东西。</p><p><img src="https://s2.loli.net/2022/12/14/rRml6jPcSntoGIY.png" alt="image-20221214005231169"></p><p>右击他，点击变换，就可以看到旋转多少度了。</p><p>之后可以在上面调整大小即可。</p><p>但是这个方法存在一个弊端，那就是钉钉的视频会议窗口如果被切屏，就会自动变成小窗，这时候屏幕采集就会卡住，也就是说你要保证没有页面处于全屏状态以保证钉钉没有启动小窗。</p><p>(如下图，第一张图显示的是正常状态，窗口并没有全屏，钉钉视频会议的窗口在右侧。第二张是窗口全屏后，发现小窗被启用，窗口采集无法正常适用)</p><p><img src="https://s2.loli.net/2022/12/14/ZG3tHQhOqnNUwkd.png" alt="image-20221214005822668"></p><p><img src="https://s2.loli.net/2022/12/14/XBlUwuoLFOn2ivy.png" alt="image-20221214010203883"></p><h4 id="4、利用工具人完成上述操作"><a href="#4、利用工具人完成上述操作" class="headerlink" title="4、利用工具人完成上述操作"></a>4、利用工具人完成上述操作</h4><p>如果你是老师，您并不想麻烦自己，但是又想给同学一个良好的学习环境，你可以让某个同学利用OBS的虚拟摄像机功能达到一人配置，造福全班的效果。</p><p>首先你要找一个同学(电脑好用一点的同学)，让他完成”3”中的操作。</p><p>当某人完成”3”中的所有操作后，点击右下角”控件”中的启动虚拟摄像机。</p><p>打开钉钉视频会议页面，点击设置，然后点击视频，继续点击摄像头，选择”OBS”开头的。</p><p><img src="https://s2.loli.net/2022/12/14/qrB3DUS4YAVeGMm.png" alt="image-20221214011937480"></p><p>之后我们让其他同学都看这位同学的屏幕，我们就可以看到翻转过来的老师的画面了。(当然你要让这位同学仔细阅读上文，不要切全屏，以保证所有同学的观看体验)</p><p>如果有老师需要技术支持，也欢迎到<a href="https://ccr39.github.io/">博客首页</a>获取我的联系方式，以联系我。(博客初次访问速度可能较慢，请大家耐心等待，长时间无反应可以刷新重试)</p><p>至此，我已经讲完了，欢迎大家阅读我的其他文章，也欢迎大家转发这篇博客给老师。如果有什么其他的好方法或者出现的问题，也可以在下方留言。(评论区的加载需要一段时间，如果你没有看到评论区，请稍等或刷新)</p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      多角度解决视频会议画面旋转问题，同时分享适用于电脑画面单个窗口旋转方法。
    
    </summary>
    
      <category term="技术" scheme="http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="杂谈" scheme="http://ccr39.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>浅谈我的学校</title>
    <link href="http://ccr39.github.io/%E7%94%9F%E6%B4%BB/about_school/"/>
    <id>http://ccr39.github.io/生活/about_school/</id>
    <published>2022-12-11T08:23:00.000Z</published>
    <updated>2023-01-07T02:15:47.222Z</updated>
    
    <content type="html"><![CDATA[<h3 id="我？"><a href="#我？" class="headerlink" title="我？"></a>我？</h3><p>本人就读衡水志臻清河校区(衡水二中的分校)。</p><h3 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h3><p>省略</p><h3 id="如何评价衡水志臻"><a href="#如何评价衡水志臻" class="headerlink" title="如何评价衡水志臻"></a>如何评价衡水志臻</h3><p>RT<br>请在评论留言</p><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><h4 id="清河志臻吧"><a href="#清河志臻吧" class="headerlink" title="清河志臻吧"></a><a href="https://tieba.baidu.com/f?kw=%E6%B8%85%E6%B2%B3%E5%BF%97%E8%87%BB&ie=utf-8">清河志臻吧</a></h4><h4 id="清河志臻二次元同学群"><a href="#清河志臻二次元同学群" class="headerlink" title="清河志臻二次元同学群"></a><a href="https://ccr39.github.io/ACGFUN-IN-QHZZ/index.html">清河志臻二次元同学群</a></h4><p>小游戏：<a href="https://ccr39.github.io/eathengshuizhizhen/EatKano-main/index.html">吃掉衡水志臻</a></p><h4 id="接住衡水志臻"><a href="#接住衡水志臻" class="headerlink" title="接住衡水志臻"></a><a href="https://ccr39.github.io/eathengshuizhizhen/jiezhuzz/index.html">接住衡水志臻</a></h4><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      关于我的学校
    
    </summary>
    
      <category term="生活" scheme="http://ccr39.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="杂谈" scheme="http://ccr39.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>ACGN插画(一)</title>
    <link href="http://ccr39.github.io/%E8%B5%84%E6%BA%90/ACGN%E6%8F%92%E7%94%BB(%E4%B8%80)/"/>
    <id>http://ccr39.github.io/资源/ACGN插画(一)/</id>
    <published>2022-12-11T04:56:00.000Z</published>
    <updated>2023-01-07T02:14:07.329Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i0.hdslb.com/bfs/album/8cd0aa9b7005ca16892b08c1c12801352c4a6591.jpg" alt="QQ图片20221211125142"></p><p><img src="https://i0.hdslb.com/bfs/album/8151665808cb163f97fe82a9246719b2d540aed5.png" alt="QQ图片20221211125127"></p><p><img src="https://i0.hdslb.com/bfs/album/def3cf63280490b4b714b1e79321e15bd15f5c66.png" alt="QQ图片20221211125131"></p><p><img src="https://i0.hdslb.com/bfs/album/17a668af096814bb2c2305545b2c192fccc62df4.jpg" alt="QQ图片20221211125135"></p><p><img src="https://i0.hdslb.com/bfs/album/96e394b7fa06a437681f0c64f6f12b7fc74af3ac.png" alt="QQ图片20221211125147"></p><p><img src="https://s2.loli.net/2022/12/11/TxtdR2hBFiE8Gpr.png" alt="QQ图片20221211125152"></p><p><img src="https://s2.loli.net/2022/12/11/kNfLAbcHuMOKamn.jpg" alt="QQ图片20221211125156"></p><p><img src="https://s2.loli.net/2022/12/11/kJyRYwaUMrcszCA.png" alt="QQ图片20221211125201"></p><p><img src="https://s2.loli.net/2022/12/11/1bZUfMDt2SmTK8v.jpg" alt="QQ图片20221211125030"></p><p><img src="https://s2.loli.net/2022/12/11/G9l7tNyqH31Lime.jpg" alt="QQ图片20221211125043"></p><p><img src="https://s2.loli.net/2022/12/11/kXdmRJ9z5FvPshH.png" alt="QQ图片20221211125115"></p><p><img src="https://s2.loli.net/2022/12/11/HkpJwh5ovfBZlxr.png" alt="QQ图片20221211125121"></p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      ACGN插画分享第一弹
    
    </summary>
    
      <category term="资源" scheme="http://ccr39.github.io/categories/%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="图集" scheme="http://ccr39.github.io/tags/%E5%9B%BE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>基础计数原理与排列组合</title>
    <link href="http://ccr39.github.io/%E8%BD%AC%E8%BD%BD/%E5%9F%BA%E7%A1%80%E8%AE%A1%E6%95%B0%E5%8E%9F%E7%90%86%E4%B8%8E%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/"/>
    <id>http://ccr39.github.io/转载/基础计数原理与排列组合/</id>
    <published>2022-12-10T16:00:00.000Z</published>
    <updated>2023-01-07T02:14:17.719Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、加法原理和乘法原理"><a href="#一、加法原理和乘法原理" class="headerlink" title="一、加法原理和乘法原理"></a>一、加法原理和乘法原理</h2><h3 id="1、定义："><a href="#1、定义：" class="headerlink" title="1、定义："></a>1、定义：</h3><h4 id="①加法原理："><a href="#①加法原理：" class="headerlink" title="①加法原理："></a>①加法原理：</h4><p>加法原理是分类计数原理，常用于排列组合中，具体是指：做一件事情，完成它有N类方式，第一类方式有$M_1$种方法，第二类方式有$M_2$种方法，……，第n类方式有Mn种方法，那么完成这件事情共有$M_1+M_2+……+M_n$种方法。</p><p>口诀：类类独立</p><h4 id="②乘法原理："><a href="#②乘法原理：" class="headerlink" title="②乘法原理："></a>②乘法原理：</h4><p>做一件事，完成它需要分成N个步骤，做第一步有$M_1$种不同的方法，做第二步有$M_2$种不同的方法，……，做第n步有$M_n$种不同的方法。那么完成这件事共有 $N&#x3D;M_1×M_2×M_3×…×M_n$ 种不同的方法。</p><p>口诀：步步相关</p><h3 id="2、例："><a href="#2、例：" class="headerlink" title="2、例："></a>2、例：</h3><p>（1）某中学八年级一班有12名男生，16名女生；二班有9名男生，17名女生。</p><p>问：</p><p>从这两个班的同学中，选择 1 名男生、1 名女生作为主持人。有几种选法?</p><p>利用乘法原理，总方案数等于 总男生数  *  总女生数</p><p>$ (12+9)* (16+17)&#x3D; 693 $</p><h3 id="3、模运算"><a href="#3、模运算" class="headerlink" title="3、模运算"></a>3、模运算</h3><p>在得数较大时，要每进行一步计算就取余。</p><p>模运算符合以下规律</p><p>（1）$$ (a-b)\%p&#x3D;(a\%p-b\%p)\%p$$</p><p>（2）$$ (a + b)\%p&#x3D;(a\%p+b\% p)\%p$$</p><p>（3）$$(a*b)\%p&#x3D;(a\%p*b\%p)\%p$$</p><p>（4）$$(a^b)\%p&#x3D;((a\%p)^b)\%p$$</p><h2 id="二、排列与组合"><a href="#二、排列与组合" class="headerlink" title="二、排列与组合"></a>二、排列与组合</h2><h4 id="1、排列数"><a href="#1、排列数" class="headerlink" title="1、排列数"></a>1、排列数</h4><p>定义：从 n 个人里面选出 m 个人站成一排，方案数是： n ⋅ (n − 1) ⋯ (n − m + 1) &#x3D; $ \frac{ n ! }{ (n-m)! } $。我们将它称为排列数。</p><p>排列数用 $A^m_n$ 表示“从 n 个元素里面取 m 个元素，排成一排的方案数”，也就是$ A^m_n $ &#x3D; $ \frac{ n ! }{ (n-m)! } $。</p><h3 id="2、组合数"><a href="#2、组合数" class="headerlink" title="2、组合数"></a>2、组合数</h3><h4 id="1-定义："><a href="#1-定义：" class="headerlink" title="(1) 定义："></a>(1) 定义：</h4><p>用 $C^m_n$ 表示“从 n 个元素里面选出 m 个元素”的方案数,我们将它称为组合数。</p><h4 id="2-公式"><a href="#2-公式" class="headerlink" title="(2) 公式:"></a>(2) 公式:</h4><p>组合数的递推公式，称为帕斯卡公式。</p><p>$C^m_n$ &#x3D; $C^{m-1}_{n-1}$ + $C^{m-1}_n$</p><p>$C^n_0$&#x3D;1 ; $C^n_n$&#x3D;1 ; $C^0_0$&#x3D;1<br>组合数的通项公式</p><p>$C^m_n$ &#x3D; $\frac{A_n^m}{A_m^m}$ &#x3D; $\frac{n\cdot(n-1)\cdot\cdot\cdot(n-m+1)}{m(m-1)\cdot\cdot\cdot2\cdot1}$ &#x3D; $\frac{n!}{m!\cdot(n-m)!}$<br>互补性质</p><p>$C_n^m&#x3D;C^{n-m}_n$</p><h4 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="(3) 代码实现"></a>(3) 代码实现</h4><p>①通项公式</p><pre><code class="cpp">long long fac(int n) &#123;     long long f=1;    for(int i=n;i&gt;0;i--)    f *= i;    return f;&#125;//求阶乘long long C(int n, int m) &#123;    return fac(n)/(fac(n - m)*fac(m));&#125;</code></pre><p>②递归公式</p><pre><code class="cpp">for (int i=0;i&lt;=21;i++) &#123;    C[i][0] = C[i][i] = 1;    for (int j=1;j&lt;i;j++)         C[i][j]=C[i-1][j]+C[i-1][j-1] ; //递推&#125;</code></pre><p>文章转载于<a href="https://www.luogu.com.cn/blog/ccr39/post-bi-ji-ji-chu-ji-shuo-yuan-li-yu-zu-ge-shuo">本人原博客</a></p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      排列组合的算法应用
    
    </summary>
    
      <category term="转载" scheme="http://ccr39.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="算法" scheme="http://ccr39.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数学" scheme="http://ccr39.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>hellow world</title>
    <link href="http://ccr39.github.io/%E6%8A%80%E6%9C%AF/hellow-world/"/>
    <id>http://ccr39.github.io/技术/hellow-world/</id>
    <published>2022-12-07T11:28:41.000Z</published>
    <updated>2023-01-07T03:17:22.887Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、博客介绍"><a href="#一、博客介绍" class="headerlink" title="一、博客介绍"></a>一、博客介绍</h3><p>经历了大概一个星期的搭建，本博客正式建立于2022&#x2F;12&#x2F;11。</p><p>博客采用的时hexo的框架以及<a href="https://github.com/honjun/hexo-theme-sakura">Sakura</a>的主题，感谢主题原作者以及修改者。</p><p>博客采用的是静态搭建，代码托管于github上。(这也直接导致了不进行代理时打开速度极慢)</p><p>至于为什么不用服务器并购买域名，你看我有这个钱吗。</p><p>未来预计会在gitee上进行镜像同步部署，以此来解决国内访问的问题。</p><h3 id="二、捣鼓博客的经历"><a href="#二、捣鼓博客的经历" class="headerlink" title="二、捣鼓博客的经历"></a>二、捣鼓博客的经历</h3><p>关于博客的搭建，走的过的坑可太多了。</p><p>最开始环境的配置一番风顺。</p><p>第一个踩坑的环节就是git的push超时的问题，经历一晚上的斗争，发现无论是是否使用代理，push总是超时，结果等到第二天，居然直接成功push。(所以说这既是玄学吗)</p><p>第二个环节就是主题的配置，Sakura主题原本是一个<a href="https://github.com/mashirozx/Sakura/">WordPress</a>主题，最初创建的时间大概是2017年(甚至更早)，hojun大佬把主题移植到hexo上，也是2018年的事情了，而且主题最后的维护在2019年，换句话说，我手上的主题，就是一个烂摊子，需要各种调试。于是我就开始来回穿梭于目录下的js文件，试图修改各种东西。</p><p>第三个环节就是自己新添加的功能上，添加评论区的过程比较顺利，就不提了，但是添加看板娘可太不容易了。首先第一个问题，就是垃圾的npm，使用npm下载资源包，疯狂报错，用修复指令修复，居然给我来了诋毁连环报错(是的，就是修完了他又让你修，循环下去)。最后我发现了利器yarn，先用<code>npm install -g yarn</code>安装，然后再用<code>yarn add</code>来下载资源包，彻底解决了报错的问题。</p><p>可这还没完，很快我就又发现了一个问题，就是在静态页面上不能直接链接到已有的文件。什么意思，打个比方，假如我有一个图片存在<code>.\img</code>目录中，当我在<code>index.html</code>中配置<code>src=&quot;.\img\图片.png&quot;</code>时无法加载。调用f12控制台，打开源码，可以发现目录下方并不存在图片，打开github的仓库，又发现文件存在于目录中，这个问题，至今未得到解决。最后我想到了用外链的方法，既然文件确实存在于github中，那么可以用<code>https://raw.githubusercontent.com/UeserID/仓库ID/master/img/图片.png</code>的方式调用(ps.如果你想问为什么不用图床，我想书评图片指的是一个例子，实际上是一个json文件)。但是这样调用的速度，只能说dddd了。</p><p>有别的方法吗，我尝试在gitee上用同样的方法，调用gitee的文件，但是令我没想到的是，居然毫无卵用。最后我发现能用cdn的方法加速，但是用jsdeliver有一个弊端，那就是有500mb的限制，不能直接在原仓库使用，最后我选择新建了一个仓库，至此终于结束。</p><p>最后就是图床的问题，我使用了sm.ms的api和picgo+typora的配置(至于为什么不用gitee图床，因为稳定性问题)</p><h3 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h3><p>总之虽然经历了很多东西，但是博客也算是建好了，也学到了不少东西，总的来说：<strong>值!</strong></p><link    rel="stylesheet"    href="https://unpkg.com/@waline/client@v2/dist/waline.css"  /><div id="waline"></div>  <script type="module">    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';    init({      el: '#waline',      serverURL: 'https://ccr39.cf/',       reaction: [    'https://i.328888.xyz/2022/12/09/f5ONE.jpeg',    'https://i.328888.xyz/2022/12/09/f5H4Q.jpeg',    'https://i.328888.xyz/2022/12/09/f5juP.md.jpeg',    'https://i.328888.xyz/2022/12/09/f5bhC.md.jpeg',  ],      emoji: [        '//unpkg.com/@waline/emojis@1.1.0/bilibili',        '//unpkg.com/@waline/emojis@1.1.0/weibo',        '//unpkg.com/@waline/emojis@1.1.0/qq',      ]    });  </script>]]></content>
    
    <summary type="html">
    
      博客成功搭建!!
    
    </summary>
    
      <category term="技术" scheme="http://ccr39.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="悦读" scheme="http://ccr39.github.io/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
</feed>
